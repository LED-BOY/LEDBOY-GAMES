
C:\Users\gross\AppData\Local\Temp\arduino_build_794927/LedBoyGamePackA_3.7.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vectors():
../../../../crt1/gcrt1.S:61
       0:	68 c1       	rjmp	.+720    	; 0x2d2 <__ctors_end>
       2:	00 00       	nop
../../../../crt1/gcrt1.S:67
       4:	9a c1       	rjmp	.+820    	; 0x33a <__bad_interrupt>
       6:	00 00       	nop
../../../../crt1/gcrt1.S:68
       8:	98 c1       	rjmp	.+816    	; 0x33a <__bad_interrupt>
       a:	00 00       	nop
../../../../crt1/gcrt1.S:69
       c:	0c 94 cd 08 	jmp	0x119a	; 0x119a <__vector_3>
../../../../crt1/gcrt1.S:70
      10:	94 c1       	rjmp	.+808    	; 0x33a <__bad_interrupt>
      12:	00 00       	nop
../../../../crt1/gcrt1.S:71
      14:	92 c1       	rjmp	.+804    	; 0x33a <__bad_interrupt>
      16:	00 00       	nop
../../../../crt1/gcrt1.S:72
      18:	90 c1       	rjmp	.+800    	; 0x33a <__bad_interrupt>
      1a:	00 00       	nop
../../../../crt1/gcrt1.S:73
      1c:	0c 94 71 09 	jmp	0x12e2	; 0x12e2 <__vector_7>
../../../../crt1/gcrt1.S:74
      20:	8c c1       	rjmp	.+792    	; 0x33a <__bad_interrupt>
      22:	00 00       	nop
../../../../crt1/gcrt1.S:75
      24:	8a c1       	rjmp	.+788    	; 0x33a <__bad_interrupt>
      26:	00 00       	nop
../../../../crt1/gcrt1.S:76
      28:	88 c1       	rjmp	.+784    	; 0x33a <__bad_interrupt>
      2a:	00 00       	nop
../../../../crt1/gcrt1.S:77
      2c:	86 c1       	rjmp	.+780    	; 0x33a <__bad_interrupt>
      2e:	00 00       	nop
../../../../crt1/gcrt1.S:78
      30:	84 c1       	rjmp	.+776    	; 0x33a <__bad_interrupt>
      32:	00 00       	nop
../../../../crt1/gcrt1.S:79
      34:	0c 94 25 09 	jmp	0x124a	; 0x124a <__vector_13>
../../../../crt1/gcrt1.S:80
      38:	80 c1       	rjmp	.+768    	; 0x33a <__bad_interrupt>
      3a:	00 00       	nop
../../../../crt1/gcrt1.S:81
      3c:	7e c1       	rjmp	.+764    	; 0x33a <__bad_interrupt>
      3e:	00 00       	nop
../../../../crt1/gcrt1.S:82
      40:	7c c1       	rjmp	.+760    	; 0x33a <__bad_interrupt>
      42:	00 00       	nop
../../../../crt1/gcrt1.S:83
      44:	7a c1       	rjmp	.+756    	; 0x33a <__bad_interrupt>
      46:	00 00       	nop
../../../../crt1/gcrt1.S:84
      48:	78 c1       	rjmp	.+752    	; 0x33a <__bad_interrupt>
      4a:	00 00       	nop
../../../../crt1/gcrt1.S:85
      4c:	76 c1       	rjmp	.+748    	; 0x33a <__bad_interrupt>
      4e:	00 00       	nop
../../../../crt1/gcrt1.S:86
      50:	74 c1       	rjmp	.+744    	; 0x33a <__bad_interrupt>
      52:	00 00       	nop
../../../../crt1/gcrt1.S:87
      54:	72 c1       	rjmp	.+740    	; 0x33a <__bad_interrupt>
      56:	00 00       	nop
../../../../crt1/gcrt1.S:88
      58:	70 c1       	rjmp	.+736    	; 0x33a <__bad_interrupt>
      5a:	00 00       	nop
../../../../crt1/gcrt1.S:89
      5c:	6e c1       	rjmp	.+732    	; 0x33a <__bad_interrupt>
      5e:	00 00       	nop
../../../../crt1/gcrt1.S:90
      60:	6c c1       	rjmp	.+728    	; 0x33a <__bad_interrupt>
      62:	00 00       	nop
../../../../crt1/gcrt1.S:91
      64:	6a c1       	rjmp	.+724    	; 0x33a <__bad_interrupt>
      66:	00 00       	nop
../../../../crt1/gcrt1.S:92
      68:	68 c1       	rjmp	.+720    	; 0x33a <__bad_interrupt>
      6a:	00 00       	nop
../../../../crt1/gcrt1.S:93
      6c:	66 c1       	rjmp	.+716    	; 0x33a <__bad_interrupt>
      6e:	00 00       	nop
../../../../crt1/gcrt1.S:94
      70:	64 c1       	rjmp	.+712    	; 0x33a <__bad_interrupt>
      72:	00 00       	nop
../../../../crt1/gcrt1.S:95
      74:	62 c1       	rjmp	.+708    	; 0x33a <__bad_interrupt>
      76:	00 00       	nop
../../../../crt1/gcrt1.S:96
      78:	60 c1       	rjmp	.+704    	; 0x33a <__bad_interrupt>
	...

0000007c <__trampolines_end>:
__trampolines_start():
      7c:	09 02       	muls	r16, r25
      7e:	04 06       	cpc	r0, r20
      80:	0b 0d       	add	r16, r11
      82:	0f 11       	cpse	r16, r15
      84:	18 09       	Address 0x00000084 is out of bounds.
.word	0xffff	; ????

00000085 <enemies7>:
      85:	09 01 03 05 0b 0d 0f 16 18                          .........

0000008e <enemies6>:
      8e:	0a 02 04 06 0b 0d 0f 11 16 1a                       ..........

00000098 <enemies5>:
      98:	08 0b 0d 0f 11 16 18 1a                             ........

000000a0 <enemies4>:
      a0:	08 03 05 0c 0e 10 17 19                             ........

000000a8 <enemies3>:
      a8:	08 02 04 06 0d 0f 17 19                             ........

000000b0 <enemies2>:
      b0:	0a 02 04 06 0c 0e 10 16 18 1a                       ..........

000000ba <enemies1>:
      ba:	0a 02 06 0b 0d 0f 11 16 18 1a                       ..........

000000c4 <enemies0>:
      c4:	09 02 04 06 0d 0f 16 18 1a                          .........

000000cd <tetromino5B>:
      cd:	05 01 0a 0b 14                                      .....

000000d2 <tetromino5A>:
      d2:	05 00 01 0b 0c                                      .....

000000d7 <tetromino4A>:
      d7:	05 01 0a 0b 0c                                      .....

000000dc <tetromino4B>:
      dc:	05 01 0a 0b 15                                      .....

000000e1 <tetromino4C>:
      e1:	05 00 01 02 0b                                      .....

000000e6 <tetromino4D>:
      e6:	05 01 0b 0c 15                                      .....

000000eb <tetromino2A>:
      eb:	05 00 01 0a 0b                                      .....

000000f0 <tetromino1B>:
      f0:	05 02 0a 0b 0c                                      .....

000000f5 <tetromino1C>:
      f5:	05 00 01 0b 15                                      .....

000000fa <tetromino1D>:
      fa:	05 00 01 02 0a                                      .....

000000ff <wall5>:
      ff:	09 00 0a 14 1e 28 32 50 5a 3c 46                    .....(2PZ<F

0000010a <wall4>:
     10a:	09 00 0a 14 1e 28 46 50 5a 32 3c                    .....(FPZ2<

00000115 <wall3>:
     115:	09 00 0a 14 32 3c 46 50 5a 1e 28                    ....2<FPZ.(

00000120 <wall2>:
     120:	09 00 0a 28 32 3c 46 50 5a 14 1e                    ...(2<FPZ..

0000012b <wall1>:
     12b:	09 00 0a 14 1e 3c 46 50 5a 28 32                    .....<FPZ(2

00000136 <number9>:
     136:	0b 00 01 02 0a 0c 14 15 16 20 2a                    ......... *

00000141 <number8>:
     141:	0e 00 01 02 0a 0c 14 15 16 1e 20 28 29 2a           .......... ()*

0000014f <number7>:
     14f:	08 00 01 02 0c 16 20 2a                             ...... *

00000157 <number6>:
     157:	0b 00 0a 14 15 16 1e 20 28 29 2a                    ....... ()*

00000162 <number5>:
     162:	0c 00 01 02 0a 14 15 16 20 28 29 2a                 ........ ()*

0000016e <number4>:
     16e:	0a 00 02 0a 0c 14 15 16 20 2a                       ........ *

00000178 <number3>:
     178:	0c 00 01 02 0c 14 15 16 20 28 29 2a                 ........ ()*

00000184 <letterF>:
     184:	0a 00 01 02 0a 14 15 16 1e 28                       .........(

0000018e <number0>:
     18e:	0d 00 01 02 0a 0c 14 16 1e 20 28 29 2a              ......... ()*

0000019b <letterM>:
     19b:	0c 00 02 0a 0b 0c 14 16 1e 20 28 2a                 ......... (*

000001a7 <letterH>:
     1a7:	0c 00 02 0a 0c 14 15 16 1e 20 28 2a                 ......... (*

000001b3 <letterR>:
     1b3:	0b 00 01 0a 0c 14 15 1e 20 28 2a                    ........ (*

000001be <letterB>:
     1be:	0b 00 01 0a 0c 14 15 1e 20 28 29                    ........ ()

000001c9 <letterO>:
     1c9:	09 01 0a 0c 14 16 1e 20 29                          ....... )

000001d2 <letterC>:
     1d2:	08 01 02 0a 14 1e 29 2a                             ......)*

000001da <letterD>:
     1da:	0b 00 01 0a 0c 14 16 1e 20 28 29                    ........ ()

000001e5 <letterT>:
     1e5:	08 00 01 02 0b 15 1f 29                             .......)

000001ed <arrowRight>:
     1ed:	06 00 0b 16 1f 28                                   .....(

000001f3 <arrowLeft>:
     1f3:	06 02 0b 14 1f 2a                                   .....*

000001f9 <playerShipDead>:
     1f9:	05 0b 00 01 02                                      .....

000001fe <playerShip>:
     1fe:	05 01 0a 0b 0c                                      .....

00000203 <tetromino3A>:
     203:	04 00 0a 14                                         ....

00000207 <tetromino3B>:
     207:	04 00 01 02                                         ....

0000020b <wallRight>:
     20b:	09 13 1d 27 31 3b 45 4f 59 63                       ...'1;EOYc

00000215 <wallLeft>:
     215:	00 0a 14 1e 28 32 3c 46 50 5a                       ....(2<FPZ

0000021f <tetromino1A>:
     21f:	05 00 0a 14 15                                      .....

00000224 <walls>:
     224:	2b 01 20 01 15 01 0a 01 ff 00                       +. .......

0000022e <number2>:
     22e:	0c 00 01 02 0c 14 15 16 1e 28 29 2a                 .........()*

0000023a <number1>:
     23a:	06 02 0c 16 20 2a                                   .... *

00000240 <letterN>:
     240:	0c 00 01 02 0a 0c 14 16 1e 20 28 2a                 ......... (*

0000024c <letterI>:
     24c:	05 01 15 1f 29                                      ....)

00000251 <letterW>:
     251:	0c 00 02 0a 0c 14 16 1e 1f 20 28 2a                 ......... (*

0000025d <screenLeftBounds>:
     25d:	00 0a 14 1e 28 32 3c 46 50 5a                       ....(2<FPZ

00000267 <screenRightBounds>:
     267:	09 13 1d 27 31 3b 45 4f 59 63                       ...'1;EOYc

00000271 <playerPlatform>:
     271:	04 00 01 02                                         ....

00000275 <blocks>:
     275:	19 0b 0c 0d 0e 0f 10 11 12 15 16 17 18 19 1a 1b     ................
     285:	1c 1f 20 21 22 23 24 25 26                          .. !"#$%&

0000028e <letterP>:
     28e:	09 00 01 0a 0c 14 15 1e 28                          ........(

00000297 <letterL>:
     297:	08 00 0a 14 1e 28 29 2a                             .....()*

0000029f <letterE>:
     29f:	0c 00 01 02 0a 14 15 16 1e 28 29 2a                 .........()*

000002ab <letterS>:
     2ab:	08 01 02 0a 15 20 28 29                             ..... ()

000002b3 <number>:
     2b3:	8e 01 3a 02 2e 02 78 01 6e 01 62 01 57 01 4f 01     ..:...x.n.b.W.O.
     2c3:	41 01 36 01                                         A.6.

000002c7 <enemySpeed>:
     2c7:	fa 00 32 00 64 00 96 00 00                          ..2.d....

000002d0 <__ctors_start>:
__ctors_start():
     2d0:	db 19       	sub	r29, r11

000002d2 <__ctors_end>:
__dtors_end():
../../../../crt1/gcrt1.S:230
     2d2:	11 24       	eor	r1, r1
../../../../crt1/gcrt1.S:231
     2d4:	1f be       	out	0x3f, r1	; 63
../../../../crt1/gcrt1.S:232
     2d6:	cf ef       	ldi	r28, 0xFF	; 255
../../../../crt1/gcrt1.S:234
     2d8:	cd bf       	out	0x3d, r28	; 61
../../../../crt1/gcrt1.S:236
     2da:	df e3       	ldi	r29, 0x3F	; 63
../../../../crt1/gcrt1.S:237
     2dc:	de bf       	out	0x3e, r29	; 62

000002de <_initThreeStuff()>:
_Z15_initThreeStuffv():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/main.cpp:104

  /* Minimum: Reset if we wound up here through malfunction - this relies on user clearing the  *
   * register on startup, which is rarely done in Arduino land.                                 */
  void __attribute__((weak)) init_reset_flags() ;
  void __attribute__((weak)) init_reset_flags() {
    uint8_t flags = RSTCTRL.RSTFR;
     2de:	80 91 40 00 	lds	r24, 0x0040	; 0x800040 <encoderDir+0x7f495c>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/main.cpp:105
    RSTCTRL.RSTFR = flags;
     2e2:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <encoderDir+0x7f495c>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/main.cpp:106
    if (flags == 0) {
     2e6:	81 11       	cpse	r24, r1
     2e8:	05 c0       	rjmp	.+10     	; 0x2f4 <_initThreeStuff()+0x16>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/main.cpp:107
      _PROTECTED_WRITE(RSTCTRL.SWRR, 1);
     2ea:	98 ed       	ldi	r25, 0xD8	; 216
     2ec:	21 e0       	ldi	r18, 0x01	; 1
     2ee:	94 bf       	out	0x34, r25	; 52
     2f0:	20 93 41 00 	sts	0x0041, r18	; 0x800041 <encoderDir+0x7f495d>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/main.cpp:109
    }
    GPIOR0 = flags;
     2f4:	8c bb       	out	0x1c, r24	; 28

000002f6 <__do_copy_data>:
__do_copy_data():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2409
     2f6:	1a e3       	ldi	r17, 0x3A	; 58
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
     2f8:	a0 e0       	ldi	r26, 0x00	; 0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
     2fa:	b8 e3       	ldi	r27, 0x38	; 56
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
     2fc:	e4 ef       	ldi	r30, 0xF4	; 244
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
     2fe:	f6 e3       	ldi	r31, 0x36	; 54
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
     300:	02 c0       	rjmp	.+4      	; 0x306 <__do_copy_data+0x10>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2417
     302:	05 90       	lpm	r0, Z+
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2422
     304:	0d 92       	st	X+, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2424
     306:	a6 32       	cpi	r26, 0x26	; 38
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
     308:	b1 07       	cpc	r27, r17
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
     30a:	d9 f7       	brne	.-10     	; 0x302 <__do_copy_data+0xc>

0000030c <__do_clear_bss>:
__do_clear_bss():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
     30c:	2b e3       	ldi	r18, 0x3B	; 59
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
     30e:	a6 e2       	ldi	r26, 0x26	; 38
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
     310:	ba e3       	ldi	r27, 0x3A	; 58
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
     312:	01 c0       	rjmp	.+2      	; 0x316 <.do_clear_bss_start>

00000314 <.do_clear_bss_loop>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
     314:	1d 92       	st	X+, r1

00000316 <.do_clear_bss_start>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
     316:	a7 39       	cpi	r26, 0x97	; 151
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
     318:	b2 07       	cpc	r27, r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
     31a:	e1 f7       	brne	.-8      	; 0x314 <.do_clear_bss_loop>

0000031c <__do_global_ctors>:
__do_global_ctors():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
     31c:	11 e0       	ldi	r17, 0x01	; 1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
     31e:	c9 e6       	ldi	r28, 0x69	; 105
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
     320:	d1 e0       	ldi	r29, 0x01	; 1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
     322:	04 c0       	rjmp	.+8      	; 0x32c <__do_global_ctors+0x10>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
     324:	21 97       	sbiw	r28, 0x01	; 1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
     326:	fe 01       	movw	r30, r28
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
     328:	0e 94 46 1b 	call	0x368c	; 0x368c <__tablejump2__>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
     32c:	c8 36       	cpi	r28, 0x68	; 104
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
     32e:	d1 07       	cpc	r29, r17
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
     330:	c9 f7       	brne	.-14     	; 0x324 <__do_global_ctors+0x8>
../../../../crt1/gcrt1.S:314
     332:	0e 94 b9 09 	call	0x1372	; 0x1372 <main>
../../../../crt1/gcrt1.S:315
     336:	0c 94 53 1b 	jmp	0x36a6	; 0x36a6 <_exit>

0000033a <__bad_interrupt>:
__vector_22():
../../../../crt1/gcrt1.S:209
     33a:	62 ce       	rjmp	.-828    	; 0x0 <__vectors>

0000033c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>:
_ZN12tinyNeoPixel13setPixelColorEjhhh.constprop.15():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1080
  pinMask = digitalPinToBitMask(p);
}

// Set pixel color from separate R,G,B components:
void tinyNeoPixel::setPixelColor(uint16_t n, uint8_t r, uint8_t g, uint8_t b) {
  if (n < numLEDs) {
     33c:	e0 91 84 3b 	lds	r30, 0x3B84	; 0x803b84 <strip>
     340:	f0 91 85 3b 	lds	r31, 0x3B85	; 0x803b85 <strip+0x1>
     344:	8e 17       	cp	r24, r30
     346:	9f 07       	cpc	r25, r31
     348:	98 f5       	brcc	.+102    	; 0x3b0 <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]+0x74>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1081
    if (brightness) { // See notes in setBrightness()
     34a:	30 91 89 3b 	lds	r19, 0x3B89	; 0x803b89 <strip+0x5>
     34e:	33 23       	and	r19, r19
     350:	61 f0       	breq	.+24     	; 0x36a <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]+0x2e>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1082
      r = (r * brightness) >> 8;
     352:	63 9f       	mul	r22, r19
     354:	b0 01       	movw	r22, r0
     356:	11 24       	eor	r1, r1
     358:	67 2f       	mov	r22, r23
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1083
      g = (g * brightness) >> 8;
     35a:	34 9f       	mul	r19, r20
     35c:	a0 01       	movw	r20, r0
     35e:	11 24       	eor	r1, r1
     360:	45 2f       	mov	r20, r21
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1084
      b = (b * brightness) >> 8;
     362:	32 9f       	mul	r19, r18
     364:	90 01       	movw	r18, r0
     366:	11 24       	eor	r1, r1
     368:	23 2f       	mov	r18, r19
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1087
    }
    uint8_t *p;
    if (wOffset == rOffset) { // Is an RGB-type strip
     36a:	30 91 8f 3b 	lds	r19, 0x3B8F	; 0x803b8f <strip+0xb>
     36e:	e0 91 8a 3b 	lds	r30, 0x3B8A	; 0x803b8a <strip+0x6>
     372:	f0 91 8b 3b 	lds	r31, 0x3B8B	; 0x803b8b <strip+0x7>
     376:	50 91 8c 3b 	lds	r21, 0x3B8C	; 0x803b8c <strip+0x8>
     37a:	35 13       	cpse	r19, r21
     37c:	1a c0       	rjmp	.+52     	; 0x3b2 <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]+0x76>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1088
      p = &pixels[n * 3];    // 3 bytes per pixel
     37e:	dc 01       	movw	r26, r24
     380:	aa 0f       	add	r26, r26
     382:	bb 1f       	adc	r27, r27
     384:	8a 0f       	add	r24, r26
     386:	9b 1f       	adc	r25, r27
     388:	8e 0f       	add	r24, r30
     38a:	9f 1f       	adc	r25, r31
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1093
    } else {                 // Is a WRGB-type strip
      p = &pixels[n * 4];    // 4 bytes per pixel
      p[wOffset] = 0;        // But only R,G,B passed -- set W to 0
    }
    p[rOffset] = r;          // R,G,B always stored
     38c:	e0 91 8c 3b 	lds	r30, 0x3B8C	; 0x803b8c <strip+0x8>
     390:	e8 0f       	add	r30, r24
     392:	f9 2f       	mov	r31, r25
     394:	f1 1d       	adc	r31, r1
     396:	60 83       	st	Z, r22
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1094
    p[gOffset] = g;
     398:	e0 91 8d 3b 	lds	r30, 0x3B8D	; 0x803b8d <strip+0x9>
     39c:	e8 0f       	add	r30, r24
     39e:	f9 2f       	mov	r31, r25
     3a0:	f1 1d       	adc	r31, r1
     3a2:	40 83       	st	Z, r20
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1095
    p[bOffset] = b;
     3a4:	30 91 8e 3b 	lds	r19, 0x3B8E	; 0x803b8e <strip+0xa>
     3a8:	83 0f       	add	r24, r19
     3aa:	91 1d       	adc	r25, r1
     3ac:	fc 01       	movw	r30, r24
     3ae:	20 83       	st	Z, r18
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1097
  }
}
     3b0:	08 95       	ret
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1090
    }
    uint8_t *p;
    if (wOffset == rOffset) { // Is an RGB-type strip
      p = &pixels[n * 3];    // 3 bytes per pixel
    } else {                 // Is a WRGB-type strip
      p = &pixels[n * 4];    // 4 bytes per pixel
     3b2:	88 0f       	add	r24, r24
     3b4:	99 1f       	adc	r25, r25
     3b6:	88 0f       	add	r24, r24
     3b8:	99 1f       	adc	r25, r25
     3ba:	8e 0f       	add	r24, r30
     3bc:	9f 1f       	adc	r25, r31
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1091
      p[wOffset] = 0;        // But only R,G,B passed -- set W to 0
     3be:	fc 01       	movw	r30, r24
     3c0:	e3 0f       	add	r30, r19
     3c2:	f1 1d       	adc	r31, r1
     3c4:	10 82       	st	Z, r1
     3c6:	e2 cf       	rjmp	.-60     	; 0x38c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]+0x50>

000003c8 <tinyNeoPixel::setBrightness(unsigned char) [clone .constprop.6]>:
_ZN12tinyNeoPixel13setBrightnessEh.constprop.6():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1343
// and scale it (subsequent graphics commands also work at this
// brightness level).  If there's a significant step up in brightness,
// the limited number of steps (quantization) in the old data will be
// quite visible in the re-scaled version.  For a non-destructive
// change, you'll need to re-render the full strip data.
void tinyNeoPixel::setBrightness(uint8_t b) {
     3c8:	1f 93       	push	r17
     3ca:	cf 93       	push	r28
     3cc:	df 93       	push	r29
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1350
  // This simplifies the actual scaling math later, allowing a fast
  // 8x8-bit multiply and taking the MSB.  'brightness' is a uint8_t,
  // adding 1 here may (intentionally) roll over...so 0 = max brightness
  // (color values are interpreted literally; no scaling), 1 = min
  // brightness (off), 255 = just below max brightness.
  uint8_t newBrightness = b + 1;
     3ce:	11 e0       	ldi	r17, 0x01	; 1
     3d0:	18 0f       	add	r17, r24
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1351
  if (newBrightness != brightness) { // Compare against prior value
     3d2:	20 91 89 3b 	lds	r18, 0x3B89	; 0x803b89 <strip+0x5>
     3d6:	12 17       	cp	r17, r18
     3d8:	a9 f1       	breq	.+106    	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1354
    // Brightness has changed -- re-scale existing data in RAM
    uint8_t  c,
            *ptr           = pixels,
     3da:	c0 91 8a 3b 	lds	r28, 0x3B8A	; 0x803b8a <strip+0x6>
     3de:	d0 91 8b 3b 	lds	r29, 0x3B8B	; 0x803b8b <strip+0x7>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1355
             oldBrightness = brightness - 1; // De-wrap old brightness value
     3e2:	21 50       	subi	r18, 0x01	; 1
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1358
    uint16_t scale;
    if (oldBrightness == 0) {
      scale = 0;  // Avoid /0
     3e4:	70 e0       	ldi	r23, 0x00	; 0
     3e6:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1357
    // Brightness has changed -- re-scale existing data in RAM
    uint8_t  c,
            *ptr           = pixels,
             oldBrightness = brightness - 1; // De-wrap old brightness value
    uint16_t scale;
    if (oldBrightness == 0) {
     3e8:	61 f0       	breq	.+24     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1359
      scale = 0;  // Avoid /0
    } else if (b == 255) {
     3ea:	8f 3f       	cpi	r24, 0xFF	; 255
     3ec:	f9 f4       	brne	.+62     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1360
      scale = 65535 / oldBrightness;
     3ee:	30 e0       	ldi	r19, 0x00	; 0
     3f0:	50 e0       	ldi	r21, 0x00	; 0
     3f2:	40 e0       	ldi	r20, 0x00	; 0
     3f4:	6f ef       	ldi	r22, 0xFF	; 255
     3f6:	7f ef       	ldi	r23, 0xFF	; 255
     3f8:	80 e0       	ldi	r24, 0x00	; 0
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	0e 94 b6 1a 	call	0x356c	; 0x356c <__divmodsi4>
     400:	b9 01       	movw	r22, r18
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1354
  // brightness (off), 255 = just below max brightness.
  uint8_t newBrightness = b + 1;
  if (newBrightness != brightness) { // Compare against prior value
    // Brightness has changed -- re-scale existing data in RAM
    uint8_t  c,
            *ptr           = pixels,
     402:	fe 01       	movw	r30, r28
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1364
    } else if (b == 255) {
      scale = 65535 / oldBrightness;
    } else {
      scale = (((uint16_t)newBrightness << 8) - 1) / oldBrightness;
    }
    for (uint16_t i = 0; i < numBytes; i++) {
     404:	40 91 86 3b 	lds	r20, 0x3B86	; 0x803b86 <strip+0x2>
     408:	50 91 87 3b 	lds	r21, 0x3B87	; 0x803b87 <strip+0x3>
     40c:	cf 01       	movw	r24, r30
     40e:	8c 1b       	sub	r24, r28
     410:	9d 0b       	sbc	r25, r29
     412:	84 17       	cp	r24, r20
     414:	95 07       	cpc	r25, r21
     416:	a0 f4       	brcc	.+40     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1366
      c      = *ptr;
      *ptr++ = (c * scale) >> 8;
     418:	df 01       	movw	r26, r30
     41a:	4d 91       	ld	r20, X+
     41c:	46 9f       	mul	r20, r22
     41e:	c0 01       	movw	r24, r0
     420:	47 9f       	mul	r20, r23
     422:	90 0d       	add	r25, r0
     424:	11 24       	eor	r1, r1
     426:	90 83       	st	Z, r25
     428:	fd 01       	movw	r30, r26
     42a:	ec cf       	rjmp	.-40     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1362
    if (oldBrightness == 0) {
      scale = 0;  // Avoid /0
    } else if (b == 255) {
      scale = 65535 / oldBrightness;
    } else {
      scale = (((uint16_t)newBrightness << 8) - 1) / oldBrightness;
     42c:	81 2f       	mov	r24, r17
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	98 2f       	mov	r25, r24
     432:	88 27       	eor	r24, r24
     434:	01 97       	sbiw	r24, 0x01	; 1
     436:	62 2f       	mov	r22, r18
     438:	70 e0       	ldi	r23, 0x00	; 0
     43a:	0e 94 1f 1b 	call	0x363e	; 0x363e <__udivmodhi4>
     43e:	e1 cf       	rjmp	.-62     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1368
    }
    for (uint16_t i = 0; i < numBytes; i++) {
      c      = *ptr;
      *ptr++ = (c * scale) >> 8;
    }
    brightness = newBrightness;
     440:	10 93 89 3b 	sts	0x3B89, r17	; 0x803b89 <strip+0x5>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1370
  }
}
     444:	df 91       	pop	r29
     446:	cf 91       	pop	r28
     448:	1f 91       	pop	r17
     44a:	08 95       	ret

0000044c <tinyNeoPixel::show() [clone .part.1] [clone .constprop.1]>:
_ZN12tinyNeoPixel4showEv.part.1.constprop.1():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:74
  // if (pixels)   free(pixels);
  // if (pin >= 0) pinMode(pin, INPUT);
}

// *INDENT-OFF*   astyle don't like assembly
void tinyNeoPixel::show(void) {
     44c:	cf 93       	push	r28
     44e:	df 93       	push	r29
     450:	cd b7       	in	r28, 0x3d	; 61
     452:	de b7       	in	r29, 0x3e	; 62
     454:	27 97       	sbiw	r28, 0x07	; 7
     456:	cd bf       	out	0x3d, r28	; 61
     458:	de bf       	out	0x3e, r29	; 62
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:137
  //   * b (bit number for speeds that don't have to unroll the loop)
  //     is given constraint "+r", which can assign it to any register.
  //     But the code uses LDI on it. LDI doesn't work on every register,
  //     it must have the "+d" constraint to guarantee an upper register.

  noInterrupts(); // Need 100% focus on instruction timing
     45a:	f8 94       	cli
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:147
  // Dx-series parts. This is by no means intended to imply that they will
  // run at those speeds, only that - if they do - you can control WS2812s
  // with them.

  volatile uint16_t
    i   = numBytes; // Loop counter
     45c:	80 91 86 3b 	lds	r24, 0x3B86	; 0x803b86 <strip+0x2>
     460:	90 91 87 3b 	lds	r25, 0x3B87	; 0x803b87 <strip+0x3>
     464:	89 83       	std	Y+1, r24	; 0x01
     466:	9a 83       	std	Y+2, r25	; 0x02
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:149
  volatile uint8_t
   *ptr = pixels,   // Pointer to next byte
     468:	a0 91 8a 3b 	lds	r26, 0x3B8A	; 0x803b8a <strip+0x6>
     46c:	b0 91 8b 3b 	lds	r27, 0x3B8B	; 0x803b8b <strip+0x7>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:150
    b   = *ptr++,   // Current byte value
     470:	fd 01       	movw	r30, r26
     472:	31 96       	adiw	r30, 0x01	; 1
     474:	8c 91       	ld	r24, X
     476:	8f 83       	std	Y+7, r24	; 0x07
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:381


  // 8 MHz(ish) AVRxt ---------------------------------------------------------
  #elif (F_CPU >= 7400000UL) && (F_CPU <= 9500000UL)

    volatile uint8_t n1, n2 = 0;  // First, next bits out
     478:	1b 82       	std	Y+3, r1	; 0x03
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:389
    // to meet timing constraints here.

    // 10 instruction clocks per bit: HHxxxxxLLL
    // OUT instructions:              ^ ^    ^   (T=0,2,7)

    hi   = *port |  pinMask;
     47a:	a0 91 94 3b 	lds	r26, 0x3B94	; 0x803b94 <strip+0x10>
     47e:	b0 91 95 3b 	lds	r27, 0x3B95	; 0x803b95 <strip+0x11>
     482:	9c 91       	ld	r25, X
     484:	80 91 96 3b 	lds	r24, 0x3B96	; 0x803b96 <strip+0x12>
     488:	98 2b       	or	r25, r24
     48a:	9e 83       	std	Y+6, r25	; 0x06
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:390
    lo   = *port & ~pinMask;
     48c:	9c 91       	ld	r25, X
     48e:	80 95       	com	r24
     490:	89 23       	and	r24, r25
     492:	8d 83       	std	Y+5, r24	; 0x05
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:391
    n1 = lo;
     494:	8d 81       	ldd	r24, Y+5	; 0x05
     496:	8c 83       	std	Y+4, r24	; 0x04
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:392
    if (b & 0x80) n1 = hi;
     498:	8f 81       	ldd	r24, Y+7	; 0x07
     49a:	87 ff       	sbrs	r24, 7
     49c:	02 c0       	rjmp	.+4      	; 0x4a2 <tinyNeoPixel::show() [clone .part.1] [clone .constprop.1]+0x56>
     49e:	8e 81       	ldd	r24, Y+6	; 0x06
     4a0:	8c 83       	std	Y+4, r24	; 0x04
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:481
      [n1]    "+r" (n1),
      [n2]    "+r" (n2),
      [count] "+w" (i)
    : [port]   "e" (port),
      [hi]     "r" (hi),
      [lo]     "r" (lo));
     4a2:	5e 81       	ldd	r21, Y+6	; 0x06
     4a4:	6d 81       	ldd	r22, Y+5	; 0x05
     4a6:	4f 81       	ldd	r20, Y+7	; 0x07
     4a8:	3c 81       	ldd	r19, Y+4	; 0x04
     4aa:	2b 81       	ldd	r18, Y+3	; 0x03
     4ac:	89 81       	ldd	r24, Y+1	; 0x01
     4ae:	9a 81       	ldd	r25, Y+2	; 0x02

000004b0 <headD>:
     4b0:	5c 93       	st	X, r21
     4b2:	26 2f       	mov	r18, r22
     4b4:	3c 93       	st	X, r19
     4b6:	00 c0       	rjmp	.+0      	; 0x4b8 <headD+0x8>
     4b8:	46 fd       	sbrc	r20, 6
     4ba:	25 2f       	mov	r18, r21
     4bc:	6c 93       	st	X, r22
     4be:	00 c0       	rjmp	.+0      	; 0x4c0 <headD+0x10>
     4c0:	5c 93       	st	X, r21
     4c2:	36 2f       	mov	r19, r22
     4c4:	2c 93       	st	X, r18
     4c6:	00 c0       	rjmp	.+0      	; 0x4c8 <headD+0x18>
     4c8:	45 fd       	sbrc	r20, 5
     4ca:	35 2f       	mov	r19, r21
     4cc:	6c 93       	st	X, r22
     4ce:	00 c0       	rjmp	.+0      	; 0x4d0 <headD+0x20>
     4d0:	5c 93       	st	X, r21
     4d2:	26 2f       	mov	r18, r22
     4d4:	3c 93       	st	X, r19
     4d6:	00 c0       	rjmp	.+0      	; 0x4d8 <headD+0x28>
     4d8:	44 fd       	sbrc	r20, 4
     4da:	25 2f       	mov	r18, r21
     4dc:	6c 93       	st	X, r22
     4de:	00 c0       	rjmp	.+0      	; 0x4e0 <headD+0x30>
     4e0:	5c 93       	st	X, r21
     4e2:	36 2f       	mov	r19, r22
     4e4:	2c 93       	st	X, r18
     4e6:	00 c0       	rjmp	.+0      	; 0x4e8 <headD+0x38>
     4e8:	43 fd       	sbrc	r20, 3
     4ea:	35 2f       	mov	r19, r21
     4ec:	6c 93       	st	X, r22
     4ee:	00 c0       	rjmp	.+0      	; 0x4f0 <headD+0x40>
     4f0:	5c 93       	st	X, r21
     4f2:	26 2f       	mov	r18, r22
     4f4:	3c 93       	st	X, r19
     4f6:	00 c0       	rjmp	.+0      	; 0x4f8 <headD+0x48>
     4f8:	42 fd       	sbrc	r20, 2
     4fa:	25 2f       	mov	r18, r21
     4fc:	6c 93       	st	X, r22
     4fe:	00 c0       	rjmp	.+0      	; 0x500 <headD+0x50>
     500:	5c 93       	st	X, r21
     502:	36 2f       	mov	r19, r22
     504:	2c 93       	st	X, r18
     506:	00 c0       	rjmp	.+0      	; 0x508 <headD+0x58>
     508:	41 fd       	sbrc	r20, 1
     50a:	35 2f       	mov	r19, r21
     50c:	6c 93       	st	X, r22
     50e:	00 c0       	rjmp	.+0      	; 0x510 <headD+0x60>
     510:	5c 93       	st	X, r21
     512:	26 2f       	mov	r18, r22
     514:	3c 93       	st	X, r19
     516:	00 c0       	rjmp	.+0      	; 0x518 <headD+0x68>
     518:	40 fd       	sbrc	r20, 0
     51a:	25 2f       	mov	r18, r21
     51c:	6c 93       	st	X, r22
     51e:	01 97       	sbiw	r24, 0x01	; 1
     520:	5c 93       	st	X, r21
     522:	36 2f       	mov	r19, r22
     524:	2c 93       	st	X, r18
     526:	41 91       	ld	r20, Z+
     528:	47 fd       	sbrc	r20, 7
     52a:	35 2f       	mov	r19, r21
     52c:	6c 93       	st	X, r22
     52e:	01 f6       	brne	.-128    	; 0x4b0 <headD>
     530:	4f 83       	std	Y+7, r20	; 0x07
     532:	3c 83       	std	Y+4, r19	; 0x04
     534:	2b 83       	std	Y+3, r18	; 0x03
     536:	89 83       	std	Y+1, r24	; 0x01
     538:	9a 83       	std	Y+2, r25	; 0x02
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1062
  #else
    #error "CPU SPEED NOT SUPPORTED"
  #endif
  // END AVR ----------------------------------------------------------------

  interrupts();
     53a:	78 94       	sei
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1069
    endTime = micros();
    // Save EOD time for latch on next call
  #else
    #warning "micros() is not available because millis is disabled from the tools subemnu. It is your responsibility to ensure a sufficient time has passed between calls to show(). See documentation."
  #endif
}
     53c:	27 96       	adiw	r28, 0x07	; 7
     53e:	cd bf       	out	0x3d, r28	; 61
     540:	de bf       	out	0x3e, r29	; 62
     542:	df 91       	pop	r29
     544:	cf 91       	pop	r28
     546:	08 95       	ret

00000548 <encoder::encoderSetPosition(int, unsigned char) [clone .part.0]>:
_ZN7encoder18encoderSetPositionEih.part.0():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:115

void encoder::encoderSetPosition(int newPosition, uint8_t latchMode) {
  switch (latchMode) {
    case 1:
      // only adjust the external part of the position.
      encoderPosition = ((newPosition << 2) | (encoderPosition & 0x03L));
     548:	20 91 82 3b 	lds	r18, 0x3B82	; 0x803b82 <encoderPosition>
     54c:	30 91 83 3b 	lds	r19, 0x3B83	; 0x803b83 <encoderPosition+0x1>
     550:	23 70       	andi	r18, 0x03	; 3
     552:	33 27       	eor	r19, r19
     554:	ac 01       	movw	r20, r24
     556:	44 0f       	add	r20, r20
     558:	55 1f       	adc	r21, r21
     55a:	44 0f       	add	r20, r20
     55c:	55 1f       	adc	r21, r21
     55e:	24 2b       	or	r18, r20
     560:	35 2b       	or	r19, r21
     562:	20 93 82 3b 	sts	0x3B82, r18	; 0x803b82 <encoderPosition>
     566:	30 93 83 3b 	sts	0x3B83, r19	; 0x803b83 <encoderPosition+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:116
      encoderPositionExt = newPosition;
     56a:	80 93 80 3b 	sts	0x3B80, r24	; 0x803b80 <encoderPositionExt>
     56e:	90 93 81 3b 	sts	0x3B81, r25	; 0x803b81 <encoderPositionExt+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:127
      encoderPosition = ((newPosition << 1) | (encoderPosition & 0x01L));
      encoderPositionExt = newPosition;
      encoderPositionExt = newPosition;
      break;
  } // switch
}
     572:	08 95       	ret

00000574 <encoder::encoderSetPosition(int, unsigned char) [clone .constprop.9]>:
_ZN7encoder18encoderSetPositionEih.constprop.9():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:112
    encoderPositionExtPrev = encoderPositionExt;
  }
}

void encoder::encoderSetPosition(int newPosition, uint8_t latchMode) {
  switch (latchMode) {
     574:	61 30       	cpi	r22, 0x01	; 1
     576:	19 f0       	breq	.+6      	; 0x57e <encoder::encoderSetPosition(int, unsigned char) [clone .constprop.9]+0xa>
     578:	62 30       	cpi	r22, 0x02	; 2
     57a:	11 f0       	breq	.+4      	; 0x580 <encoder::encoderSetPosition(int, unsigned char) [clone .constprop.9]+0xc>
     57c:	08 95       	ret
     57e:	e4 cf       	rjmp	.-56     	; 0x548 <encoder::encoderSetPosition(int, unsigned char) [clone .part.0]>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:122
      encoderPositionExtPrev = newPosition;
      break;

    case 2:
      // only adjust the external part of the position.
      encoderPosition = ((newPosition << 1) | (encoderPosition & 0x01L));
     580:	20 91 82 3b 	lds	r18, 0x3B82	; 0x803b82 <encoderPosition>
     584:	30 91 83 3b 	lds	r19, 0x3B83	; 0x803b83 <encoderPosition+0x1>
     588:	21 70       	andi	r18, 0x01	; 1
     58a:	33 27       	eor	r19, r19
     58c:	ac 01       	movw	r20, r24
     58e:	44 0f       	add	r20, r20
     590:	55 1f       	adc	r21, r21
     592:	24 2b       	or	r18, r20
     594:	35 2b       	or	r19, r21
     596:	20 93 82 3b 	sts	0x3B82, r18	; 0x803b82 <encoderPosition>
     59a:	30 93 83 3b 	sts	0x3B83, r19	; 0x803b83 <encoderPosition+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:123
      encoderPositionExt = newPosition;
     59e:	80 93 80 3b 	sts	0x3B80, r24	; 0x803b80 <encoderPositionExt>
     5a2:	90 93 81 3b 	sts	0x3B81, r25	; 0x803b81 <encoderPositionExt+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:127
      encoderPositionExt = newPosition;
      break;
  } // switch
}
     5a6:	08 95       	ret

000005a8 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]>:
_ZN7encoder11encoderReadEhhbh.constprop.7():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:41
  0, 1, -1, 0
};

encoder::encoder(void) {}

uint8_t encoder::encoderRead(uint8_t rotaryMin, uint8_t rotaryMax, bool loopValue, uint8_t latchMode) {
     5a8:	cf 93       	push	r28
     5aa:	df 93       	push	r29
     5ac:	36 2f       	mov	r19, r22
     5ae:	62 2f       	mov	r22, r18
encoderTick():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:72
  }
  return rotaryCounter;
}

void encoder::encoderTick(uint8_t latchMode) {
  int8_t thisState = ((!(PORTA.IN & PIN6_bm)) | !(PORTA.IN & PIN5_bm)  << 1); //encoder pins invert if encoder is backwards
     5b0:	90 91 08 04 	lds	r25, 0x0408	; 0x800408 <encoderDir+0x7f4d24>
     5b4:	96 fb       	bst	r25, 6
     5b6:	99 27       	eor	r25, r25
     5b8:	90 f9       	bld	r25, 0
     5ba:	21 e0       	ldi	r18, 0x01	; 1
     5bc:	92 27       	eor	r25, r18
     5be:	20 91 08 04 	lds	r18, 0x0408	; 0x800408 <encoderDir+0x7f4d24>
     5c2:	25 fd       	sbrc	r18, 5
     5c4:	53 c0       	rjmp	.+166    	; 0x66c <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]+0xc4>
_ZN7encoder11encoderReadEhhbh.constprop.7():
     5c6:	22 e0       	ldi	r18, 0x02	; 2
encoderTick():
     5c8:	92 2b       	or	r25, r18
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:74

  if (oldState != thisState) {
     5ca:	e0 91 7d 3b 	lds	r30, 0x3B7D	; 0x803b7d <oldState>
     5ce:	9e 17       	cp	r25, r30
     5d0:	b1 f0       	breq	.+44     	; 0x5fe <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]+0x56>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:75
    encoderPosition += encoderDir[thisState | (oldState << 2)];
     5d2:	24 e0       	ldi	r18, 0x04	; 4
     5d4:	e2 02       	muls	r30, r18
     5d6:	f0 01       	movw	r30, r0
     5d8:	11 24       	eor	r1, r1
     5da:	e9 2b       	or	r30, r25
     5dc:	ec 51       	subi	r30, 0x1C	; 28
     5de:	f9 44       	sbci	r31, 0x49	; 73
     5e0:	20 81       	ld	r18, Z
     5e2:	e0 91 82 3b 	lds	r30, 0x3B82	; 0x803b82 <encoderPosition>
     5e6:	f0 91 83 3b 	lds	r31, 0x3B83	; 0x803b83 <encoderPosition+0x1>
     5ea:	e2 0f       	add	r30, r18
     5ec:	f1 1d       	adc	r31, r1
     5ee:	27 fd       	sbrc	r18, 7
     5f0:	fa 95       	dec	r31
     5f2:	e0 93 82 3b 	sts	0x3B82, r30	; 0x803b82 <encoderPosition>
     5f6:	f0 93 83 3b 	sts	0x3B83, r31	; 0x803b83 <encoderPosition+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:76
    oldState = thisState;
     5fa:	90 93 7d 3b 	sts	0x3B7D, r25	; 0x803b7d <oldState>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:78
  }
  switch (latchMode) {
     5fe:	62 30       	cpi	r22, 0x02	; 2
     600:	b9 f1       	breq	.+110    	; 0x670 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]+0xc8>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:80
    case 1:
      if (thisState == 3) {
     602:	93 30       	cpi	r25, 0x03	; 3
     604:	a1 f4       	brne	.+40     	; 0x62e <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]+0x86>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:82
        // The hardware has 4 steps with a latch on the input state 3
        encoderPositionExt = encoderPosition >> 2;
     606:	e0 91 82 3b 	lds	r30, 0x3B82	; 0x803b82 <encoderPosition>
     60a:	f0 91 83 3b 	lds	r31, 0x3B83	; 0x803b83 <encoderPosition+0x1>
     60e:	f5 95       	asr	r31
     610:	e7 95       	ror	r30
     612:	f5 95       	asr	r31
     614:	e7 95       	ror	r30
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:90
      }
      break;
    case 2:
      if ((thisState == 0) || (thisState == 3)) {
        // The hardware has 2 steps with a latch on the input state 0 and 3
        encoderPositionExt = encoderPosition >> 1;
     616:	e0 93 80 3b 	sts	0x3B80, r30	; 0x803b80 <encoderPositionExt>
     61a:	f0 93 81 3b 	sts	0x3B81, r31	; 0x803b81 <encoderPositionExt+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:92
        encoderPositionExtPrev = encoderPositionExtTime;
        encoderPositionExtTime = encoderTimer;
     61e:	e0 91 79 3b 	lds	r30, 0x3B79	; 0x803b79 <encoderTimer>
     622:	f0 91 7a 3b 	lds	r31, 0x3B7A	; 0x803b7a <encoderTimer+0x1>
     626:	e0 93 7b 3b 	sts	0x3B7B, r30	; 0x803b7b <encoderPositionExtTime>
     62a:	f0 93 7c 3b 	sts	0x3B7C, r31	; 0x803b7c <encoderPositionExtTime+0x1>
_ZN7encoder11encoderReadEhhbh.constprop.7():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:46
uint8_t encoder::encoderRead(uint8_t rotaryMin, uint8_t rotaryMax, bool loopValue, uint8_t latchMode) {

  if (latchMode > 2) latchMode = 2;
  encoderTick(latchMode);
  // get the current physical position and calc the logical position
  rotaryCounter = encoderPositionExt;
     62e:	e0 91 80 3b 	lds	r30, 0x3B80	; 0x803b80 <encoderPositionExt>
     632:	f0 91 81 3b 	lds	r31, 0x3B81	; 0x803b81 <encoderPositionExt+0x1>
     636:	e0 93 7e 3b 	sts	0x3B7E, r30	; 0x803b7e <rotaryCounter>
     63a:	f0 93 7f 3b 	sts	0x3B7F, r31	; 0x803b7f <rotaryCounter+0x1>
     63e:	c8 2f       	mov	r28, r24
     640:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:48

  if (loopValue) {
     642:	44 23       	and	r20, r20
     644:	29 f1       	breq	.+74     	; 0x690 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]+0xe8>
     646:	83 2f       	mov	r24, r19
     648:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:49
    if (rotaryCounter < rotaryMin) {
     64a:	ec 17       	cp	r30, r28
     64c:	fd 07       	cpc	r31, r29
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:54
      encoderSetPosition(rotaryMax, latchMode);
      rotaryCounter = encoderPositionExt;

    } else if (rotaryCounter > rotaryMax) {
      encoderSetPosition(rotaryMin, latchMode);
     64e:	dc f4       	brge	.+54     	; 0x686 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]+0xde>
     650:	91 df       	rcall	.-222    	; 0x574 <encoder::encoderSetPosition(int, unsigned char) [clone .constprop.9]>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:55
      rotaryCounter = encoderPositionExt;
     652:	80 91 80 3b 	lds	r24, 0x3B80	; 0x803b80 <encoderPositionExt>
     656:	90 91 81 3b 	lds	r25, 0x3B81	; 0x803b81 <encoderPositionExt+0x1>
     65a:	80 93 7e 3b 	sts	0x3B7E, r24	; 0x803b7e <rotaryCounter>
     65e:	90 93 7f 3b 	sts	0x3B7F, r25	; 0x803b7f <rotaryCounter+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:69
      encoderSetPosition(rotaryMax, latchMode);
      rotaryCounter = rotaryMax;
    }
  }
  return rotaryCounter;
}
     662:	80 91 7e 3b 	lds	r24, 0x3B7E	; 0x803b7e <rotaryCounter>
     666:	df 91       	pop	r29
     668:	cf 91       	pop	r28
     66a:	08 95       	ret
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:72

void encoder::encoderTick(uint8_t latchMode) {
  int8_t thisState = ((!(PORTA.IN & PIN6_bm)) | !(PORTA.IN & PIN5_bm)  << 1); //encoder pins invert if encoder is backwards
     66c:	20 e0       	ldi	r18, 0x00	; 0
     66e:	ac cf       	rjmp	.-168    	; 0x5c8 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]+0x20>
encoderTick():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:88
        encoderPositionExtTimePrev = encoderPositionExtTime;
        encoderPositionExtTime = encoderTimer;
      }
      break;
    case 2:
      if ((thisState == 0) || (thisState == 3)) {
     670:	99 23       	and	r25, r25
     672:	11 f0       	breq	.+4      	; 0x678 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]+0xd0>
     674:	93 30       	cpi	r25, 0x03	; 3
     676:	d9 f6       	brne	.-74     	; 0x62e <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]+0x86>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:90
        // The hardware has 2 steps with a latch on the input state 0 and 3
        encoderPositionExt = encoderPosition >> 1;
     678:	e0 91 82 3b 	lds	r30, 0x3B82	; 0x803b82 <encoderPosition>
     67c:	f0 91 83 3b 	lds	r31, 0x3B83	; 0x803b83 <encoderPosition+0x1>
     680:	f5 95       	asr	r31
     682:	e7 95       	ror	r30
     684:	c8 cf       	rjmp	.-112    	; 0x616 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]+0x6e>
_ZN7encoder11encoderReadEhhbh.constprop.7():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:53
  if (loopValue) {
    if (rotaryCounter < rotaryMin) {
      encoderSetPosition(rotaryMax, latchMode);
      rotaryCounter = encoderPositionExt;

    } else if (rotaryCounter > rotaryMax) {
     686:	8e 17       	cp	r24, r30
     688:	9f 07       	cpc	r25, r31
     68a:	5c f7       	brge	.-42     	; 0x662 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]+0xba>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:54
      encoderSetPosition(rotaryMin, latchMode);
     68c:	ce 01       	movw	r24, r28
     68e:	e0 cf       	rjmp	.-64     	; 0x650 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]+0xa8>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:59
      rotaryCounter = encoderPositionExt;
    }
  } else {

    if (rotaryCounter < rotaryMin) {
     690:	ec 17       	cp	r30, r28
     692:	fd 07       	cpc	r31, r29
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:64
      encoderSetPosition(rotaryMin, latchMode);
      rotaryCounter = rotaryMin;

    } else if (rotaryCounter > rotaryMax) {
      encoderSetPosition(rotaryMax, latchMode);
     694:	3c f4       	brge	.+14     	; 0x6a4 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]+0xfc>
     696:	ce 01       	movw	r24, r28
     698:	6d df       	rcall	.-294    	; 0x574 <encoder::encoderSetPosition(int, unsigned char) [clone .constprop.9]>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:65
      rotaryCounter = rotaryMax;
     69a:	c0 93 7e 3b 	sts	0x3B7E, r28	; 0x803b7e <rotaryCounter>
     69e:	d0 93 7f 3b 	sts	0x3B7F, r29	; 0x803b7f <rotaryCounter+0x1>
     6a2:	df cf       	rjmp	.-66     	; 0x662 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]+0xba>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/encoder.cpp:63

    if (rotaryCounter < rotaryMin) {
      encoderSetPosition(rotaryMin, latchMode);
      rotaryCounter = rotaryMin;

    } else if (rotaryCounter > rotaryMax) {
     6a4:	c3 2f       	mov	r28, r19
     6a6:	d0 e0       	ldi	r29, 0x00	; 0
     6a8:	ce 17       	cp	r28, r30
     6aa:	df 07       	cpc	r29, r31
     6ac:	d4 f6       	brge	.-76     	; 0x662 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]+0xba>
     6ae:	f3 cf       	rjmp	.-26     	; 0x696 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]+0xee>

000006b0 <beep(unsigned int)>:
_Z4beepj():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1520
  uint32_t intermediate = 1023UL * 1500;
  reading = intermediate / reading;
  return reading;
}

void beep(uint16_t delay) { // sound function
     6b0:	ac 01       	movw	r20, r24
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1522

  if (sound) PORTB.OUT |= PIN1_bm; // buzzer pin high if sound is allowed
     6b2:	80 91 5d 3b 	lds	r24, 0x3B5D	; 0x803b5d <sound>
     6b6:	88 23       	and	r24, r24
     6b8:	29 f0       	breq	.+10     	; 0x6c4 <beep(unsigned int)+0x14>
     6ba:	90 91 24 04 	lds	r25, 0x0424	; 0x800424 <encoderDir+0x7f4d40>
     6be:	92 60       	ori	r25, 0x02	; 2
     6c0:	90 93 24 04 	sts	0x0424, r25	; 0x800424 <encoderDir+0x7f4d40>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1520
  uint32_t intermediate = 1023UL * 1500;
  reading = intermediate / reading;
  return reading;
}

void beep(uint16_t delay) { // sound function
     6c4:	30 e0       	ldi	r19, 0x00	; 0
     6c6:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1524

  if (sound) PORTB.OUT |= PIN1_bm; // buzzer pin high if sound is allowed

  for (uint16_t x = 0; x <= delay; x++)  __asm__("nop\n\t"); // small delay
     6c8:	00 00       	nop
     6ca:	2f 5f       	subi	r18, 0xFF	; 255
     6cc:	3f 4f       	sbci	r19, 0xFF	; 255
     6ce:	42 17       	cp	r20, r18
     6d0:	53 07       	cpc	r21, r19
     6d2:	d0 f7       	brcc	.-12     	; 0x6c8 <beep(unsigned int)+0x18>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1525
  PORTB.OUT &= ~PIN1_bm; // buzzer pin low
     6d4:	80 91 24 04 	lds	r24, 0x0424	; 0x800424 <encoderDir+0x7f4d40>
     6d8:	8d 7f       	andi	r24, 0xFD	; 253
     6da:	80 93 24 04 	sts	0x0424, r24	; 0x800424 <encoderDir+0x7f4d40>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1526
}
     6de:	08 95       	ret

000006e0 <colorSelect()>:
_Z11colorSelectv():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1468
    eeprom_write_byte((uint8_t*)3, brightLevel);
  }
}

void colorSelect () {
  switch (color) { // color NeoPixel LED number from first to last
     6e0:	80 91 64 3b 	lds	r24, 0x3B64	; 0x803b64 <color>
     6e4:	82 30       	cpi	r24, 0x02	; 2
     6e6:	89 f0       	breq	.+34     	; 0x70a <colorSelect()+0x2a>
     6e8:	18 f4       	brcc	.+6      	; 0x6f0 <colorSelect()+0x10>
     6ea:	81 30       	cpi	r24, 0x01	; 1
     6ec:	31 f0       	breq	.+12     	; 0x6fa <colorSelect()+0x1a>
     6ee:	08 95       	ret
     6f0:	83 30       	cpi	r24, 0x03	; 3
     6f2:	89 f0       	breq	.+34     	; 0x716 <colorSelect()+0x36>
     6f4:	84 30       	cpi	r24, 0x04	; 4
     6f6:	b9 f0       	breq	.+46     	; 0x726 <colorSelect()+0x46>
     6f8:	08 95       	ret
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1470
    case 1:
      red = 80;
     6fa:	80 e5       	ldi	r24, 0x50	; 80
     6fc:	80 93 61 3b 	sts	0x3B61, r24	; 0x803b61 <red>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1471
      green = 0;
     700:	10 92 62 3b 	sts	0x3B62, r1	; 0x803b62 <green>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1477
      blue = 0;
      break;
    case 2:
      red = 0;
      green = 80;
      blue = 0;
     704:	10 92 63 3b 	sts	0x3B63, r1	; 0x803b63 <blue>
     708:	08 95       	ret
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1475
      red = 80;
      green = 0;
      blue = 0;
      break;
    case 2:
      red = 0;
     70a:	10 92 61 3b 	sts	0x3B61, r1	; 0x803b61 <red>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1476
      green = 80;
     70e:	80 e5       	ldi	r24, 0x50	; 80
     710:	80 93 62 3b 	sts	0x3B62, r24	; 0x803b62 <green>
     714:	f7 cf       	rjmp	.-18     	; 0x704 <colorSelect()+0x24>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1480
      blue = 0;
      break;
    case 3:
      red = 0;
     716:	10 92 61 3b 	sts	0x3B61, r1	; 0x803b61 <red>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1481
      green = 0;
     71a:	10 92 62 3b 	sts	0x3B62, r1	; 0x803b62 <green>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1482
      blue = 80;
     71e:	80 e5       	ldi	r24, 0x50	; 80
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1487
      break;
    case 4:
      red = 80;
      green = 80;
      blue = 80;
     720:	80 93 63 3b 	sts	0x3B63, r24	; 0x803b63 <blue>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1490
      break;
  }
}
     724:	08 95       	ret
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1485
      red = 0;
      green = 0;
      blue = 80;
      break;
    case 4:
      red = 80;
     726:	80 e5       	ldi	r24, 0x50	; 80
     728:	80 93 61 3b 	sts	0x3B61, r24	; 0x803b61 <red>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1486
      green = 80;
     72c:	80 93 62 3b 	sts	0x3B62, r24	; 0x803b62 <green>
     730:	f7 cf       	rjmp	.-18     	; 0x720 <colorSelect()+0x40>

00000732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>:
_Z13drawCharacterhPhhhh():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1292
  return false;
}

//draw characters

void drawCharacter (uint8_t firstLed, uint8_t arrayName[], uint8_t red, uint8_t green, uint8_t blue) {// draws on digit form 0 to 3 taking values from array in characters
     732:	af 92       	push	r10
     734:	bf 92       	push	r11
     736:	cf 92       	push	r12
     738:	df 92       	push	r13
     73a:	ef 92       	push	r14
     73c:	ff 92       	push	r15
     73e:	0f 93       	push	r16
     740:	1f 93       	push	r17
     742:	cf 93       	push	r28
     744:	df 93       	push	r29
     746:	6b 01       	movw	r12, r22
     748:	b4 2e       	mov	r11, r20
     74a:	a2 2e       	mov	r10, r18
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1294
  uint8_t led = 0;
  uint8_t arrayElements = pgm_read_byte_near (arrayName + 0);
     74c:	fb 01       	movw	r30, r22
     74e:	14 91       	lpm	r17, Z
     750:	d0 e0       	ldi	r29, 0x00	; 0
     752:	c0 e0       	ldi	r28, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1299

  for (uint8_t x = 0; x < arrayElements; x++) {
    if (x != 0) {
      led = pgm_read_byte_near (arrayName + x);
      strip.setPixelColor((led + firstLed), red, green, blue);
     754:	e8 2e       	mov	r14, r24
     756:	f1 2c       	mov	r15, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1296

void drawCharacter (uint8_t firstLed, uint8_t arrayName[], uint8_t red, uint8_t green, uint8_t blue) {// draws on digit form 0 to 3 taking values from array in characters
  uint8_t led = 0;
  uint8_t arrayElements = pgm_read_byte_near (arrayName + 0);

  for (uint8_t x = 0; x < arrayElements; x++) {
     758:	c1 17       	cp	r28, r17
     75a:	78 f4       	brcc	.+30     	; 0x77a <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)+0x48>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1297
    if (x != 0) {
     75c:	cc 23       	and	r28, r28
     75e:	59 f0       	breq	.+22     	; 0x776 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)+0x44>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1298
      led = pgm_read_byte_near (arrayName + x);
     760:	f6 01       	movw	r30, r12
     762:	ec 0f       	add	r30, r28
     764:	fd 1f       	adc	r31, r29
     766:	84 91       	lpm	r24, Z
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1299
      strip.setPixelColor((led + firstLed), red, green, blue);
     768:	20 2f       	mov	r18, r16
     76a:	4a 2d       	mov	r20, r10
     76c:	6b 2d       	mov	r22, r11
     76e:	8e 0d       	add	r24, r14
     770:	9f 2d       	mov	r25, r15
     772:	91 1d       	adc	r25, r1
     774:	e3 dd       	rcall	.-1082   	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
     776:	21 96       	adiw	r28, 0x01	; 1
     778:	ef cf       	rjmp	.-34     	; 0x758 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)+0x26>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1302
    }
  }
}
     77a:	df 91       	pop	r29
     77c:	cf 91       	pop	r28
     77e:	1f 91       	pop	r17
     780:	0f 91       	pop	r16
     782:	ff 90       	pop	r15
     784:	ef 90       	pop	r14
     786:	df 90       	pop	r13
     788:	cf 90       	pop	r12
     78a:	bf 90       	pop	r11
     78c:	af 90       	pop	r10
     78e:	08 95       	ret

00000790 <showTime(unsigned char, unsigned char)>:
_Z8showTimehh():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1304

void showTime (uint8_t firstLed, uint8_t value) {// this function takes the digit and value from characters.h and draws it without the 0 to the left in hours
     790:	cf 92       	push	r12
     792:	df 92       	push	r13
     794:	ef 92       	push	r14
     796:	ff 92       	push	r15
     798:	0f 93       	push	r16
     79a:	1f 93       	push	r17
     79c:	cf 93       	push	r28
     79e:	df 93       	push	r29
     7a0:	d8 2f       	mov	r29, r24
     7a2:	c6 2f       	mov	r28, r22
     7a4:	e0 90 63 3b 	lds	r14, 0x3B63	; 0x803b63 <blue>
     7a8:	f0 90 62 3b 	lds	r15, 0x3B62	; 0x803b62 <green>
     7ac:	10 91 61 3b 	lds	r17, 0x3B61	; 0x803b61 <red>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1307
  uint8_t valueUnits = value;                      // always draws 2 digits.

  if (value < 10) {
     7b0:	6a 30       	cpi	r22, 0x0A	; 10
     7b2:	90 f5       	brcc	.+100    	; 0x818 <__DATA_REGION_LENGTH__+0x18>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1308
    if (firstLed == 0) {
     7b4:	81 11       	cpse	r24, r1
     7b6:	29 c0       	rjmp	.+82     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     7b8:	d1 2c       	mov	r13, r1
     7ba:	c1 2c       	mov	r12, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1310
      for (uint8_t x = 0; x < 13; x++) {
        strip.setPixelColor(x, 0, 0, 0);
     7bc:	20 e0       	ldi	r18, 0x00	; 0
     7be:	40 e0       	ldi	r20, 0x00	; 0
     7c0:	60 e0       	ldi	r22, 0x00	; 0
     7c2:	c6 01       	movw	r24, r12
     7c4:	bb dd       	rcall	.-1162   	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
     7c6:	8f ef       	ldi	r24, 0xFF	; 255
     7c8:	c8 1a       	sub	r12, r24
     7ca:	d8 0a       	sbc	r13, r24
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1309
void showTime (uint8_t firstLed, uint8_t value) {// this function takes the digit and value from characters.h and draws it without the 0 to the left in hours
  uint8_t valueUnits = value;                      // always draws 2 digits.

  if (value < 10) {
    if (firstLed == 0) {
      for (uint8_t x = 0; x < 13; x++) {
     7cc:	8d e0       	ldi	r24, 0x0D	; 13
     7ce:	c8 16       	cp	r12, r24
     7d0:	d1 04       	cpc	r13, r1
     7d2:	a1 f7       	brne	.-24     	; 0x7bc <showTime(unsigned char, unsigned char)+0x2c>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1315
        strip.setPixelColor(x, 0, 0, 0);
      }
    } else {
      drawCharacter(firstLed, number0, red, green, blue);
    }
    arrayNumberValue[0] = pgm_read_word_near(number + value);
     7d4:	ec 2f       	mov	r30, r28
     7d6:	f0 e0       	ldi	r31, 0x00	; 0
     7d8:	ee 0f       	add	r30, r30
     7da:	ff 1f       	adc	r31, r31
     7dc:	ed 54       	subi	r30, 0x4D	; 77
     7de:	fd 4f       	sbci	r31, 0xFD	; 253
     7e0:	65 91       	lpm	r22, Z+
     7e2:	74 91       	lpm	r23, Z
     7e4:	60 93 6b 3b 	sts	0x3B6B, r22	; 0x803b6b <arrayNumberValue>
     7e8:	70 93 6c 3b 	sts	0x3B6C, r23	; 0x803b6c <arrayNumberValue+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1327

    for (uint8_t x = 0; x < value ; x++) {
      valueUnits--;
    }
    arrayNumberValue[0] = pgm_read_word_near(number + valueUnits);
    drawCharacter((firstLed + 4), arrayNumberValue[0], red, green, blue);
     7ec:	0e 2d       	mov	r16, r14
     7ee:	2f 2d       	mov	r18, r15
     7f0:	41 2f       	mov	r20, r17
     7f2:	84 e0       	ldi	r24, 0x04	; 4
     7f4:	8d 0f       	add	r24, r29
     7f6:	9d df       	rcall	.-198    	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1329
  }
}
     7f8:	df 91       	pop	r29
     7fa:	cf 91       	pop	r28
     7fc:	1f 91       	pop	r17
     7fe:	0f 91       	pop	r16
     800:	ff 90       	pop	r15
     802:	ef 90       	pop	r14
     804:	df 90       	pop	r13
     806:	cf 90       	pop	r12
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1313
    if (firstLed == 0) {
      for (uint8_t x = 0; x < 13; x++) {
        strip.setPixelColor(x, 0, 0, 0);
      }
    } else {
      drawCharacter(firstLed, number0, red, green, blue);
     808:	08 95       	ret
     80a:	0e 2d       	mov	r16, r14
     80c:	2f 2d       	mov	r18, r15
     80e:	41 2f       	mov	r20, r17
     810:	6e e8       	ldi	r22, 0x8E	; 142
     812:	71 e0       	ldi	r23, 0x01	; 1
     814:	8e df       	rcall	.-228    	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
     816:	de cf       	rjmp	.-68     	; 0x7d4 <showTime(unsigned char, unsigned char)+0x44>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1318
    }
    arrayNumberValue[0] = pgm_read_word_near(number + value);
    drawCharacter((firstLed + 4), arrayNumberValue[0], red, green, blue);
  } else {
    value /= 10; // some math to substract the 0 from the left in hours digits
     818:	86 2f       	mov	r24, r22
     81a:	6a e0       	ldi	r22, 0x0A	; 10
     81c:	0e 94 13 1b 	call	0x3626	; 0x3626 <__udivmodqi4>
     820:	c9 2f       	mov	r28, r25
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1319
    arrayNumberValue[0] = pgm_read_word_near(number + value);
     822:	e8 2f       	mov	r30, r24
     824:	f0 e0       	ldi	r31, 0x00	; 0
     826:	ee 0f       	add	r30, r30
     828:	ff 1f       	adc	r31, r31
     82a:	ed 54       	subi	r30, 0x4D	; 77
     82c:	fd 4f       	sbci	r31, 0xFD	; 253
     82e:	65 91       	lpm	r22, Z+
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1320
    drawCharacter(firstLed, arrayNumberValue[0], red, green, blue);
     830:	74 91       	lpm	r23, Z
     832:	0e 2d       	mov	r16, r14
     834:	2f 2d       	mov	r18, r15
     836:	41 2f       	mov	r20, r17
     838:	8d 2f       	mov	r24, r29
     83a:	7b df       	rcall	.-266    	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1326
    value *= 10;

    for (uint8_t x = 0; x < value ; x++) {
      valueUnits--;
    }
    arrayNumberValue[0] = pgm_read_word_near(number + valueUnits);
     83c:	ec 2f       	mov	r30, r28
     83e:	f0 e0       	ldi	r31, 0x00	; 0
     840:	ee 0f       	add	r30, r30
     842:	ff 1f       	adc	r31, r31
     844:	ed 54       	subi	r30, 0x4D	; 77
     846:	fd 4f       	sbci	r31, 0xFD	; 253
     848:	65 91       	lpm	r22, Z+
     84a:	74 91       	lpm	r23, Z
     84c:	60 93 6b 3b 	sts	0x3B6B, r22	; 0x803b6b <arrayNumberValue>
     850:	70 93 6c 3b 	sts	0x3B6C, r23	; 0x803b6c <arrayNumberValue+0x1>
     854:	cc cf       	rjmp	.-104    	; 0x7ee <showTime(unsigned char, unsigned char)+0x5e>

00000856 <showScore(unsigned int)>:
_Z9showScorej():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1331
    drawCharacter((firstLed + 4), arrayNumberValue[0], red, green, blue);
  }
}

void showScore(uint16_t valueShort) {// draws all ledInvadersScore using showTime function
     856:	0f 93       	push	r16
     858:	cf 93       	push	r28
     85a:	df 93       	push	r29
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1333
  uint16_t valueDecimals = valueShort;
  red = 100;
     85c:	24 e6       	ldi	r18, 0x64	; 100
     85e:	20 93 61 3b 	sts	0x3B61, r18	; 0x803b61 <red>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1334
  green = 0;
     862:	10 92 62 3b 	sts	0x3B62, r1	; 0x803b62 <green>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1335
  blue = 0;
     866:	10 92 63 3b 	sts	0x3B63, r1	; 0x803b63 <blue>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1337

  if (valueShort <= 999) {
     86a:	88 3e       	cpi	r24, 0xE8	; 232
     86c:	23 e0       	ldi	r18, 0x03	; 3
     86e:	92 07       	cpc	r25, r18
     870:	48 f5       	brcc	.+82     	; 0x8c4 <showScore(unsigned int)+0x6e>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1339

    if (valueShort < 100) { // functions to draw units in digit 3, decimals in digit 2 and hundredths in digit 1
     872:	ec 01       	movw	r28, r24
     874:	84 36       	cpi	r24, 0x64	; 100
     876:	91 05       	cpc	r25, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1340
      showTime(53, valueShort);
     878:	18 f4       	brcc	.+6      	; 0x880 <showScore(unsigned int)+0x2a>
     87a:	68 2f       	mov	r22, r24
     87c:	85 e3       	ldi	r24, 0x35	; 53
     87e:	88 df       	rcall	.-240    	; 0x790 <showTime(unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1343
    }

    if (valueShort >= 100 && valueShort <= 999) {
     880:	ce 01       	movw	r24, r28
     882:	84 56       	subi	r24, 0x64	; 100
     884:	91 09       	sbc	r25, r1
     886:	84 38       	cpi	r24, 0x84	; 132
     888:	93 40       	sbci	r25, 0x03	; 3
     88a:	e0 f4       	brcc	.+56     	; 0x8c4 <showScore(unsigned int)+0x6e>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1344
      valueShort /= 100;
     88c:	ce 01       	movw	r24, r28
     88e:	64 e6       	ldi	r22, 0x64	; 100
     890:	70 e0       	ldi	r23, 0x00	; 0
     892:	0e 94 1f 1b 	call	0x363e	; 0x363e <__udivmodhi4>
     896:	c8 2f       	mov	r28, r24
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1345
      arrayNumberValue[0] = pgm_read_word_near(number + valueShort);
     898:	fb 01       	movw	r30, r22
     89a:	ee 0f       	add	r30, r30
     89c:	ff 1f       	adc	r31, r31
     89e:	ed 54       	subi	r30, 0x4D	; 77
     8a0:	fd 4f       	sbci	r31, 0xFD	; 253
     8a2:	65 91       	lpm	r22, Z+
     8a4:	74 91       	lpm	r23, Z
     8a6:	60 93 6b 3b 	sts	0x3B6B, r22	; 0x803b6b <arrayNumberValue>
     8aa:	70 93 6c 3b 	sts	0x3B6C, r23	; 0x803b6c <arrayNumberValue+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1346
      drawCharacter(50, arrayNumberValue[0], red, green, blue);
     8ae:	00 e0       	ldi	r16, 0x00	; 0
     8b0:	20 e0       	ldi	r18, 0x00	; 0
     8b2:	44 e6       	ldi	r20, 0x64	; 100
     8b4:	82 e3       	ldi	r24, 0x32	; 50
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1352
      valueShort *= 100;

      for (uint16_t x = 0; x < valueShort ; x++) {
        valueDecimals--;
      }
      showTime(53, valueDecimals);
     8b6:	3d df       	rcall	.-390    	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
     8b8:	6c 2f       	mov	r22, r28
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1355
    }
  }
}
     8ba:	85 e3       	ldi	r24, 0x35	; 53
     8bc:	df 91       	pop	r29
     8be:	cf 91       	pop	r28
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1352
      valueShort *= 100;

      for (uint16_t x = 0; x < valueShort ; x++) {
        valueDecimals--;
      }
      showTime(53, valueDecimals);
     8c0:	0f 91       	pop	r16
     8c2:	66 cf       	rjmp	.-308    	; 0x790 <showTime(unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1355
    }
  }
}
     8c4:	df 91       	pop	r29
     8c6:	cf 91       	pop	r28
     8c8:	0f 91       	pop	r16
     8ca:	08 95       	ret

000008cc <buttonDebounce(bool, bool, bool, unsigned int)>:
_Z14buttonDebouncebbbj():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1264
  }
}

bool buttonDebounce(bool left, bool right, bool menu, uint16_t debounceDelay) {// code to debounce button press

  if (!rightButtonPressed && right && RIGHTLOW) {
     8cc:	90 91 2e 3a 	lds	r25, 0x3A2E	; 0x803a2e <rightButtonPressed>
     8d0:	91 11       	cpse	r25, r1
     8d2:	14 c0       	rjmp	.+40     	; 0x8fc <buttonDebounce(bool, bool, bool, unsigned int)+0x30>
     8d4:	66 23       	and	r22, r22
     8d6:	91 f0       	breq	.+36     	; 0x8fc <buttonDebounce(bool, bool, bool, unsigned int)+0x30>
     8d8:	90 91 08 04 	lds	r25, 0x0408	; 0x800408 <encoderDir+0x7f4d24>
     8dc:	91 fd       	sbrc	r25, 1
     8de:	0e c0       	rjmp	.+28     	; 0x8fc <buttonDebounce(bool, bool, bool, unsigned int)+0x30>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1265
    buttonRightTimeStamp = interruptTimer;
     8e0:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
     8e4:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
     8e8:	80 93 2c 3a 	sts	0x3A2C, r24	; 0x803a2c <buttonRightTimeStamp>
     8ec:	90 93 2d 3a 	sts	0x3A2D, r25	; 0x803a2d <buttonRightTimeStamp+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1266
    rightButtonPressed = true;
     8f0:	81 e0       	ldi	r24, 0x01	; 1
     8f2:	80 93 2e 3a 	sts	0x3A2E, r24	; 0x803a2e <rightButtonPressed>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1267
    return true;
     8f6:	46 2f       	mov	r20, r22
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1288
    return true;
  } else if (menu && (interruptTimer - buttonMenuTimeStamp) > debounceDelay) {
    menuButtonPressed = false;
  }
  return false;
}
     8f8:	84 2f       	mov	r24, r20
     8fa:	08 95       	ret
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1268

  if (!rightButtonPressed && right && RIGHTLOW) {
    buttonRightTimeStamp = interruptTimer;
    rightButtonPressed = true;
    return true;
  } else if (RIGHTHIGH || (right && (interruptTimer - buttonRightTimeStamp) > debounceDelay)) { // some debounce time
     8fc:	90 91 08 04 	lds	r25, 0x0408	; 0x800408 <encoderDir+0x7f4d24>
     900:	91 fd       	sbrc	r25, 1
     902:	0f c0       	rjmp	.+30     	; 0x922 <buttonDebounce(bool, bool, bool, unsigned int)+0x56>
     904:	66 23       	and	r22, r22
     906:	79 f0       	breq	.+30     	; 0x926 <buttonDebounce(bool, bool, bool, unsigned int)+0x5a>
     908:	60 91 75 3b 	lds	r22, 0x3B75	; 0x803b75 <interruptTimer>
     90c:	70 91 76 3b 	lds	r23, 0x3B76	; 0x803b76 <interruptTimer+0x1>
     910:	e0 91 2c 3a 	lds	r30, 0x3A2C	; 0x803a2c <buttonRightTimeStamp>
     914:	f0 91 2d 3a 	lds	r31, 0x3A2D	; 0x803a2d <buttonRightTimeStamp+0x1>
     918:	6e 1b       	sub	r22, r30
     91a:	7f 0b       	sbc	r23, r31
     91c:	26 17       	cp	r18, r22
     91e:	37 07       	cpc	r19, r23
     920:	10 f4       	brcc	.+4      	; 0x926 <buttonDebounce(bool, bool, bool, unsigned int)+0x5a>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1269
    rightButtonPressed = false;
     922:	10 92 2e 3a 	sts	0x3A2E, r1	; 0x803a2e <rightButtonPressed>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1272
  }

  if (!leftButtonPressed && left && LEFTLOW) {
     926:	90 91 2b 3a 	lds	r25, 0x3A2B	; 0x803a2b <leftButtonPressed>
     92a:	91 11       	cpse	r25, r1
     92c:	06 c0       	rjmp	.+12     	; 0x93a <buttonDebounce(bool, bool, bool, unsigned int)+0x6e>
     92e:	88 23       	and	r24, r24
     930:	21 f0       	breq	.+8      	; 0x93a <buttonDebounce(bool, bool, bool, unsigned int)+0x6e>
     932:	90 91 08 04 	lds	r25, 0x0408	; 0x800408 <encoderDir+0x7f4d24>
     936:	92 ff       	sbrs	r25, 2
     938:	2b c0       	rjmp	.+86     	; 0x990 <buttonDebounce(bool, bool, bool, unsigned int)+0xc4>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1276
    buttonLeftTimeStamp = interruptTimer;
    leftButtonPressed = true;
    return true;
  } else if (LEFTHIGH || (left && (interruptTimer - buttonLeftTimeStamp) > debounceDelay)) {
     93a:	90 91 08 04 	lds	r25, 0x0408	; 0x800408 <encoderDir+0x7f4d24>
     93e:	92 fd       	sbrc	r25, 2
     940:	0f c0       	rjmp	.+30     	; 0x960 <buttonDebounce(bool, bool, bool, unsigned int)+0x94>
     942:	88 23       	and	r24, r24
     944:	79 f0       	breq	.+30     	; 0x964 <buttonDebounce(bool, bool, bool, unsigned int)+0x98>
     946:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
     94a:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
     94e:	60 91 29 3a 	lds	r22, 0x3A29	; 0x803a29 <buttonLeftTimeStamp>
     952:	70 91 2a 3a 	lds	r23, 0x3A2A	; 0x803a2a <buttonLeftTimeStamp+0x1>
     956:	86 1b       	sub	r24, r22
     958:	97 0b       	sbc	r25, r23
     95a:	28 17       	cp	r18, r24
     95c:	39 07       	cpc	r19, r25
     95e:	10 f4       	brcc	.+4      	; 0x964 <buttonDebounce(bool, bool, bool, unsigned int)+0x98>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1277
    leftButtonPressed = false;
     960:	10 92 2b 3a 	sts	0x3A2B, r1	; 0x803a2b <leftButtonPressed>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1280
  }

  if (!menuButtonPressed && menu && SLEEPMENULOW) {
     964:	80 91 28 3a 	lds	r24, 0x3A28	; 0x803a28 <menuButtonPressed>
     968:	81 11       	cpse	r24, r1
     96a:	1f c0       	rjmp	.+62     	; 0x9aa <buttonDebounce(bool, bool, bool, unsigned int)+0xde>
     96c:	44 23       	and	r20, r20
     96e:	21 f2       	breq	.-120    	; 0x8f8 <buttonDebounce(bool, bool, bool, unsigned int)+0x2c>
     970:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <encoderDir+0x7f4d24>
     974:	83 fd       	sbrc	r24, 3
     976:	1c c0       	rjmp	.+56     	; 0x9b0 <buttonDebounce(bool, bool, bool, unsigned int)+0xe4>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1281
    buttonMenuTimeStamp = interruptTimer;
     978:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
     97c:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
     980:	80 93 26 3a 	sts	0x3A26, r24	; 0x803a26 <__data_end>
     984:	90 93 27 3a 	sts	0x3A27, r25	; 0x803a27 <__data_end+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1282
    menuButtonPressed = true;
     988:	81 e0       	ldi	r24, 0x01	; 1
     98a:	80 93 28 3a 	sts	0x3A28, r24	; 0x803a28 <menuButtonPressed>
     98e:	b4 cf       	rjmp	.-152    	; 0x8f8 <buttonDebounce(bool, bool, bool, unsigned int)+0x2c>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1273
  } else if (RIGHTHIGH || (right && (interruptTimer - buttonRightTimeStamp) > debounceDelay)) { // some debounce time
    rightButtonPressed = false;
  }

  if (!leftButtonPressed && left && LEFTLOW) {
    buttonLeftTimeStamp = interruptTimer;
     990:	20 91 75 3b 	lds	r18, 0x3B75	; 0x803b75 <interruptTimer>
     994:	30 91 76 3b 	lds	r19, 0x3B76	; 0x803b76 <interruptTimer+0x1>
     998:	20 93 29 3a 	sts	0x3A29, r18	; 0x803a29 <buttonLeftTimeStamp>
     99c:	30 93 2a 3a 	sts	0x3A2A, r19	; 0x803a2a <buttonLeftTimeStamp+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1274
    leftButtonPressed = true;
     9a0:	91 e0       	ldi	r25, 0x01	; 1
     9a2:	90 93 2b 3a 	sts	0x3A2B, r25	; 0x803a2b <leftButtonPressed>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1275
    return true;
     9a6:	48 2f       	mov	r20, r24
     9a8:	a7 cf       	rjmp	.-178    	; 0x8f8 <buttonDebounce(bool, bool, bool, unsigned int)+0x2c>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1284

  if (!menuButtonPressed && menu && SLEEPMENULOW) {
    buttonMenuTimeStamp = interruptTimer;
    menuButtonPressed = true;
    return true;
  } else if (menu && (interruptTimer - buttonMenuTimeStamp) > debounceDelay) {
     9aa:	44 23       	and	r20, r20
     9ac:	09 f4       	brne	.+2      	; 0x9b0 <buttonDebounce(bool, bool, bool, unsigned int)+0xe4>
     9ae:	a4 cf       	rjmp	.-184    	; 0x8f8 <buttonDebounce(bool, bool, bool, unsigned int)+0x2c>
     9b0:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
     9b4:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
     9b8:	40 91 26 3a 	lds	r20, 0x3A26	; 0x803a26 <__data_end>
     9bc:	50 91 27 3a 	lds	r21, 0x3A27	; 0x803a27 <__data_end+0x1>
     9c0:	84 1b       	sub	r24, r20
     9c2:	95 0b       	sbc	r25, r21
     9c4:	28 17       	cp	r18, r24
     9c6:	39 07       	cpc	r19, r25
     9c8:	10 f4       	brcc	.+4      	; 0x9ce <buttonDebounce(bool, bool, bool, unsigned int)+0x102>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1285
    menuButtonPressed = false;
     9ca:	10 92 28 3a 	sts	0x3A28, r1	; 0x803a28 <menuButtonPressed>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1287
  }
  return false;
     9ce:	40 e0       	ldi	r20, 0x00	; 0
     9d0:	93 cf       	rjmp	.-218    	; 0x8f8 <buttonDebounce(bool, bool, bool, unsigned int)+0x2c>

000009d2 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)>:
_Z12scrollPixelsPA9_hhhh():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1231
  generalTimer = interruptTimer;
  lastMinute = 60;
  strip.clear();
}

void scrollPixels(uint8_t arrayName[5][9], uint8_t red, uint8_t green, uint8_t blue) {// code to scroll the tiltle
     9d2:	2f 92       	push	r2
     9d4:	3f 92       	push	r3
     9d6:	4f 92       	push	r4
     9d8:	5f 92       	push	r5
     9da:	6f 92       	push	r6
     9dc:	7f 92       	push	r7
     9de:	8f 92       	push	r8
     9e0:	9f 92       	push	r9
     9e2:	af 92       	push	r10
     9e4:	bf 92       	push	r11
     9e6:	cf 92       	push	r12
     9e8:	df 92       	push	r13
     9ea:	ef 92       	push	r14
     9ec:	ff 92       	push	r15
     9ee:	0f 93       	push	r16
     9f0:	1f 93       	push	r17
     9f2:	cf 93       	push	r28
     9f4:	df 93       	push	r29
     9f6:	cd b7       	in	r28, 0x3d	; 61
     9f8:	de b7       	in	r29, 0x3e	; 62
     9fa:	2c 97       	sbiw	r28, 0x0c	; 12
     9fc:	cd bf       	out	0x3d, r28	; 61
     9fe:	de bf       	out	0x3e, r29	; 62
     a00:	89 87       	std	Y+9, r24	; 0x09
     a02:	9a 87       	std	Y+10, r25	; 0x0a
     a04:	6e 83       	std	Y+6, r22	; 0x06
     a06:	4f 83       	std	Y+7, r20	; 0x07
     a08:	28 87       	std	Y+8, r18	; 0x08
     a0a:	10 e0       	ldi	r17, 0x00	; 0
     a0c:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1234
  uint8_t led = 0;
  uint8_t pixel = 0;
  uint16_t scrollDelay = 0;
     a0e:	19 82       	std	Y+1, r1	; 0x01
     a10:	1a 82       	std	Y+2, r1	; 0x02
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1237
  uint32_t pixelColor = 0;

  for (uint8_t pixelY = 0; pixelY < 9 && textScrolling; pixelY++) {
     a12:	80 91 1c 3a 	lds	r24, 0x3A1C	; 0x803a1c <textScrolling>
     a16:	88 23       	and	r24, r24
     a18:	09 f4       	brne	.+2      	; 0xa1c <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x4a>
     a1a:	44 c0       	rjmp	.+136    	; 0xaa4 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0xd2>
     a1c:	2b e0       	ldi	r18, 0x0B	; 11
     a1e:	32 e0       	ldi	r19, 0x02	; 2
     a20:	2b 87       	std	Y+11, r18	; 0x0b
     a22:	3c 87       	std	Y+12, r19	; 0x0c
     a24:	e9 84       	ldd	r14, Y+9	; 0x09
     a26:	fa 84       	ldd	r15, Y+10	; 0x0a
     a28:	e0 0e       	add	r14, r16
     a2a:	f1 1e       	adc	r15, r17
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1240

    for (uint8_t x = 0; x < 5; x++) { // scroll text from right to left only on colum of information is draw
      led = pgm_read_byte_near (wallRight + x);
     a2c:	eb 85       	ldd	r30, Y+11	; 0x0b
     a2e:	fc 85       	ldd	r31, Y+12	; 0x0c
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1242
      pixel = arrayName  [x] [pixelY];
      if (pixel == 1) {
     a30:	84 91       	lpm	r24, Z
     a32:	f7 01       	movw	r30, r14
     a34:	20 81       	ld	r18, Z
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	21 30       	cpi	r18, 0x01	; 1
     a3a:	09 f0       	breq	.+2      	; 0xa3e <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x6c>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1243
        strip.setPixelColor(led, red, green, blue);
     a3c:	49 c0       	rjmp	.+146    	; 0xad0 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0xfe>
     a3e:	28 85       	ldd	r18, Y+8	; 0x08
     a40:	4f 81       	ldd	r20, Y+7	; 0x07
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1245
      } else {
        strip.setPixelColor(led, 0, 0, 0);
     a42:	6e 81       	ldd	r22, Y+6	; 0x06
     a44:	7b dc       	rcall	.-1802   	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
     a46:	2b 85       	ldd	r18, Y+11	; 0x0b
     a48:	3c 85       	ldd	r19, Y+12	; 0x0c
     a4a:	2f 5f       	subi	r18, 0xFF	; 255
     a4c:	3f 4f       	sbci	r19, 0xFF	; 255
     a4e:	2b 87       	std	Y+11, r18	; 0x0b
     a50:	3c 87       	std	Y+12, r19	; 0x0c
     a52:	39 e0       	ldi	r19, 0x09	; 9
     a54:	e3 0e       	add	r14, r19
     a56:	f1 1c       	adc	r15, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1239
  uint16_t scrollDelay = 0;
  uint32_t pixelColor = 0;

  for (uint8_t pixelY = 0; pixelY < 9 && textScrolling; pixelY++) {

    for (uint8_t x = 0; x < 5; x++) { // scroll text from right to left only on colum of information is draw
     a58:	4b 85       	ldd	r20, Y+11	; 0x0b
     a5a:	5c 85       	ldd	r21, Y+12	; 0x0c
     a5c:	40 51       	subi	r20, 0x10	; 16
     a5e:	52 40       	sbci	r21, 0x02	; 2
     a60:	29 f7       	brne	.-54     	; 0xa2c <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x5a>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1249
      } else {
        strip.setPixelColor(led, 0, 0, 0);
      }
    }

    while ((interruptTimer - scrollDelay) < 80 && textScrolling);
     a62:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
     a66:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
     a6a:	e9 81       	ldd	r30, Y+1	; 0x01
     a6c:	fa 81       	ldd	r31, Y+2	; 0x02
     a6e:	8e 1b       	sub	r24, r30
     a70:	9f 0b       	sbc	r25, r31
     a72:	80 35       	cpi	r24, 0x50	; 80
     a74:	91 05       	cpc	r25, r1
     a76:	20 f4       	brcc	.+8      	; 0xa80 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0xae>
     a78:	80 91 1c 3a 	lds	r24, 0x3A1C	; 0x803a1c <textScrolling>
     a7c:	81 11       	cpse	r24, r1
     a7e:	f1 cf       	rjmp	.-30     	; 0xa62 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x90>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1250
    scrollDelay = interruptTimer;
     a80:	20 91 75 3b 	lds	r18, 0x3B75	; 0x803b75 <interruptTimer>
     a84:	30 91 76 3b 	lds	r19, 0x3B76	; 0x803b76 <interruptTimer+0x1>
     a88:	29 83       	std	Y+1, r18	; 0x01
     a8a:	3a 83       	std	Y+2, r19	; 0x02
     a8c:	51 2c       	mov	r5, r1
     a8e:	41 2c       	mov	r4, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1252

    for (uint8_t y = 0; y < 50 && textScrolling; y++) {// then the getPixel comand is used to grab the pixel info an scroll it to the left
     a90:	80 91 1c 3a 	lds	r24, 0x3A1C	; 0x803a1c <textScrolling>
     a94:	81 11       	cpse	r24, r1
     a96:	20 c0       	rjmp	.+64     	; 0xad8 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x106>
     a98:	0f 5f       	subi	r16, 0xFF	; 255
     a9a:	1f 4f       	sbci	r17, 0xFF	; 255
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1237
  uint8_t led = 0;
  uint8_t pixel = 0;
  uint16_t scrollDelay = 0;
  uint32_t pixelColor = 0;

  for (uint8_t pixelY = 0; pixelY < 9 && textScrolling; pixelY++) {
     a9c:	09 30       	cpi	r16, 0x09	; 9
     a9e:	11 05       	cpc	r17, r1
     aa0:	09 f0       	breq	.+2      	; 0xaa4 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0xd2>
     aa2:	b7 cf       	rjmp	.-146    	; 0xa12 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x40>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1260
      if ( y != 0 && pixelColor > 0) {
        strip.setPixelColor((y - 1), red, green, blue);
      }
    }
  }
}
     aa4:	2c 96       	adiw	r28, 0x0c	; 12
     aa6:	cd bf       	out	0x3d, r28	; 61
     aa8:	de bf       	out	0x3e, r29	; 62
     aaa:	df 91       	pop	r29
     aac:	cf 91       	pop	r28
     aae:	1f 91       	pop	r17
     ab0:	0f 91       	pop	r16
     ab2:	ff 90       	pop	r15
     ab4:	ef 90       	pop	r14
     ab6:	df 90       	pop	r13
     ab8:	cf 90       	pop	r12
     aba:	bf 90       	pop	r11
     abc:	af 90       	pop	r10
     abe:	9f 90       	pop	r9
     ac0:	8f 90       	pop	r8
     ac2:	7f 90       	pop	r7
     ac4:	6f 90       	pop	r6
     ac6:	5f 90       	pop	r5
     ac8:	4f 90       	pop	r4
     aca:	3f 90       	pop	r3
     acc:	2f 90       	pop	r2
     ace:	08 95       	ret
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1245
      led = pgm_read_byte_near (wallRight + x);
      pixel = arrayName  [x] [pixelY];
      if (pixel == 1) {
        strip.setPixelColor(led, red, green, blue);
      } else {
        strip.setPixelColor(led, 0, 0, 0);
     ad0:	20 e0       	ldi	r18, 0x00	; 0
     ad2:	40 e0       	ldi	r20, 0x00	; 0
     ad4:	60 e0       	ldi	r22, 0x00	; 0
     ad6:	b6 cf       	rjmp	.-148    	; 0xa44 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x72>
getPixelColor():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1281
}


// Query color from previously-set pixel (returns packed 32-bit RGB value)
uint32_t tinyNeoPixel::getPixelColor(uint16_t n) const {
  if (n >= numLEDs) {
     ad8:	80 91 84 3b 	lds	r24, 0x3B84	; 0x803b84 <strip>
     adc:	90 91 85 3b 	lds	r25, 0x3B85	; 0x803b85 <strip+0x1>
_Z12scrollPixelsPA9_hhhh():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1282
    return 0;  // Out of bounds, return no color.
     ae0:	81 2c       	mov	r8, r1
     ae2:	91 2c       	mov	r9, r1
     ae4:	54 01       	movw	r10, r8
getPixelColor():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1281
}


// Query color from previously-set pixel (returns packed 32-bit RGB value)
uint32_t tinyNeoPixel::getPixelColor(uint16_t n) const {
  if (n >= numLEDs) {
     ae6:	48 16       	cp	r4, r24
     ae8:	59 06       	cpc	r5, r25
     aea:	08 f0       	brcs	.+2      	; 0xaee <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x11c>
     aec:	02 c1       	rjmp	.+516    	; 0xcf2 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x320>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1287
    return 0;  // Out of bounds, return no color.
  }

  uint8_t *p;

  if (wOffset == rOffset) { // Is RGB-type device
     aee:	40 91 8f 3b 	lds	r20, 0x3B8F	; 0x803b8f <strip+0xb>
     af2:	e0 91 8c 3b 	lds	r30, 0x3B8C	; 0x803b8c <strip+0x8>
     af6:	c0 90 89 3b 	lds	r12, 0x3B89	; 0x803b89 <strip+0x5>
     afa:	60 90 8a 3b 	lds	r6, 0x3B8A	; 0x803b8a <strip+0x6>
     afe:	70 90 8b 3b 	lds	r7, 0x3B8B	; 0x803b8b <strip+0x7>
     b02:	80 91 8d 3b 	lds	r24, 0x3B8D	; 0x803b8d <strip+0x9>
     b06:	90 e0       	ldi	r25, 0x00	; 0
     b08:	20 91 8e 3b 	lds	r18, 0x3B8E	; 0x803b8e <strip+0xa>
     b0c:	30 e0       	ldi	r19, 0x00	; 0
     b0e:	24 2e       	mov	r2, r20
     b10:	31 2c       	mov	r3, r1
     b12:	4e 13       	cpse	r20, r30
     b14:	62 c0       	rjmp	.+196    	; 0xbda <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x208>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1288
    p = &pixels[n * 3];
     b16:	a2 01       	movw	r20, r4
     b18:	44 0f       	add	r20, r20
     b1a:	55 1f       	adc	r21, r21
     b1c:	4b 87       	std	Y+11, r20	; 0x0b
     b1e:	5c 87       	std	Y+12, r21	; 0x0c
     b20:	44 0d       	add	r20, r4
     b22:	55 1d       	adc	r21, r5
     b24:	46 0d       	add	r20, r6
     b26:	57 1d       	adc	r21, r7
     b28:	fa 01       	movw	r30, r20
     b2a:	e2 0d       	add	r30, r2
     b2c:	f3 1d       	adc	r31, r3
     b2e:	70 81       	ld	r23, Z
     b30:	84 0f       	add	r24, r20
     b32:	95 1f       	adc	r25, r21
     b34:	fc 01       	movw	r30, r24
     b36:	30 80       	ld	r3, Z
     b38:	24 0f       	add	r18, r20
     b3a:	35 1f       	adc	r19, r21
     b3c:	f9 01       	movw	r30, r18
     b3e:	20 80       	ld	r2, Z
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1289
    if (brightness) {
     b40:	cc 20       	and	r12, r12
     b42:	09 f4       	brne	.+2      	; 0xb46 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x174>
     b44:	3f c0       	rjmp	.+126    	; 0xbc4 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x1f2>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1295
      // Stored color was decimated by setBrightness().  Returned value
      // attempts to scale back to an approximation of the original 24-bit
      // value used when setting the pixel color, but there will always be
      // some error -- those bits are simply gone.  Issue is most
      // pronounced at low brightness levels.
      return (((uint32_t)(p[rOffset] << 8) / brightness) << 16) |
     b46:	d1 2c       	mov	r13, r1
     b48:	f1 2c       	mov	r15, r1
     b4a:	e1 2c       	mov	r14, r1
     b4c:	67 2f       	mov	r22, r23
     b4e:	70 e0       	ldi	r23, 0x00	; 0
     b50:	76 2f       	mov	r23, r22
     b52:	66 27       	eor	r22, r22
     b54:	07 2e       	mov	r0, r23
     b56:	00 0c       	add	r0, r0
     b58:	88 0b       	sbc	r24, r24
     b5a:	99 0b       	sbc	r25, r25
     b5c:	a7 01       	movw	r20, r14
     b5e:	96 01       	movw	r18, r12
     b60:	0e 94 e2 1a 	call	0x35c4	; 0x35c4 <__udivmodsi4>
     b64:	59 01       	movw	r10, r18
     b66:	99 24       	eor	r9, r9
     b68:	88 24       	eor	r8, r8
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1296
             (((uint32_t)(p[gOffset] << 8) / brightness) <<  8) |
     b6a:	63 2d       	mov	r22, r3
     b6c:	70 e0       	ldi	r23, 0x00	; 0
     b6e:	76 2f       	mov	r23, r22
     b70:	66 27       	eor	r22, r22
     b72:	07 2e       	mov	r0, r23
     b74:	00 0c       	add	r0, r0
     b76:	88 0b       	sbc	r24, r24
     b78:	99 0b       	sbc	r25, r25
     b7a:	a7 01       	movw	r20, r14
     b7c:	96 01       	movw	r18, r12
     b7e:	0e 94 e2 1a 	call	0x35c4	; 0x35c4 <__udivmodsi4>
     b82:	54 2f       	mov	r21, r20
     b84:	43 2f       	mov	r20, r19
     b86:	32 2f       	mov	r19, r18
     b88:	22 27       	eor	r18, r18
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1295
      // Stored color was decimated by setBrightness().  Returned value
      // attempts to scale back to an approximation of the original 24-bit
      // value used when setting the pixel color, but there will always be
      // some error -- those bits are simply gone.  Issue is most
      // pronounced at low brightness levels.
      return (((uint32_t)(p[rOffset] << 8) / brightness) << 16) |
     b8a:	82 2a       	or	r8, r18
     b8c:	93 2a       	or	r9, r19
     b8e:	a4 2a       	or	r10, r20
     b90:	b5 2a       	or	r11, r21
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1297
             (((uint32_t)(p[gOffset] << 8) / brightness) <<  8) |
             ((uint32_t)(p[bOffset] << 8) / brightness);
     b92:	62 2d       	mov	r22, r2
     b94:	70 e0       	ldi	r23, 0x00	; 0
     b96:	76 2f       	mov	r23, r22
     b98:	66 27       	eor	r22, r22
     b9a:	07 2e       	mov	r0, r23
     b9c:	00 0c       	add	r0, r0
     b9e:	88 0b       	sbc	r24, r24
     ba0:	99 0b       	sbc	r25, r25
     ba2:	a7 01       	movw	r20, r14
     ba4:	96 01       	movw	r18, r12
     ba6:	0e 94 e2 1a 	call	0x35c4	; 0x35c4 <__udivmodsi4>
     baa:	82 2a       	or	r8, r18
     bac:	93 2a       	or	r9, r19
     bae:	a4 2a       	or	r10, r20
     bb0:	b5 2a       	or	r11, r21
setPixelColor():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1133
      r = (r * brightness) >> 8;
      g = (g * brightness) >> 8;
      b = (b * brightness) >> 8;
    }
    if (wOffset == rOffset) {
      p = &pixels[n * 3];
     bb2:	4b 85       	ldd	r20, Y+11	; 0x0b
     bb4:	5c 85       	ldd	r21, Y+12	; 0x0c
     bb6:	44 0d       	add	r20, r4
     bb8:	55 1d       	adc	r21, r5
     bba:	46 0d       	add	r20, r6
     bbc:	57 1d       	adc	r21, r7
     bbe:	4b 87       	std	Y+11, r20	; 0x0b
     bc0:	5c 87       	std	Y+12, r21	; 0x0c
     bc2:	80 c0       	rjmp	.+256    	; 0xcc4 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x2f2>
getPixelColor():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1301
             (((uint32_t)(p[gOffset] << 8) / brightness) <<  8) |
             ((uint32_t)(p[bOffset] << 8) / brightness);
    } else {
      // No brightness adjustment has been made -- return 'raw' color
      return ((uint32_t)p[rOffset] << 16) |
             ((uint32_t)p[gOffset] <<  8) |
     bc4:	83 2c       	mov	r8, r3
     bc6:	91 2c       	mov	r9, r1
     bc8:	b1 2c       	mov	r11, r1
     bca:	a1 2c       	mov	r10, r1
     bcc:	ba 2c       	mov	r11, r10
     bce:	a9 2c       	mov	r10, r9
     bd0:	98 2c       	mov	r9, r8
     bd2:	88 24       	eor	r8, r8
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1300
      return (((uint32_t)(p[rOffset] << 8) / brightness) << 16) |
             (((uint32_t)(p[gOffset] << 8) / brightness) <<  8) |
             ((uint32_t)(p[bOffset] << 8) / brightness);
    } else {
      // No brightness adjustment has been made -- return 'raw' color
      return ((uint32_t)p[rOffset] << 16) |
     bd4:	a7 2a       	or	r10, r23
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1302
             ((uint32_t)p[gOffset] <<  8) |
             (uint32_t)p[bOffset];
     bd6:	82 28       	or	r8, r2
     bd8:	ec cf       	rjmp	.-40     	; 0xbb2 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x1e0>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1305
    }
  } else {                 // Is RGBW-type device
    p = &pixels[n * 4];
     bda:	a2 01       	movw	r20, r4
     bdc:	44 0f       	add	r20, r20
     bde:	55 1f       	adc	r21, r21
     be0:	44 0f       	add	r20, r20
     be2:	55 1f       	adc	r21, r21
     be4:	4b 87       	std	Y+11, r20	; 0x0b
     be6:	5c 87       	std	Y+12, r21	; 0x0c
     be8:	46 0d       	add	r20, r6
     bea:	57 1d       	adc	r21, r7
     bec:	da 01       	movw	r26, r20
     bee:	a2 0d       	add	r26, r2
     bf0:	b3 1d       	adc	r27, r3
     bf2:	7c 91       	ld	r23, X
     bf4:	e4 0f       	add	r30, r20
     bf6:	f5 2f       	mov	r31, r21
     bf8:	f1 1d       	adc	r31, r1
     bfa:	60 81       	ld	r22, Z
     bfc:	6d 83       	std	Y+5, r22	; 0x05
     bfe:	84 0f       	add	r24, r20
     c00:	95 1f       	adc	r25, r21
     c02:	fc 01       	movw	r30, r24
     c04:	f0 81       	ld	r31, Z
     c06:	fb 83       	std	Y+3, r31	; 0x03
     c08:	24 0f       	add	r18, r20
     c0a:	35 1f       	adc	r19, r21
     c0c:	f9 01       	movw	r30, r18
     c0e:	f0 81       	ld	r31, Z
     c10:	fc 83       	std	Y+4, r31	; 0x04
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1306
    if (brightness) { // Return scaled color
     c12:	cc 20       	and	r12, r12
     c14:	09 f4       	brne	.+2      	; 0xc18 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x246>
     c16:	82 c0       	rjmp	.+260    	; 0xd1c <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x34a>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1307
      return (((uint32_t)(p[wOffset] << 8) / brightness) << 24) |
     c18:	d1 2c       	mov	r13, r1
     c1a:	f1 2c       	mov	r15, r1
     c1c:	e1 2c       	mov	r14, r1
     c1e:	67 2f       	mov	r22, r23
     c20:	70 e0       	ldi	r23, 0x00	; 0
     c22:	76 2f       	mov	r23, r22
     c24:	66 27       	eor	r22, r22
     c26:	07 2e       	mov	r0, r23
     c28:	00 0c       	add	r0, r0
     c2a:	88 0b       	sbc	r24, r24
     c2c:	99 0b       	sbc	r25, r25
     c2e:	a7 01       	movw	r20, r14
     c30:	96 01       	movw	r18, r12
     c32:	0e 94 e2 1a 	call	0x35c4	; 0x35c4 <__udivmodsi4>
     c36:	b2 2e       	mov	r11, r18
     c38:	aa 24       	eor	r10, r10
     c3a:	99 24       	eor	r9, r9
     c3c:	88 24       	eor	r8, r8
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1308
             (((uint32_t)(p[rOffset] << 8) / brightness) << 16) |
     c3e:	2d 81       	ldd	r18, Y+5	; 0x05
     c40:	62 2f       	mov	r22, r18
     c42:	70 e0       	ldi	r23, 0x00	; 0
     c44:	76 2f       	mov	r23, r22
     c46:	66 27       	eor	r22, r22
     c48:	07 2e       	mov	r0, r23
     c4a:	00 0c       	add	r0, r0
     c4c:	88 0b       	sbc	r24, r24
     c4e:	99 0b       	sbc	r25, r25
     c50:	a7 01       	movw	r20, r14
     c52:	96 01       	movw	r18, r12
     c54:	0e 94 e2 1a 	call	0x35c4	; 0x35c4 <__udivmodsi4>
     c58:	a9 01       	movw	r20, r18
     c5a:	33 27       	eor	r19, r19
     c5c:	22 27       	eor	r18, r18
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1307
             (uint32_t)p[bOffset];
    }
  } else {                 // Is RGBW-type device
    p = &pixels[n * 4];
    if (brightness) { // Return scaled color
      return (((uint32_t)(p[wOffset] << 8) / brightness) << 24) |
     c5e:	82 2a       	or	r8, r18
     c60:	93 2a       	or	r9, r19
     c62:	a4 2a       	or	r10, r20
     c64:	b5 2a       	or	r11, r21
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1310
             (((uint32_t)(p[rOffset] << 8) / brightness) << 16) |
             (((uint32_t)(p[gOffset] << 8) / brightness) <<  8) |
             ((uint32_t)(p[bOffset] << 8) / brightness);
     c66:	3c 81       	ldd	r19, Y+4	; 0x04
     c68:	63 2f       	mov	r22, r19
     c6a:	70 e0       	ldi	r23, 0x00	; 0
     c6c:	76 2f       	mov	r23, r22
     c6e:	66 27       	eor	r22, r22
     c70:	07 2e       	mov	r0, r23
     c72:	00 0c       	add	r0, r0
     c74:	88 0b       	sbc	r24, r24
     c76:	99 0b       	sbc	r25, r25
     c78:	a7 01       	movw	r20, r14
     c7a:	96 01       	movw	r18, r12
     c7c:	0e 94 e2 1a 	call	0x35c4	; 0x35c4 <__udivmodsi4>
     c80:	82 2a       	or	r8, r18
     c82:	93 2a       	or	r9, r19
     c84:	a4 2a       	or	r10, r20
     c86:	b5 2a       	or	r11, r21
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1309
  } else {                 // Is RGBW-type device
    p = &pixels[n * 4];
    if (brightness) { // Return scaled color
      return (((uint32_t)(p[wOffset] << 8) / brightness) << 24) |
             (((uint32_t)(p[rOffset] << 8) / brightness) << 16) |
             (((uint32_t)(p[gOffset] << 8) / brightness) <<  8) |
     c88:	4b 81       	ldd	r20, Y+3	; 0x03
     c8a:	64 2f       	mov	r22, r20
     c8c:	70 e0       	ldi	r23, 0x00	; 0
     c8e:	76 2f       	mov	r23, r22
     c90:	66 27       	eor	r22, r22
     c92:	07 2e       	mov	r0, r23
     c94:	00 0c       	add	r0, r0
     c96:	88 0b       	sbc	r24, r24
     c98:	99 0b       	sbc	r25, r25
     c9a:	a7 01       	movw	r20, r14
     c9c:	96 01       	movw	r18, r12
     c9e:	0e 94 e2 1a 	call	0x35c4	; 0x35c4 <__udivmodsi4>
     ca2:	54 2f       	mov	r21, r20
     ca4:	43 2f       	mov	r20, r19
     ca6:	32 2f       	mov	r19, r18
     ca8:	22 27       	eor	r18, r18
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1310
             ((uint32_t)(p[bOffset] << 8) / brightness);
     caa:	82 2a       	or	r8, r18
     cac:	93 2a       	or	r9, r19
     cae:	a4 2a       	or	r10, r20
     cb0:	b5 2a       	or	r11, r21
setPixelColor():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1135
      b = (b * brightness) >> 8;
    }
    if (wOffset == rOffset) {
      p = &pixels[n * 3];
    } else {
      p = &pixels[n * 4];
     cb2:	eb 85       	ldd	r30, Y+11	; 0x0b
     cb4:	fc 85       	ldd	r31, Y+12	; 0x0c
     cb6:	e6 0d       	add	r30, r6
     cb8:	f7 1d       	adc	r31, r7
     cba:	eb 87       	std	Y+11, r30	; 0x0b
     cbc:	fc 87       	std	Y+12, r31	; 0x0c
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1137
      uint8_t w = (uint8_t)(c >> 24);
      p[wOffset] = brightness ? ((w * brightness) >> 8) : w;
     cbe:	e2 0d       	add	r30, r2
     cc0:	f3 1d       	adc	r31, r3
     cc2:	10 82       	st	Z, r1
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1139
    }
    p[rOffset] = r;
     cc4:	e0 91 8c 3b 	lds	r30, 0x3B8C	; 0x803b8c <strip+0x8>
     cc8:	2b 85       	ldd	r18, Y+11	; 0x0b
     cca:	3c 85       	ldd	r19, Y+12	; 0x0c
     ccc:	2e 0f       	add	r18, r30
     cce:	31 1d       	adc	r19, r1
     cd0:	f9 01       	movw	r30, r18
     cd2:	10 82       	st	Z, r1
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1140
    p[gOffset] = g;
     cd4:	e0 91 8d 3b 	lds	r30, 0x3B8D	; 0x803b8d <strip+0x9>
     cd8:	4b 85       	ldd	r20, Y+11	; 0x0b
     cda:	5c 85       	ldd	r21, Y+12	; 0x0c
     cdc:	4e 0f       	add	r20, r30
     cde:	51 1d       	adc	r21, r1
     ce0:	fa 01       	movw	r30, r20
     ce2:	10 82       	st	Z, r1
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1141
    p[bOffset] = b;
     ce4:	80 91 8e 3b 	lds	r24, 0x3B8E	; 0x803b8e <strip+0xa>
     ce8:	eb 85       	ldd	r30, Y+11	; 0x0b
     cea:	fc 85       	ldd	r31, Y+12	; 0x0c
     cec:	e8 0f       	add	r30, r24
     cee:	f1 1d       	adc	r31, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1255
    scrollDelay = interruptTimer;

    for (uint8_t y = 0; y < 50 && textScrolling; y++) {// then the getPixel comand is used to grab the pixel info an scroll it to the left
      pixelColor = strip.getPixelColor(y);
      strip.setPixelColor(y, 0);
      if ( y != 0 && pixelColor > 0) {
     cf0:	10 82       	st	Z, r1
_Z12scrollPixelsPA9_hhhh():
     cf2:	44 20       	and	r4, r4
     cf4:	51 f0       	breq	.+20     	; 0xd0a <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x338>
     cf6:	89 28       	or	r8, r9
     cf8:	8a 28       	or	r8, r10
     cfa:	8b 28       	or	r8, r11
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1256
        strip.setPixelColor((y - 1), red, green, blue);
     cfc:	31 f0       	breq	.+12     	; 0xd0a <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x338>
     cfe:	28 85       	ldd	r18, Y+8	; 0x08
     d00:	4f 81       	ldd	r20, Y+7	; 0x07
     d02:	6e 81       	ldd	r22, Y+6	; 0x06
     d04:	c2 01       	movw	r24, r4
     d06:	01 97       	sbiw	r24, 0x01	; 1
     d08:	19 db       	rcall	.-2510   	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
     d0a:	ff ef       	ldi	r31, 0xFF	; 255
     d0c:	4f 1a       	sub	r4, r31
     d0e:	5f 0a       	sbc	r5, r31
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1252
    }

    while ((interruptTimer - scrollDelay) < 80 && textScrolling);
    scrollDelay = interruptTimer;

    for (uint8_t y = 0; y < 50 && textScrolling; y++) {// then the getPixel comand is used to grab the pixel info an scroll it to the left
     d10:	22 e3       	ldi	r18, 0x32	; 50
     d12:	42 16       	cp	r4, r18
     d14:	51 04       	cpc	r5, r1
     d16:	09 f0       	breq	.+2      	; 0xd1a <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x348>
     d18:	bb ce       	rjmp	.-650    	; 0xa90 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0xbe>
     d1a:	be ce       	rjmp	.-644    	; 0xa98 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0xc6>
getPixelColor():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1313
             (((uint32_t)(p[rOffset] << 8) / brightness) << 16) |
             (((uint32_t)(p[gOffset] << 8) / brightness) <<  8) |
             ((uint32_t)(p[bOffset] << 8) / brightness);
    } else { // Return raw color
      return ((uint32_t)p[wOffset] << 24) |
             ((uint32_t)p[rOffset] << 16) |
     d1c:	5d 81       	ldd	r21, Y+5	; 0x05
     d1e:	85 2e       	mov	r8, r21
     d20:	91 2c       	mov	r9, r1
     d22:	b1 2c       	mov	r11, r1
     d24:	a1 2c       	mov	r10, r1
     d26:	54 01       	movw	r10, r8
     d28:	99 24       	eor	r9, r9
     d2a:	88 24       	eor	r8, r8
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1312
      return (((uint32_t)(p[wOffset] << 8) / brightness) << 24) |
             (((uint32_t)(p[rOffset] << 8) / brightness) << 16) |
             (((uint32_t)(p[gOffset] << 8) / brightness) <<  8) |
             ((uint32_t)(p[bOffset] << 8) / brightness);
    } else { // Return raw color
      return ((uint32_t)p[wOffset] << 24) |
     d2c:	b7 2a       	or	r11, r23
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1315
             ((uint32_t)p[rOffset] << 16) |
             ((uint32_t)p[gOffset] <<  8) |
             (uint32_t)p[bOffset];
     d2e:	6c 81       	ldd	r22, Y+4	; 0x04
     d30:	86 2a       	or	r8, r22
     d32:	8b 81       	ldd	r24, Y+3	; 0x03
     d34:	98 2a       	or	r9, r24
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:1378
uint8_t tinyNeoPixel::getBrightness(void) const {
  return brightness - 1;
}

void tinyNeoPixel::clear() {
  memset(pixels, 0, numBytes);
     d36:	bd cf       	rjmp	.-134    	; 0xcb2 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)+0x2e0>

00000d38 <tinyNeoPixel::clear() [clone .constprop.10]>:
_ZN12tinyNeoPixel5clearEv.constprop.10():
     d38:	e4 e8       	ldi	r30, 0x84	; 132
     d3a:	fb e3       	ldi	r31, 0x3B	; 59
     d3c:	42 81       	ldd	r20, Z+2	; 0x02
     d3e:	53 81       	ldd	r21, Z+3	; 0x03
     d40:	70 e0       	ldi	r23, 0x00	; 0
     d42:	60 e0       	ldi	r22, 0x00	; 0
     d44:	86 81       	ldd	r24, Z+6	; 0x06
     d46:	97 81       	ldd	r25, Z+7	; 0x07
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1371
  return (byte1 << 8) + byte2;
}

// clock
void showclock () {
  colorSelect ();
     d48:	0c 94 4c 1b 	jmp	0x3698	; 0x3698 <memset>

00000d4c <showclock()>:
_Z9showclockv():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1372
  if (minutes != lastMinute) { // time update occurs only once every minute
     d4c:	c9 dc       	rcall	.-1646   	; 0x6e0 <colorSelect()>
     d4e:	90 91 5e 3b 	lds	r25, 0x3B5E	; 0x803b5e <minutes>
     d52:	80 91 20 3a 	lds	r24, 0x3A20	; 0x803a20 <lastMinute>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1373
    lastMinute = minutes;
     d56:	98 17       	cp	r25, r24
     d58:	69 f0       	breq	.+26     	; 0xd74 <showclock()+0x28>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1374
    strip.clear();
     d5a:	80 91 5e 3b 	lds	r24, 0x3B5E	; 0x803b5e <minutes>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1375
    showTime(53, minutes);
     d5e:	80 93 20 3a 	sts	0x3A20, r24	; 0x803a20 <lastMinute>
     d62:	ea df       	rcall	.-44     	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
     d64:	60 91 5e 3b 	lds	r22, 0x3B5E	; 0x803b5e <minutes>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1376
    showTime(0, hours);
     d68:	85 e3       	ldi	r24, 0x35	; 53
     d6a:	12 dd       	rcall	.-1500   	; 0x790 <showTime(unsigned char, unsigned char)>
     d6c:	60 91 5f 3b 	lds	r22, 0x3B5F	; 0x803b5f <hours>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1378
  }
}
     d70:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:407
    generalTimer = interruptTimer;
  }
}

void levelTitle () {// level description
  strip.clear();
     d72:	0e cd       	rjmp	.-1508   	; 0x790 <showTime(unsigned char, unsigned char)>
     d74:	08 95       	ret

00000d76 <levelTitle()>:
_Z10levelTitlev():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:408
  textScrolling = true; // allow text to scroll
     d76:	e0 df       	rcall	.-64     	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
     d78:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:409
  red = 100;
     d7a:	80 93 1c 3a 	sts	0x3A1C, r24	; 0x803a1c <textScrolling>
     d7e:	84 e6       	ldi	r24, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:410
  green = 0;
     d80:	80 93 61 3b 	sts	0x3B61, r24	; 0x803b61 <red>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:412
  blue = 0;
  showTime(51, gameLevel);
     d84:	10 92 62 3b 	sts	0x3B62, r1	; 0x803b62 <green>
     d88:	10 92 63 3b 	sts	0x3B63, r1	; 0x803b63 <blue>
     d8c:	60 91 1e 3a 	lds	r22, 0x3A1E	; 0x803a1e <gameLevel>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:417

  for (uint8_t x = 0; x < 3; x++) {
    switch (x) {
      case 1:
        scrollPixels(levelText1, 0, 0, 100);
     d90:	83 e3       	ldi	r24, 0x33	; 51
     d92:	fe dc       	rcall	.-1540   	; 0x790 <showTime(unsigned char, unsigned char)>
     d94:	24 e6       	ldi	r18, 0x64	; 100
     d96:	40 e0       	ldi	r20, 0x00	; 0
     d98:	60 e0       	ldi	r22, 0x00	; 0
     d9a:	8d e2       	ldi	r24, 0x2D	; 45
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:420
        break;
      case 2:
        scrollPixels(levelText2, 0, 0, 100);
     d9c:	98 e3       	ldi	r25, 0x38	; 56
     d9e:	19 de       	rcall	.-974    	; 0x9d2 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)>
     da0:	24 e6       	ldi	r18, 0x64	; 100
     da2:	40 e0       	ldi	r20, 0x00	; 0
     da4:	60 e0       	ldi	r22, 0x00	; 0
     da6:	80 e0       	ldi	r24, 0x00	; 0
     da8:	98 e3       	ldi	r25, 0x38	; 56
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:424
        break;
    }
  }
  strip.clear();
     daa:	13 de       	rcall	.-986    	; 0x9d2 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1358
    }
  }
}

//write score to eeprom
void writeScoreToEEPROM(uint8_t address, uint16_t number) { // ledInvadersScore is an uint16_t so needs to be stored in 2 eeprom slots of 8bits
     dac:	c5 cf       	rjmp	.-118    	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>

00000dae <writeScoreToEEPROM(unsigned char, unsigned int)>:
_Z18writeScoreToEEPROMhj():
     dae:	1f 93       	push	r17
     db0:	cf 93       	push	r28
     db2:	df 93       	push	r29
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1359
  eeprom_write_byte((uint8_t*)address, number >> 8);// shift all the bits from the number to the right, 8 times
     db4:	16 2f       	mov	r17, r22
     db6:	67 2f       	mov	r22, r23
     db8:	c8 2f       	mov	r28, r24
     dba:	d0 e0       	ldi	r29, 0x00	; 0
     dbc:	ce 01       	movw	r24, r28
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1360
  eeprom_write_byte((uint8_t*)(address + 1), number & 0xFF);// only store 8bits of the right
     dbe:	0e 94 a2 1a 	call	0x3544	; 0x3544 <eeprom_write_byte>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1361
}
     dc2:	61 2f       	mov	r22, r17
     dc4:	ce 01       	movw	r24, r28
     dc6:	01 96       	adiw	r24, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1360
}

//write score to eeprom
void writeScoreToEEPROM(uint8_t address, uint16_t number) { // ledInvadersScore is an uint16_t so needs to be stored in 2 eeprom slots of 8bits
  eeprom_write_byte((uint8_t*)address, number >> 8);// shift all the bits from the number to the right, 8 times
  eeprom_write_byte((uint8_t*)(address + 1), number & 0xFF);// only store 8bits of the right
     dc8:	df 91       	pop	r29
     dca:	cf 91       	pop	r28
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1167
    ledInvadersScore = 0;
    gameLevel = 1;
  }
}

void gameMenu () {// menu only available in game mode
     dcc:	1f 91       	pop	r17
     dce:	0c 94 a2 1a 	jmp	0x3544	; 0x3544 <eeprom_write_byte>

00000dd2 <gameMenu()>:
_Z8gameMenuv():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1168
  strip.clear();
     dd2:	0f 93       	push	r16
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1171
  int8_t option = 0;
  uint8_t actualValue = 0;
  encoder.encoderSetPosition(sound, 1);
     dd4:	cf 93       	push	r28
     dd6:	df 93       	push	r29
     dd8:	af df       	rcall	.-162    	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
     dda:	80 91 5d 3b 	lds	r24, 0x3B5D	; 0x803b5d <sound>
encoderSetPosition():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1203
        }

        if (actualValue != sound) {
          strip.clear();
          sound = !sound;
          eeprom_write_byte((uint8_t*)6, sound);
     dde:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1175
  uint8_t actualValue = 0;
  encoder.encoderSetPosition(sound, 1);

  while (option < 3) {

    if (buttonDebounce(0, 1, 0, 1000)) {
     de0:	b3 db       	rcall	.-2202   	; 0x548 <encoder::encoderSetPosition(int, unsigned char) [clone .part.0]>
_Z8gameMenuv():
     de2:	c0 e0       	ldi	r28, 0x00	; 0
     de4:	01 c0       	rjmp	.+2      	; 0xde8 <gameMenu()+0x16>
     de6:	c2 e0       	ldi	r28, 0x02	; 2
     de8:	28 ee       	ldi	r18, 0xE8	; 232
     dea:	33 e0       	ldi	r19, 0x03	; 3
     dec:	40 e0       	ldi	r20, 0x00	; 0
     dee:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1176
      if (option++, option > 2) option = 0;
     df0:	80 e0       	ldi	r24, 0x00	; 0
     df2:	6c dd       	rcall	.-1320   	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
     df4:	88 23       	and	r24, r24
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1177
      strip.clear();
     df6:	29 f0       	breq	.+10     	; 0xe02 <gameMenu()+0x30>
     df8:	cf 5f       	subi	r28, 0xFF	; 255
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1180
    }

    if (buttonDebounce(1, 0, 0, 1000)) {
     dfa:	c3 30       	cpi	r28, 0x03	; 3
     dfc:	09 f4       	brne	.+2      	; 0xe00 <gameMenu()+0x2e>
     dfe:	c0 e0       	ldi	r28, 0x00	; 0
     e00:	9b df       	rcall	.-202    	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
     e02:	28 ee       	ldi	r18, 0xE8	; 232
     e04:	33 e0       	ldi	r19, 0x03	; 3
     e06:	40 e0       	ldi	r20, 0x00	; 0
     e08:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1181
      if (option--, option < 0) option = 2;
     e0a:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1182
      strip.clear();
     e0c:	5f dd       	rcall	.-1346   	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
     e0e:	88 23       	and	r24, r24
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1215
        if (buttonDebounce(0, 0, 1, 1000)) {
          option = 3;
        }
        break;
      case 2:// end game
        drawCharacter(20, letterE, 100, 0, 0);
     e10:	19 f1       	breq	.+70     	; 0xe58 <gameMenu()+0x86>
     e12:	c1 50       	subi	r28, 0x01	; 1
     e14:	00 f5       	brcc	.+64     	; 0xe56 <gameMenu()+0x84>
     e16:	90 df       	rcall	.-224    	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
     e18:	00 e0       	ldi	r16, 0x00	; 0
     e1a:	20 e0       	ldi	r18, 0x00	; 0
     e1c:	44 e6       	ldi	r20, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1216
        drawCharacter(23, letterN, 100, 0, 0);
     e1e:	6f e9       	ldi	r22, 0x9F	; 159
     e20:	72 e0       	ldi	r23, 0x02	; 2
     e22:	84 e1       	ldi	r24, 0x14	; 20
     e24:	86 dc       	rcall	.-1780   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
     e26:	20 e0       	ldi	r18, 0x00	; 0
     e28:	44 e6       	ldi	r20, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1217
        drawCharacter(26, letterD, 100, 0, 0);
     e2a:	60 e4       	ldi	r22, 0x40	; 64
     e2c:	72 e0       	ldi	r23, 0x02	; 2
     e2e:	87 e1       	ldi	r24, 0x17	; 23
     e30:	80 dc       	rcall	.-1792   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
     e32:	20 e0       	ldi	r18, 0x00	; 0
     e34:	44 e6       	ldi	r20, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1218
        if (buttonDebounce(0, 0, 1, 1000)) {
     e36:	6a ed       	ldi	r22, 0xDA	; 218
     e38:	71 e0       	ldi	r23, 0x01	; 1
     e3a:	8a e1       	ldi	r24, 0x1A	; 26
     e3c:	7a dc       	rcall	.-1804   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
     e3e:	28 ee       	ldi	r18, 0xE8	; 232
     e40:	33 e0       	ldi	r19, 0x03	; 3
     e42:	41 e0       	ldi	r20, 0x01	; 1
     e44:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1219
          endGame = true;
     e46:	80 e0       	ldi	r24, 0x00	; 0
     e48:	41 dd       	rcall	.-1406   	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
     e4a:	88 23       	and	r24, r24
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1182
      strip.clear();
    }

    if (buttonDebounce(1, 0, 0, 1000)) {
      if (option--, option < 0) option = 2;
      strip.clear();
     e4c:	61 f2       	breq	.-104    	; 0xde6 <gameMenu()+0x14>
     e4e:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1185
    }

    switch (option) { // sound on or off
     e50:	80 93 71 3b 	sts	0x3B71, r24	; 0x803b71 <endGame>
     e54:	6b c0       	rjmp	.+214    	; 0xf2c <gameMenu()+0x15a>
     e56:	70 df       	rcall	.-288    	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
     e58:	c1 30       	cpi	r28, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1187
      case 0:
        actualValue = encoder.encoderRead(0, 1, true, 1);
     e5a:	09 f4       	brne	.+2      	; 0xe5e <gameMenu()+0x8c>
     e5c:	4b c0       	rjmp	.+150    	; 0xef4 <gameMenu()+0x122>
     e5e:	c2 30       	cpi	r28, 0x02	; 2
     e60:	d9 f2       	breq	.-74     	; 0xe18 <gameMenu()+0x46>
     e62:	21 e0       	ldi	r18, 0x01	; 1
     e64:	41 e0       	ldi	r20, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1188
        drawCharacter(0, letterS, 100, 0, 0);
     e66:	61 e0       	ldi	r22, 0x01	; 1
     e68:	80 e0       	ldi	r24, 0x00	; 0
     e6a:	9e db       	rcall	.-2244   	; 0x5a8 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]>
     e6c:	d8 2f       	mov	r29, r24
     e6e:	00 e0       	ldi	r16, 0x00	; 0
     e70:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1189
        drawCharacter(3, letterN, 100, 0, 0);
     e72:	44 e6       	ldi	r20, 0x64	; 100
     e74:	6b ea       	ldi	r22, 0xAB	; 171
     e76:	72 e0       	ldi	r23, 0x02	; 2
     e78:	80 e0       	ldi	r24, 0x00	; 0
     e7a:	5b dc       	rcall	.-1866   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
     e7c:	20 e0       	ldi	r18, 0x00	; 0
     e7e:	44 e6       	ldi	r20, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1190
        drawCharacter(6, letterD, 100, 0, 0);
     e80:	60 e4       	ldi	r22, 0x40	; 64
     e82:	72 e0       	ldi	r23, 0x02	; 2
     e84:	83 e0       	ldi	r24, 0x03	; 3
     e86:	55 dc       	rcall	.-1878   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
     e88:	20 e0       	ldi	r18, 0x00	; 0
     e8a:	44 e6       	ldi	r20, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1191
        if (sound) {
     e8c:	6a ed       	ldi	r22, 0xDA	; 218
     e8e:	71 e0       	ldi	r23, 0x01	; 1
     e90:	86 e0       	ldi	r24, 0x06	; 6
     e92:	4f dc       	rcall	.-1890   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1192
          drawCharacter(50, letterO, 100, 0, 0);
     e94:	c0 91 5d 3b 	lds	r28, 0x3B5D	; 0x803b5d <sound>
     e98:	cc 23       	and	r28, r28
     e9a:	c9 f0       	breq	.+50     	; 0xece <gameMenu()+0xfc>
     e9c:	20 e0       	ldi	r18, 0x00	; 0
     e9e:	44 e6       	ldi	r20, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1193
          drawCharacter(53, letterN, 100, 0, 0);
     ea0:	69 ec       	ldi	r22, 0xC9	; 201
     ea2:	71 e0       	ldi	r23, 0x01	; 1
     ea4:	82 e3       	ldi	r24, 0x32	; 50
     ea6:	45 dc       	rcall	.-1910   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
     ea8:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1197
        } else {
          drawCharacter(50, letterO, 100, 0, 0);
          drawCharacter(53, letterF, 100, 0, 0);
          drawCharacter(56, letterF, 100, 0, 0);
     eaa:	44 e6       	ldi	r20, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1200
        }

        if (actualValue != sound) {
     eac:	60 e4       	ldi	r22, 0x40	; 64
     eae:	72 e0       	ldi	r23, 0x02	; 2
     eb0:	85 e3       	ldi	r24, 0x35	; 53
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1201
          strip.clear();
     eb2:	3f dc       	rcall	.-1922   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
     eb4:	cd 17       	cp	r28, r29
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1202
          sound = !sound;
     eb6:	09 f4       	brne	.+2      	; 0xeba <gameMenu()+0xe8>
     eb8:	94 cf       	rjmp	.-216    	; 0xde2 <gameMenu()+0x10>
     eba:	3e df       	rcall	.-388    	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1203
          eeprom_write_byte((uint8_t*)6, sound);
     ebc:	61 e0       	ldi	r22, 0x01	; 1
     ebe:	6c 27       	eor	r22, r28
     ec0:	60 93 5d 3b 	sts	0x3B5D, r22	; 0x803b5d <sound>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1195
        drawCharacter(6, letterD, 100, 0, 0);
        if (sound) {
          drawCharacter(50, letterO, 100, 0, 0);
          drawCharacter(53, letterN, 100, 0, 0);
        } else {
          drawCharacter(50, letterO, 100, 0, 0);
     ec4:	86 e0       	ldi	r24, 0x06	; 6
     ec6:	90 e0       	ldi	r25, 0x00	; 0
     ec8:	0e 94 a2 1a 	call	0x3544	; 0x3544 <eeprom_write_byte>
     ecc:	8a cf       	rjmp	.-236    	; 0xde2 <gameMenu()+0x10>
     ece:	00 e0       	ldi	r16, 0x00	; 0
     ed0:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1196
          drawCharacter(53, letterF, 100, 0, 0);
     ed2:	44 e6       	ldi	r20, 0x64	; 100
     ed4:	69 ec       	ldi	r22, 0xC9	; 201
     ed6:	71 e0       	ldi	r23, 0x01	; 1
     ed8:	82 e3       	ldi	r24, 0x32	; 50
     eda:	2b dc       	rcall	.-1962   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
     edc:	20 e0       	ldi	r18, 0x00	; 0
     ede:	44 e6       	ldi	r20, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1197
          drawCharacter(56, letterF, 100, 0, 0);
     ee0:	64 e8       	ldi	r22, 0x84	; 132
     ee2:	71 e0       	ldi	r23, 0x01	; 1
     ee4:	85 e3       	ldi	r24, 0x35	; 53
     ee6:	25 dc       	rcall	.-1974   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
     ee8:	20 e0       	ldi	r18, 0x00	; 0
     eea:	44 e6       	ldi	r20, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1207
          sound = !sound;
          eeprom_write_byte((uint8_t*)6, sound);
        }
        break;
      case 1:// resume game
        drawCharacter(20, letterR, 100, 0, 0);
     eec:	64 e8       	ldi	r22, 0x84	; 132
     eee:	71 e0       	ldi	r23, 0x01	; 1
     ef0:	88 e3       	ldi	r24, 0x38	; 56
     ef2:	df cf       	rjmp	.-66     	; 0xeb2 <gameMenu()+0xe0>
     ef4:	00 e0       	ldi	r16, 0x00	; 0
     ef6:	20 e0       	ldi	r18, 0x00	; 0
     ef8:	44 e6       	ldi	r20, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1208
        drawCharacter(23, letterE, 100, 0, 0);
     efa:	63 eb       	ldi	r22, 0xB3	; 179
     efc:	71 e0       	ldi	r23, 0x01	; 1
     efe:	84 e1       	ldi	r24, 0x14	; 20
     f00:	18 dc       	rcall	.-2000   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
     f02:	20 e0       	ldi	r18, 0x00	; 0
     f04:	44 e6       	ldi	r20, 0x64	; 100
     f06:	6f e9       	ldi	r22, 0x9F	; 159
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1209
        drawCharacter(26, letterS, 100, 0, 0);
     f08:	72 e0       	ldi	r23, 0x02	; 2
     f0a:	87 e1       	ldi	r24, 0x17	; 23
     f0c:	12 dc       	rcall	.-2012   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
     f0e:	20 e0       	ldi	r18, 0x00	; 0
     f10:	44 e6       	ldi	r20, 0x64	; 100
     f12:	6b ea       	ldi	r22, 0xAB	; 171
     f14:	72 e0       	ldi	r23, 0x02	; 2
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1210
        if (buttonDebounce(0, 0, 1, 1000)) {
     f16:	8a e1       	ldi	r24, 0x1A	; 26
     f18:	0c dc       	rcall	.-2024   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
     f1a:	28 ee       	ldi	r18, 0xE8	; 232
     f1c:	33 e0       	ldi	r19, 0x03	; 3
     f1e:	41 e0       	ldi	r20, 0x01	; 1
     f20:	60 e0       	ldi	r22, 0x00	; 0
     f22:	80 e0       	ldi	r24, 0x00	; 0
     f24:	d3 dc       	rcall	.-1626   	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
     f26:	88 23       	and	r24, r24
     f28:	09 f4       	brne	.+2      	; 0xf2c <gameMenu()+0x15a>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1226
          option = 3;
        }
        break;
    }
  }
  generalTimer = interruptTimer;
     f2a:	5e cf       	rjmp	.-324    	; 0xde8 <gameMenu()+0x16>
     f2c:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
     f30:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
     f34:	80 93 73 3b 	sts	0x3B73, r24	; 0x803b73 <generalTimer>
     f38:	90 93 74 3b 	sts	0x3B74, r25	; 0x803b74 <generalTimer+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1227
  lastMinute = 60;
     f3c:	8c e3       	ldi	r24, 0x3C	; 60
     f3e:	80 93 20 3a 	sts	0x3A20, r24	; 0x803a20 <lastMinute>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1229
  strip.clear();
}
     f42:	df 91       	pop	r29
     f44:	cf 91       	pop	r28
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1228
        break;
    }
  }
  generalTimer = interruptTimer;
  lastMinute = 60;
  strip.clear();
     f46:	0f 91       	pop	r16
     f48:	f7 ce       	rjmp	.-530    	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>

00000f4a <battStatus()>:
_Z10battStatusv():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1492
      blue = 80;
      break;
  }
}

void battStatus() { // show batt status color coded green is full, red empty
     f4a:	cf 92       	push	r12
     f4c:	df 92       	push	r13
     f4e:	ef 92       	push	r14
     f50:	ff 92       	push	r15
     f52:	cf 93       	push	r28
     f54:	df 93       	push	r29
analogReference():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring_analog.c:659
  switch (mode) {
    #if defined(EXTERNAL)
      case EXTERNAL:
    #endif
    case VDD:
      VREF.CTRLB &= ~VREF_ADC0REFEN_bm; // Turn off force-adc-reference-enable
     f56:	80 91 a1 00 	lds	r24, 0x00A1	; 0x8000a1 <encoderDir+0x7f49bd>
     f5a:	8d 7f       	andi	r24, 0xFD	; 253
     f5c:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <encoderDir+0x7f49bd>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring_analog.c:660
      ADC0.CTRLC = (ADC0.CTRLC & ~(ADC_REFSEL_gm)) | mode | ADC_SAMPCAP_bm; // per datasheet, recommended SAMPCAP=1 at ref > 1v - we don't *KNOW* the external reference will be >1v, but it's probably more likely...
     f60:	80 91 02 06 	lds	r24, 0x0602	; 0x800602 <encoderDir+0x7f4f1e>
     f64:	8f 7c       	andi	r24, 0xCF	; 207
     f66:	80 65       	ori	r24, 0x50	; 80
     f68:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <encoderDir+0x7f4f1e>
readSupplyVoltage():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1507
  }
}

uint16_t readSupplyVoltage() { //returns value in millivolts  taken from megaTinyCore example
  analogReference(VDD);
  VREF.CTRLA = VREF_ADC0REFSEL_1V5_gc;
     f6c:	80 e4       	ldi	r24, 0x40	; 64
     f6e:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <encoderDir+0x7f49bc>
analogRead():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring_analog.c:692
      // don't waste flash on smallest parts.
      if ((pin & 0x7F) > 0x1F) { // highest valid mux value for any 0 or 1-series part.
        return ADC_ERROR_BAD_PIN_OR_CHANNEL;
      }
    #endif
    if (!ADC0.CTRLA & 0x01) return ADC_ERROR_DISABLED;
     f72:	80 91 00 06 	lds	r24, 0x0600	; 0x800600 <encoderDir+0x7f4f1c>
     f76:	88 23       	and	r24, r24
     f78:	71 f0       	breq	.+28     	; 0xf96 <battStatus()+0x4c>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring_analog.c:696
    pin &= 0x1F;
    /* Reference should be already set up */
    /* Select channel */
    ADC0.MUXPOS = (pin << ADC_MUXPOS_gp);
     f7a:	8d e1       	ldi	r24, 0x1D	; 29
     f7c:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <encoderDir+0x7f4f22>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring_analog.c:703
    #if defined(STRICT_ERROR_CHECKING)
      if (ADC0.COMMAND) return ADC_ERROR_BUSY;
    #endif

    /* Start conversion */
    ADC0.COMMAND = ADC_STCONV_bm;
     f80:	81 e0       	ldi	r24, 0x01	; 1
     f82:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <encoderDir+0x7f4f24>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring_analog.c:706

    /* Wait for result ready */
    while (!(ADC0.INTFLAGS & ADC_RESRDY_bm));
     f86:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <encoderDir+0x7f4f27>
     f8a:	80 ff       	sbrs	r24, 0
     f8c:	fc cf       	rjmp	.-8      	; 0xf86 <battStatus()+0x3c>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring_analog.c:709

    /* Combine two bytes */
    return ADC0.RES;
     f8e:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <encoderDir+0x7f4f2c>
     f92:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <encoderDir+0x7f4f2d>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring_analog.c:692
      // don't waste flash on smallest parts.
      if ((pin & 0x7F) > 0x1F) { // highest valid mux value for any 0 or 1-series part.
        return ADC_ERROR_BAD_PIN_OR_CHANNEL;
      }
    #endif
    if (!ADC0.CTRLA & 0x01) return ADC_ERROR_DISABLED;
     f96:	80 91 00 06 	lds	r24, 0x0600	; 0x800600 <encoderDir+0x7f4f1c>
_Z10battStatusv():
     f9a:	29 ef       	ldi	r18, 0xF9	; 249
     f9c:	32 e8       	ldi	r19, 0x82	; 130
analogRead():
     f9e:	88 23       	and	r24, r24
     fa0:	71 f0       	breq	.+28     	; 0xfbe <battStatus()+0x74>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring_analog.c:696
    pin &= 0x1F;
    /* Reference should be already set up */
    /* Select channel */
    ADC0.MUXPOS = (pin << ADC_MUXPOS_gp);
     fa2:	8d e1       	ldi	r24, 0x1D	; 29
     fa4:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <encoderDir+0x7f4f22>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring_analog.c:703
    #if defined(STRICT_ERROR_CHECKING)
      if (ADC0.COMMAND) return ADC_ERROR_BUSY;
    #endif

    /* Start conversion */
    ADC0.COMMAND = ADC_STCONV_bm;
     fa8:	81 e0       	ldi	r24, 0x01	; 1
     faa:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <encoderDir+0x7f4f24>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring_analog.c:706

    /* Wait for result ready */
    while (!(ADC0.INTFLAGS & ADC_RESRDY_bm));
     fae:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <encoderDir+0x7f4f27>
     fb2:	80 ff       	sbrs	r24, 0
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring_analog.c:709

    /* Combine two bytes */
    return ADC0.RES;
     fb4:	fc cf       	rjmp	.-8      	; 0xfae <battStatus()+0x64>
     fb6:	20 91 10 06 	lds	r18, 0x0610	; 0x800610 <encoderDir+0x7f4f2c>
     fba:	30 91 11 06 	lds	r19, 0x0611	; 0x800611 <encoderDir+0x7f4f2d>
readSupplyVoltage():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1516
  // VREF.CTRLB|=VREF_ADC0REFEN_bm;
  // delay(10);
  uint16_t reading = analogRead(ADC_INTREF);
  reading = analogRead(ADC_INTREF);
  uint32_t intermediate = 1023UL * 1500;
  reading = intermediate / reading;
     fbe:	50 e0       	ldi	r21, 0x00	; 0
     fc0:	40 e0       	ldi	r20, 0x00	; 0
     fc2:	64 e2       	ldi	r22, 0x24	; 36
     fc4:	7a e6       	ldi	r23, 0x6A	; 106
     fc6:	87 e1       	ldi	r24, 0x17	; 23
     fc8:	90 e0       	ldi	r25, 0x00	; 0
     fca:	0e 94 e2 1a 	call	0x35c4	; 0x35c4 <__udivmodsi4>
_Z10battStatusv():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1493
      break;
  }
}

void battStatus() { // show batt status color coded green is full, red empty
  voltageReading = map(readSupplyVoltage(), 2980, 3970, 0, 9);
     fce:	44 27       	eor	r20, r20
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore\api/Common.cpp:5
#include "Common.h"

/* C++ prototypes */
long map(long x, long in_min, long in_max, long out_min, long out_max) {
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
     fd0:	55 27       	eor	r21, r21
map():
     fd2:	24 5a       	subi	r18, 0xA4	; 164
     fd4:	3b 40       	sbci	r19, 0x0B	; 11
     fd6:	41 09       	sbc	r20, r1
     fd8:	51 09       	sbc	r21, r1
     fda:	a9 e0       	ldi	r26, 0x09	; 9
     fdc:	b0 e0       	ldi	r27, 0x00	; 0
     fde:	0e 94 d2 1a 	call	0x35a4	; 0x35a4 <__muluhisi3>
     fe2:	2e ed       	ldi	r18, 0xDE	; 222
     fe4:	33 e0       	ldi	r19, 0x03	; 3
     fe6:	40 e0       	ldi	r20, 0x00	; 0
     fe8:	50 e0       	ldi	r21, 0x00	; 0
     fea:	0e 94 b6 1a 	call	0x356c	; 0x356c <__divmodsi4>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1493
     fee:	69 01       	movw	r12, r18
_Z10battStatusv():
     ff0:	e9 01       	movw	r28, r18
     ff2:	20 93 2f 3a 	sts	0x3A2F, r18	; 0x803a2f <voltageReading>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1494
  if (voltageReading > 5) {
     ff6:	30 93 30 3a 	sts	0x3A30, r19	; 0x803a30 <voltageReading+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1495
    strip.setPixelColor(9, 0, 100, 0);
     ffa:	26 30       	cpi	r18, 0x06	; 6
     ffc:	31 05       	cpc	r19, r1
     ffe:	34 f0       	brlt	.+12     	; 0x100c <battStatus()+0xc2>
    1000:	20 e0       	ldi	r18, 0x00	; 0
    1002:	44 e6       	ldi	r20, 0x64	; 100
    1004:	60 e0       	ldi	r22, 0x00	; 0
    1006:	89 e0       	ldi	r24, 0x09	; 9
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1497
  }
  if (voltageReading <= 5 && voltageReading > 2) {
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	98 d9       	rcall	.-3280   	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    100c:	83 e0       	ldi	r24, 0x03	; 3
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1498
    strip.setPixelColor(9, 100, 100, 0);
    100e:	c8 1a       	sub	r12, r24
    1010:	d1 08       	sbc	r13, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1497
void battStatus() { // show batt status color coded green is full, red empty
  voltageReading = map(readSupplyVoltage(), 2980, 3970, 0, 9);
  if (voltageReading > 5) {
    strip.setPixelColor(9, 0, 100, 0);
  }
  if (voltageReading <= 5 && voltageReading > 2) {
    1012:	20 e0       	ldi	r18, 0x00	; 0
    1014:	44 e6       	ldi	r20, 0x64	; 100
    1016:	83 e0       	ldi	r24, 0x03	; 3
    1018:	c8 16       	cp	r12, r24
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1500
    strip.setPixelColor(9, 100, 100, 0);
  }
  if (voltageReading <= 2) {
    101a:	d1 04       	cpc	r13, r1
    101c:	20 f0       	brcs	.+8      	; 0x1026 <battStatus()+0xdc>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1501
    strip.setPixelColor(9, 100, 0, 0);
    101e:	23 97       	sbiw	r28, 0x03	; 3
    1020:	64 f4       	brge	.+24     	; 0x103a <battStatus()+0xf0>
    1022:	20 e0       	ldi	r18, 0x00	; 0
    1024:	40 e0       	ldi	r20, 0x00	; 0
    1026:	64 e6       	ldi	r22, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1503
  }
}
    1028:	89 e0       	ldi	r24, 0x09	; 9
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	df 91       	pop	r29
    102e:	cf 91       	pop	r28
    1030:	ff 90       	pop	r15
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1501
  }
  if (voltageReading <= 5 && voltageReading > 2) {
    strip.setPixelColor(9, 100, 100, 0);
  }
  if (voltageReading <= 2) {
    strip.setPixelColor(9, 100, 0, 0);
    1032:	ef 90       	pop	r14
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1503
  }
}
    1034:	df 90       	pop	r13
    1036:	cf 90       	pop	r12
    1038:	81 c9       	rjmp	.-3326   	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    103a:	df 91       	pop	r29
    103c:	cf 91       	pop	r28
    103e:	ff 90       	pop	r15
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:248
  strip.setBrightness(brightLevel * 3);// brightness select from 0 to 255
  generalTimer = interruptTimer;
  lastMinute = 60;
}

void endGameMenu(uint16_t score, uint8_t saveSlot) {
    1040:	ef 90       	pop	r14
    1042:	df 90       	pop	r13
    1044:	cf 90       	pop	r12
    1046:	08 95       	ret

00001048 <endGameMenu(unsigned int, unsigned char)>:
_Z11endGameMenujh():
    1048:	ef 92       	push	r14
    104a:	ff 92       	push	r15
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:249
  strip.clear();
    104c:	0f 93       	push	r16
    104e:	cf 93       	push	r28
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1364
  eeprom_write_byte((uint8_t*)address, number >> 8);// shift all the bits from the number to the right, 8 times
  eeprom_write_byte((uint8_t*)(address + 1), number & 0xFF);// only store 8bits of the right
}

uint16_t readScoreFromEEPROM(uint8_t address) { // reads and reconstruct the number
  byte byte1 = eeprom_read_byte((uint8_t*)address);
    1050:	df 93       	push	r29
    1052:	7c 01       	movw	r14, r24
    1054:	d6 2f       	mov	r29, r22
    1056:	70 de       	rcall	.-800    	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
readScoreFromEEPROM():
    1058:	85 e0       	ldi	r24, 0x05	; 5
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1365
  byte byte2 = eeprom_read_byte((uint8_t*)address + 1);
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	0e 94 9a 1a 	call	0x3534	; 0x3534 <eeprom_read_byte>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1366
  return (byte1 << 8) + byte2;
    1060:	c8 2f       	mov	r28, r24
    1062:	86 e0       	ldi	r24, 0x06	; 6
    1064:	90 e0       	ldi	r25, 0x00	; 0
    1066:	0e 94 9a 1a 	call	0x3534	; 0x3534 <eeprom_read_byte>
    106a:	2c 2f       	mov	r18, r28
    106c:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:252

void endGameMenu(uint16_t score, uint8_t saveSlot) {
  strip.clear();

  if (score > readScoreFromEEPROM(5)) {
    drawCharacter(0, letterN, 100, 0, 0);
    106e:	32 2f       	mov	r19, r18
    1070:	22 27       	eor	r18, r18
    1072:	82 0f       	add	r24, r18
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:251
}

void endGameMenu(uint16_t score, uint8_t saveSlot) {
  strip.clear();

  if (score > readScoreFromEEPROM(5)) {
    1074:	93 2f       	mov	r25, r19
    1076:	91 1d       	adc	r25, r1
_Z11endGameMenujh():
    1078:	00 e0       	ldi	r16, 0x00	; 0
    107a:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:252
    drawCharacter(0, letterN, 100, 0, 0);
    107c:	44 e6       	ldi	r20, 0x64	; 100
    107e:	8e 15       	cp	r24, r14
    1080:	9f 05       	cpc	r25, r15
    1082:	08 f0       	brcs	.+2      	; 0x1086 <endGameMenu(unsigned int, unsigned char)+0x3e>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:253
    drawCharacter(3, letterE, 100, 0, 0);
    1084:	47 c0       	rjmp	.+142    	; 0x1114 <endGameMenu(unsigned int, unsigned char)+0xcc>
    1086:	60 e4       	ldi	r22, 0x40	; 64
    1088:	72 e0       	ldi	r23, 0x02	; 2
    108a:	80 e0       	ldi	r24, 0x00	; 0
    108c:	52 db       	rcall	.-2396   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    108e:	20 e0       	ldi	r18, 0x00	; 0
    1090:	44 e6       	ldi	r20, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:254
    drawCharacter(6, letterW, 100, 0, 0);
    1092:	6f e9       	ldi	r22, 0x9F	; 159
    1094:	72 e0       	ldi	r23, 0x02	; 2
    1096:	83 e0       	ldi	r24, 0x03	; 3
    1098:	4c db       	rcall	.-2408   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    109a:	20 e0       	ldi	r18, 0x00	; 0
    109c:	44 e6       	ldi	r20, 0x64	; 100
    109e:	61 e5       	ldi	r22, 0x51	; 81
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:255
    showScore(score);
    10a0:	72 e0       	ldi	r23, 0x02	; 2
    10a2:	86 e0       	ldi	r24, 0x06	; 6
    10a4:	46 db       	rcall	.-2420   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:256
    writeScoreToEEPROM(saveSlot, score);
    10a6:	c7 01       	movw	r24, r14
    10a8:	d6 db       	rcall	.-2132   	; 0x856 <showScore(unsigned int)>
    10aa:	b7 01       	movw	r22, r14
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:262
  } else {
    drawCharacter(0, letterH, 100, 0, 0);
    drawCharacter(3, letterI, 100, 0, 0);
    showScore(readScoreFromEEPROM(saveSlot));
  }
  generalTimer = interruptTimer;
    10ac:	8d 2f       	mov	r24, r29
    10ae:	7f de       	rcall	.-770    	; 0xdae <writeScoreToEEPROM(unsigned char, unsigned int)>
    10b0:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
    10b4:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    10b8:	80 93 73 3b 	sts	0x3B73, r24	; 0x803b73 <generalTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:264

  while (!buttonDebounce(1, 1, 0, 1000)) {
    10bc:	90 93 74 3b 	sts	0x3B74, r25	; 0x803b74 <generalTimer+0x1>
    10c0:	28 ee       	ldi	r18, 0xE8	; 232
    10c2:	33 e0       	ldi	r19, 0x03	; 3
    10c4:	40 e0       	ldi	r20, 0x00	; 0
    10c6:	61 e0       	ldi	r22, 0x01	; 1
    10c8:	81 e0       	ldi	r24, 0x01	; 1
    10ca:	00 dc       	rcall	.-2048   	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:266

    if ((interruptTimer - generalTimer) > 3000) {
    10cc:	81 11       	cpse	r24, r1
    10ce:	10 c0       	rjmp	.+32     	; 0x10f0 <endGameMenu(unsigned int, unsigned char)+0xa8>
    10d0:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
    10d4:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    10d8:	20 91 73 3b 	lds	r18, 0x3B73	; 0x803b73 <generalTimer>
    10dc:	30 91 74 3b 	lds	r19, 0x3B74	; 0x803b74 <generalTimer+0x1>
    10e0:	82 1b       	sub	r24, r18
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:267
      endGame = true;// finish game
    10e2:	93 0b       	sbc	r25, r19
    10e4:	89 3b       	cpi	r24, 0xB9	; 185
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:280
      drawCharacter(3, letterL, 100, 0, 0);
      drawCharacter(6, letterR, 100, 0, 0);
      delay(2000);
    }
  }
  strip.clear();
    10e6:	9b 40       	sbci	r25, 0x0B	; 11
    10e8:	90 f1       	brcs	.+100    	; 0x114e <endGameMenu(unsigned int, unsigned char)+0x106>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:281
  generalTimer = interruptTimer;
    10ea:	81 e0       	ldi	r24, 0x01	; 1
    10ec:	80 93 71 3b 	sts	0x3B71, r24	; 0x803b71 <endGame>
    10f0:	23 de       	rcall	.-954    	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
    10f2:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
    10f6:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:282
  lastMinute = 60;
    10fa:	80 93 73 3b 	sts	0x3B73, r24	; 0x803b73 <generalTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:283
}
    10fe:	90 93 74 3b 	sts	0x3B74, r25	; 0x803b74 <generalTimer+0x1>
    1102:	8c e3       	ldi	r24, 0x3C	; 60
    1104:	80 93 20 3a 	sts	0x3A20, r24	; 0x803a20 <lastMinute>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:258
    drawCharacter(3, letterE, 100, 0, 0);
    drawCharacter(6, letterW, 100, 0, 0);
    showScore(score);
    writeScoreToEEPROM(saveSlot, score);
  } else {
    drawCharacter(0, letterH, 100, 0, 0);
    1108:	df 91       	pop	r29
    110a:	cf 91       	pop	r28
    110c:	0f 91       	pop	r16
    110e:	ff 90       	pop	r15
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:259
    drawCharacter(3, letterI, 100, 0, 0);
    1110:	ef 90       	pop	r14
    1112:	08 95       	ret
    1114:	67 ea       	ldi	r22, 0xA7	; 167
    1116:	71 e0       	ldi	r23, 0x01	; 1
    1118:	80 e0       	ldi	r24, 0x00	; 0
    111a:	0b db       	rcall	.-2538   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    111c:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1364
  eeprom_write_byte((uint8_t*)address, number >> 8);// shift all the bits from the number to the right, 8 times
  eeprom_write_byte((uint8_t*)(address + 1), number & 0xFF);// only store 8bits of the right
}

uint16_t readScoreFromEEPROM(uint8_t address) { // reads and reconstruct the number
  byte byte1 = eeprom_read_byte((uint8_t*)address);
    111e:	44 e6       	ldi	r20, 0x64	; 100
    1120:	6c e4       	ldi	r22, 0x4C	; 76
    1122:	72 e0       	ldi	r23, 0x02	; 2
    1124:	83 e0       	ldi	r24, 0x03	; 3
    1126:	05 db       	rcall	.-2550   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
readScoreFromEEPROM():
    1128:	ed 2e       	mov	r14, r29
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1365
  byte byte2 = eeprom_read_byte((uint8_t*)address + 1);
    112a:	f1 2c       	mov	r15, r1
    112c:	c7 01       	movw	r24, r14
    112e:	0e 94 9a 1a 	call	0x3534	; 0x3534 <eeprom_read_byte>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1366
  return (byte1 << 8) + byte2;
    1132:	c8 2f       	mov	r28, r24
    1134:	c7 01       	movw	r24, r14
    1136:	01 96       	adiw	r24, 0x01	; 1
    1138:	0e 94 9a 1a 	call	0x3534	; 0x3534 <eeprom_read_byte>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:260
    showScore(score);
    writeScoreToEEPROM(saveSlot, score);
  } else {
    drawCharacter(0, letterH, 100, 0, 0);
    drawCharacter(3, letterI, 100, 0, 0);
    showScore(readScoreFromEEPROM(saveSlot));
    113c:	2c 2f       	mov	r18, r28
    113e:	30 e0       	ldi	r19, 0x00	; 0
    1140:	32 2f       	mov	r19, r18
    1142:	22 27       	eor	r18, r18
_Z11endGameMenujh():
    1144:	82 0f       	add	r24, r18
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:271
    if ((interruptTimer - generalTimer) > 3000) {
      endGame = true;// finish game
      break; // exit menu
    }

    if (SLEEPMENULOW) {
    1146:	93 2f       	mov	r25, r19
    1148:	91 1d       	adc	r25, r1
    114a:	85 db       	rcall	.-2294   	; 0x856 <showScore(unsigned int)>
    114c:	b1 cf       	rjmp	.-158    	; 0x10b0 <endGameMenu(unsigned int, unsigned char)+0x68>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:272
      strip.clear();
    114e:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <encoderDir+0x7f4d24>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:273
      writeScoreToEEPROM(saveSlot, 0);
    1152:	83 fd       	sbrc	r24, 3
    1154:	b5 cf       	rjmp	.-150    	; 0x10c0 <endGameMenu(unsigned int, unsigned char)+0x78>
    1156:	f0 dd       	rcall	.-1056   	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
    1158:	70 e0       	ldi	r23, 0x00	; 0
    115a:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:274
      drawCharacter(0, letterC, 100, 0, 0);
    115c:	8d 2f       	mov	r24, r29
    115e:	27 de       	rcall	.-946    	; 0xdae <writeScoreToEEPROM(unsigned char, unsigned int)>
    1160:	00 e0       	ldi	r16, 0x00	; 0
    1162:	20 e0       	ldi	r18, 0x00	; 0
    1164:	44 e6       	ldi	r20, 0x64	; 100
    1166:	62 ed       	ldi	r22, 0xD2	; 210
    1168:	71 e0       	ldi	r23, 0x01	; 1
    116a:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:275
      drawCharacter(3, letterL, 100, 0, 0);
    116c:	e2 da       	rcall	.-2620   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    116e:	20 e0       	ldi	r18, 0x00	; 0
    1170:	44 e6       	ldi	r20, 0x64	; 100
    1172:	67 e9       	ldi	r22, 0x97	; 151
    1174:	72 e0       	ldi	r23, 0x02	; 2
    1176:	83 e0       	ldi	r24, 0x03	; 3
    1178:	dc da       	rcall	.-2632   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:276
      drawCharacter(6, letterR, 100, 0, 0);
    117a:	20 e0       	ldi	r18, 0x00	; 0
    117c:	44 e6       	ldi	r20, 0x64	; 100
    117e:	63 eb       	ldi	r22, 0xB3	; 179
    1180:	71 e0       	ldi	r23, 0x01	; 1
    1182:	86 e0       	ldi	r24, 0x06	; 6
    1184:	d6 da       	rcall	.-2644   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
_delay_ms():
    1186:	8f ef       	ldi	r24, 0xFF	; 255
c:\users\gross\appdata\local\arduino15\packages\dxcore\tools\avr-gcc\7.3.0-atmel3.6.1-azduino6\avr\include\util/delay.h:187
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1188:	93 ed       	ldi	r25, 0xD3	; 211
    118a:	20 e3       	ldi	r18, 0x30	; 48
    118c:	81 50       	subi	r24, 0x01	; 1
    118e:	90 40       	sbci	r25, 0x00	; 0
    1190:	20 40       	sbci	r18, 0x00	; 0
    1192:	e1 f7       	brne	.-8      	; 0x118c <endGameMenu(unsigned int, unsigned char)+0x144>
    1194:	00 c0       	rjmp	.+0      	; 0x1196 <endGameMenu(unsigned int, unsigned char)+0x14e>
    1196:	00 00       	nop
    1198:	93 cf       	rjmp	.-218    	; 0x10c0 <endGameMenu(unsigned int, unsigned char)+0x78>

0000119a <__vector_3>:
__vector_3():
    119a:	1f 92       	push	r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1559
  if (interruptTimer % 10 == 0) strip.show(); // 50 frames a second aprox
  interruptTimer ++;
  encoderTimer++;
}

ISR(PORTA_PORT_vect) {
    119c:	0f 92       	push	r0
    119e:	0f b6       	in	r0, 0x3f	; 63
    11a0:	0f 92       	push	r0
    11a2:	11 24       	eor	r1, r1
    11a4:	8f 93       	push	r24
    11a6:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <encoderDir+0x7f4d25>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1561

  if (PORTA.INTFLAGS & PIN3_bm) { // menu button interrupt
    11aa:	83 ff       	sbrs	r24, 3
    11ac:	14 c0       	rjmp	.+40     	; 0x11d6 <__vector_3+0x3c>
    11ae:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <encoderDir+0x7f4d25>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1562
    PORTA.INTFLAGS &= PIN3_bm;// clear interrupt flag
    11b2:	88 70       	andi	r24, 0x08	; 8
    11b4:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <encoderDir+0x7f4d25>
    11b8:	80 91 13 04 	lds	r24, 0x0413	; 0x800413 <encoderDir+0x7f4d2f>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1563
    PORTA.PIN3CTRL &= ~PORT_ISC_gm; // deattach interrupt
    11bc:	88 7f       	andi	r24, 0xF8	; 248
    11be:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <encoderDir+0x7f4d2f>
    11c2:	80 91 04 04 	lds	r24, 0x0404	; 0x800404 <encoderDir+0x7f4d20>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1564
    PORTA.OUT &= ~PIN4_bm;// P CHANNEL mosfet low to activate
    11c6:	8f 7e       	andi	r24, 0xEF	; 239
    11c8:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <encoderDir+0x7f4d20>
    11cc:	80 91 50 00 	lds	r24, 0x0050	; 0x800050 <encoderDir+0x7f496c>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1565
    sleep_disable();
    11d0:	8e 7f       	andi	r24, 0xFE	; 254
    11d2:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <encoderDir+0x7f496c>
    11d6:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <encoderDir+0x7f4d25>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1568
  }

  if (PORTA.INTFLAGS & PIN1_bm) { // right button interrupt
    11da:	81 ff       	sbrs	r24, 1
    11dc:	0a c0       	rjmp	.+20     	; 0x11f2 <__vector_3+0x58>
    11de:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <encoderDir+0x7f4d25>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1569
    PORTA.INTFLAGS &= PIN1_bm;// clear interrupt flag
    11e2:	82 70       	andi	r24, 0x02	; 2
    11e4:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <encoderDir+0x7f4d25>
    11e8:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <encoderDir+0x7f4d2d>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1570
    PORTA.PIN1CTRL &= ~PORT_ISC_gm; // deattach interrupt
    11ec:	88 7f       	andi	r24, 0xF8	; 248
    11ee:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <encoderDir+0x7f4d2d>
    11f2:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <encoderDir+0x7f4d25>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1573
  }

  if (PORTA.INTFLAGS & PIN2_bm) { // left button interrupt
    11f6:	82 ff       	sbrs	r24, 2
    11f8:	0a c0       	rjmp	.+20     	; 0x120e <__vector_3+0x74>
    11fa:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <encoderDir+0x7f4d25>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1574
    PORTA.INTFLAGS &= PIN2_bm;// clear interrupt flag
    11fe:	84 70       	andi	r24, 0x04	; 4
    1200:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <encoderDir+0x7f4d25>
    1204:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <encoderDir+0x7f4d2e>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1575
    PORTA.PIN2CTRL &= ~PORT_ISC_gm; // deattach interrupt
    1208:	88 7f       	andi	r24, 0xF8	; 248
    120a:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <encoderDir+0x7f4d2e>
    120e:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <encoderDir+0x7f4d25>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1578
  }

  if (PORTA.INTFLAGS & PIN6_bm) {
    1212:	86 ff       	sbrs	r24, 6
    1214:	0f c0       	rjmp	.+30     	; 0x1234 <__vector_3+0x9a>
    1216:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <encoderDir+0x7f4d25>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1579
    PORTA.INTFLAGS &= PIN6_bm;// clear encoder interrupt flag
    121a:	80 74       	andi	r24, 0x40	; 64
    121c:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <encoderDir+0x7f4d25>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1580
    PORTA.PIN6CTRL &= ~PORT_ISC_gm; // detach interrupt
    1220:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <encoderDir+0x7f4d32>
    1224:	88 7f       	andi	r24, 0xF8	; 248
    1226:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <encoderDir+0x7f4d32>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1581
    sleep_disable();
    122a:	80 91 50 00 	lds	r24, 0x0050	; 0x800050 <encoderDir+0x7f496c>
    122e:	8e 7f       	andi	r24, 0xFE	; 254
    1230:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <encoderDir+0x7f496c>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1583
  }
  shouldWakeUp = true;
    1234:	81 e0       	ldi	r24, 0x01	; 1
    1236:	80 93 1f 3a 	sts	0x3A1F, r24	; 0x803a1f <shouldWakeUp>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1584
  textScrolling = false;
    123a:	10 92 1c 3a 	sts	0x3A1C, r1	; 0x803a1c <textScrolling>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1585
}
    123e:	8f 91       	pop	r24
    1240:	0f 90       	pop	r0
    1242:	0f be       	out	0x3f, r0	; 63
    1244:	0f 90       	pop	r0
    1246:	1f 90       	pop	r1
    1248:	18 95       	reti

0000124a <__vector_13>:
__vector_13():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1552
  if (SLEEPMENULOW && RIGHTLOW && LEFTLOW) { // if all 3 button are pressed, reset.
    _PROTECTED_WRITE(RSTCTRL.SWRR, 1);
  }
}

ISR(TCB0_INT_vect) {// anoter interrupt to show pixels on screen, because micros are lost using RTC and .show cna´t be called one after another  this is the best way I found to call "strip.show"
    124a:	1f 92       	push	r1
    124c:	0f 92       	push	r0
    124e:	0f b6       	in	r0, 0x3f	; 63
    1250:	0f 92       	push	r0
    1252:	11 24       	eor	r1, r1
    1254:	2f 93       	push	r18
    1256:	3f 93       	push	r19
    1258:	4f 93       	push	r20
    125a:	5f 93       	push	r21
    125c:	6f 93       	push	r22
    125e:	7f 93       	push	r23
    1260:	8f 93       	push	r24
    1262:	9f 93       	push	r25
    1264:	af 93       	push	r26
    1266:	bf 93       	push	r27
    1268:	ef 93       	push	r30
    126a:	ff 93       	push	r31
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1553
  TCB0_INTFLAGS = 1; // clear flag
    126c:	81 e0       	ldi	r24, 0x01	; 1
    126e:	80 93 46 0a 	sts	0x0A46, r24	; 0x800a46 <encoderDir+0x7f5362>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1554
  if (interruptTimer % 10 == 0) strip.show(); // 50 frames a second aprox
    1272:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
    1276:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    127a:	6a e0       	ldi	r22, 0x0A	; 10
    127c:	70 e0       	ldi	r23, 0x00	; 0
    127e:	0e 94 1f 1b 	call	0x363e	; 0x363e <__udivmodhi4>
    1282:	89 2b       	or	r24, r25
    1284:	59 f4       	brne	.+22     	; 0x129c <__vector_13+0x52>
show():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:76
}

// *INDENT-OFF*   astyle don't like assembly
void tinyNeoPixel::show(void) {

  if ((!pixels) || pin >= NUM_DIGITAL_PINS)  {
    1286:	80 91 8a 3b 	lds	r24, 0x3B8A	; 0x803b8a <strip+0x6>
    128a:	90 91 8b 3b 	lds	r25, 0x3B8B	; 0x803b8b <strip+0x7>
    128e:	89 2b       	or	r24, r25
    1290:	29 f0       	breq	.+10     	; 0x129c <__vector_13+0x52>
    1292:	80 91 88 3b 	lds	r24, 0x3B88	; 0x803b88 <strip+0x4>
    1296:	8c 30       	cpi	r24, 0x0C	; 12
    1298:	0c f4       	brge	.+2      	; 0x129c <__vector_13+0x52>
    129a:	d8 d8       	rcall	.-3664   	; 0x44c <tinyNeoPixel::show() [clone .part.1] [clone .constprop.1]>
__vector_13():
    129c:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1555
  interruptTimer ++;
    12a0:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    12a4:	01 96       	adiw	r24, 0x01	; 1
    12a6:	80 93 75 3b 	sts	0x3B75, r24	; 0x803b75 <interruptTimer>
    12aa:	90 93 76 3b 	sts	0x3B76, r25	; 0x803b76 <interruptTimer+0x1>
    12ae:	80 91 79 3b 	lds	r24, 0x3B79	; 0x803b79 <encoderTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1556
  encoderTimer++;
    12b2:	90 91 7a 3b 	lds	r25, 0x3B7A	; 0x803b7a <encoderTimer+0x1>
    12b6:	01 96       	adiw	r24, 0x01	; 1
    12b8:	80 93 79 3b 	sts	0x3B79, r24	; 0x803b79 <encoderTimer>
    12bc:	90 93 7a 3b 	sts	0x3B7A, r25	; 0x803b7a <encoderTimer+0x1>
    12c0:	ff 91       	pop	r31
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1557
}
    12c2:	ef 91       	pop	r30
    12c4:	bf 91       	pop	r27
    12c6:	af 91       	pop	r26
    12c8:	9f 91       	pop	r25
    12ca:	8f 91       	pop	r24
    12cc:	7f 91       	pop	r23
    12ce:	6f 91       	pop	r22
    12d0:	5f 91       	pop	r21
    12d2:	4f 91       	pop	r20
    12d4:	3f 91       	pop	r19
    12d6:	2f 91       	pop	r18
    12d8:	0f 90       	pop	r0
    12da:	0f be       	out	0x3f, r0	; 63
    12dc:	0f 90       	pop	r0
    12de:	1f 90       	pop	r1
    12e0:	18 95       	reti

000012e2 <__vector_7>:
__vector_7():
    12e2:	1f 92       	push	r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1529
  for (uint16_t x = 0; x <= delay; x++)  __asm__("nop\n\t"); // small delay
  PORTB.OUT &= ~PIN1_bm; // buzzer pin low
}


ISR(RTC_PIT_vect) {// rtc interupt
    12e4:	0f 92       	push	r0
    12e6:	0f b6       	in	r0, 0x3f	; 63
    12e8:	0f 92       	push	r0
    12ea:	11 24       	eor	r1, r1
    12ec:	8f 93       	push	r24
    12ee:	9f 93       	push	r25
    12f0:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1532

  /* Clear flag by writing '1': */
  RTC.PITINTFLAGS = RTC_PI_bm;
    12f2:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <encoderDir+0x7f4a6f>
    12f6:	80 91 78 3b 	lds	r24, 0x3B78	; 0x803b78 <seconds>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1534

  if (seconds++, seconds > 59) {// acutal time keeping
    12fa:	8f 5f       	subi	r24, 0xFF	; 255
    12fc:	80 93 78 3b 	sts	0x3B78, r24	; 0x803b78 <seconds>
    1300:	80 91 78 3b 	lds	r24, 0x3B78	; 0x803b78 <seconds>
    1304:	8c 33       	cpi	r24, 0x3C	; 60
    1306:	c0 f0       	brcs	.+48     	; 0x1338 <__vector_7+0x56>
    1308:	10 92 78 3b 	sts	0x3B78, r1	; 0x803b78 <seconds>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1535
    seconds = 0;
    130c:	80 91 5e 3b 	lds	r24, 0x3B5E	; 0x803b5e <minutes>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1536
    if (minutes++, minutes > 59) {
    1310:	8f 5f       	subi	r24, 0xFF	; 255
    1312:	80 93 5e 3b 	sts	0x3B5E, r24	; 0x803b5e <minutes>
    1316:	80 91 5e 3b 	lds	r24, 0x3B5E	; 0x803b5e <minutes>
    131a:	8c 33       	cpi	r24, 0x3C	; 60
    131c:	68 f0       	brcs	.+26     	; 0x1338 <__vector_7+0x56>
    131e:	10 92 5e 3b 	sts	0x3B5E, r1	; 0x803b5e <minutes>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1537
      minutes = 0;
    1322:	80 91 5f 3b 	lds	r24, 0x3B5F	; 0x803b5f <hours>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1538
      if (hours++, hours > 23) {
    1326:	8f 5f       	subi	r24, 0xFF	; 255
    1328:	80 93 5f 3b 	sts	0x3B5F, r24	; 0x803b5f <hours>
    132c:	80 91 5f 3b 	lds	r24, 0x3B5F	; 0x803b5f <hours>
    1330:	88 31       	cpi	r24, 0x18	; 24
    1332:	10 f0       	brcs	.+4      	; 0x1338 <__vector_7+0x56>
    1334:	10 92 5f 3b 	sts	0x3B5F, r1	; 0x803b5f <hours>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1539
        hours = 0;
    1338:	80 91 1f 3a 	lds	r24, 0x3A1F	; 0x803a1f <shouldWakeUp>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1543
      }
    }
  }
  if (!shouldWakeUp) {// beacause of interrupt only if true wake up
    133c:	81 11       	cpse	r24, r1
    133e:	01 c0       	rjmp	.+2      	; 0x1342 <__vector_7+0x60>
    1340:	88 95       	sleep
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1544
    sleep_cpu();
    1342:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <encoderDir+0x7f4d24>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1547
  }

  if (SLEEPMENULOW && RIGHTLOW && LEFTLOW) { // if all 3 button are pressed, reset.
    1346:	83 fd       	sbrc	r24, 3
    1348:	0d c0       	rjmp	.+26     	; 0x1364 <__vector_7+0x82>
    134a:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <encoderDir+0x7f4d24>
    134e:	81 fd       	sbrc	r24, 1
    1350:	09 c0       	rjmp	.+18     	; 0x1364 <__vector_7+0x82>
    1352:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <encoderDir+0x7f4d24>
    1356:	82 fd       	sbrc	r24, 2
    1358:	05 c0       	rjmp	.+10     	; 0x1364 <__vector_7+0x82>
    135a:	88 ed       	ldi	r24, 0xD8	; 216
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1548
    _PROTECTED_WRITE(RSTCTRL.SWRR, 1);
    135c:	91 e0       	ldi	r25, 0x01	; 1
    135e:	84 bf       	out	0x34, r24	; 52
    1360:	90 93 41 00 	sts	0x0041, r25	; 0x800041 <encoderDir+0x7f495d>
    1364:	9f 91       	pop	r25
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1550
  }
}
    1366:	8f 91       	pop	r24
    1368:	0f 90       	pop	r0
    136a:	0f be       	out	0x3f, r0	; 63
    136c:	0f 90       	pop	r0
    136e:	1f 90       	pop	r1
    1370:	18 95       	reti

00001372 <main>:
main():
    1372:	cf 93       	push	r28
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/main.cpp:49
 * called first in non-optiboot configurations (neither is needed on Optibooot configurations() *
 * an extra bit of initialization code in .init3 to fix the vectors and still happen if user    *
 * overrides main. In the past there was a USB-related function here, that is removed, as work  *
 * will be needed in any event at the core level if VUSB-based "stuff" arrives, but really I'm  *
 * just waiting for the DU-series now                                                           */
int main() {
    1374:	df 93       	push	r29
    1376:	cd b7       	in	r28, 0x3d	; 61
    1378:	de b7       	in	r29, 0x3e	; 62
    137a:	c3 50       	subi	r28, 0x03	; 3
    137c:	d1 40       	sbci	r29, 0x01	; 1
    137e:	cd bf       	out	0x3d, r28	; 61
    1380:	de bf       	out	0x3e, r29	; 62
init_clock():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring.c:1533
      #elif (F_CPU == 10000000) // 20MHz prescaled by 2
        /* Clock DIV2 */
        _PROTECTED_WRITE(CLKCTRL_MCLKCTRLB, (CLKCTRL_PEN_bm | CLKCTRL_PDIV_2X_gc));
      #elif (F_CPU == 8000000) // 16MHz prescaled by 2
        /* Clock DIV2 */
        _PROTECTED_WRITE(CLKCTRL_MCLKCTRLB, (CLKCTRL_PEN_bm | CLKCTRL_PDIV_2X_gc));
    1382:	81 e0       	ldi	r24, 0x01	; 1
    1384:	98 ed       	ldi	r25, 0xD8	; 216
    1386:	94 bf       	out	0x34, r25	; 52
    1388:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <encoderDir+0x7f497d>
init_ADC0():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring.c:1639


/********************************* ADC ****************************************/
void __attribute__((weak)) init_ADC0() {
  ADC_t* pADC;
  _fastPtr_d(pADC, &ADC0);
    138c:	e0 e0       	ldi	r30, 0x00	; 0
    138e:	f6 e0       	ldi	r31, 0x06	; 6
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring.c:1662
    #if   F_CPU   > 24000000     // 24 MHz / 16 = 1.5 MHz,  25 MHz / 32 =  780 kHz
      pADC->CTRLC  = ADC_PRESC_DIV32_gc | ADC_REFSEL_VDDREF_gc | ADC_SAMPCAP_bm;
    #elif F_CPU  >= 12000000    // 16 MHz / 16 = 1.0 MHz,  20 MHz / 16 = 1.25 MHz
      pADC->CTRLC  = ADC_PRESC_DIV16_gc | ADC_REFSEL_VDDREF_gc | ADC_SAMPCAP_bm;
    #elif F_CPU  >=  6000000    //  8 MHz /  8 = 1.0 MHz,  10 MHz /  8 = 1.25 MHz
      pADC->CTRLC  =  ADC_PRESC_DIV8_gc | ADC_REFSEL_VDDREF_gc | ADC_SAMPCAP_bm;
    1390:	92 e5       	ldi	r25, 0x52	; 82
    1392:	92 83       	std	Z+2, r25	; 0x02
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring.c:1673
    #if   (F_CPU == 6000000 || F_CPU == 12000000 || F_CPU == 24000000 || F_CPU ==25000000)
      pADC->SAMPCTRL = (7); // 9 ADC clocks, 12 us
    #elif (F_CPU == 5000000 || F_CPU == 10000000 || F_CPU == 20000000)
      pADC->SAMPCTRL = (13);   // 15 ADC clock,s 12 us
    #else
      pADC->SAMPCTRL = (10); // 12 ADC clocks, 12 us
    1394:	9a e0       	ldi	r25, 0x0A	; 10
    1396:	95 83       	std	Z+5, r25	; 0x05
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring.c:1675
    #endif
    pADC->CTRLD    = ADC_INITDLY_DLY16_gc;
    1398:	90 e2       	ldi	r25, 0x20	; 32
    139a:	93 83       	std	Z+3, r25	; 0x03
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring.c:1676
    pADC->CTRLA    = ADC_ENABLE_bm;
    139c:	80 83       	st	Z, r24
init_TCA0():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring.c:1772
  #ifdef __AVR_ATtinyxy2__
    PORTMUX.CTRLC = 1; // move WO0 output to PA7 so PA3 can be used with WO3
  #endif

  /* Enable Split Mode */
  TCA0.SPLIT.CTRLD = TCA_SPLIT_SPLITM_bm;
    139e:	80 93 03 0a 	sts	0x0A03, r24	; 0x800a03 <encoderDir+0x7f531f>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring.c:1777

  // Only 1 WGM so no need to specifically set up.

  /* Period setting, 8-bit register in SPLIT mode */
  TCA0.SPLIT.LPER    = PWM_TIMER_PERIOD;
    13a2:	8e ef       	ldi	r24, 0xFE	; 254
    13a4:	80 93 26 0a 	sts	0x0A26, r24	; 0x800a26 <encoderDir+0x7f5342>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring.c:1778
  TCA0.SPLIT.HPER    = PWM_TIMER_PERIOD;
    13a8:	80 93 27 0a 	sts	0x0A27, r24	; 0x800a27 <encoderDir+0x7f5343>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring.c:1791
    TCA0.SPLIT.HCMP1 = 0;
    TCA0.SPLIT.LCMP2 = 0;
    TCA0.SPLIT.HCMP2 = 0;
  */

  TCA0.SPLIT.CTRLA = (TIMERA_PRESCALER_bm | TCA_SPLIT_ENABLE_bm);
    13ac:	8b e0       	ldi	r24, 0x0B	; 11
    13ae:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <encoderDir+0x7f531c>
init():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring.c:1505
    init_millis();
  #endif
  /*************************** ENABLE GLOBAL INTERRUPTS *************************/
  // Finally, after everything is initialized, we go ahead and enable interrupts.
  if (onAfterInit()) {
    sei();
    13b2:	78 94       	sei
setup():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:93
byte pixels[NUMLEDS * 3];
tinyNeoPixel strip = tinyNeoPixel(NUMLEDS, NEOPIN, NEO_GRB, pixels);

void setup() {

  PORTA.DIR = 0b10010000;//configs port A pins as input or output
    13b4:	80 e9       	ldi	r24, 0x90	; 144
    13b6:	80 93 00 04 	sts	0x0400, r24	; 0x800400 <encoderDir+0x7f4d1c>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:94
  PORTB.DIR = 0b00000011;//configs port B pins as input or output
    13ba:	83 e0       	ldi	r24, 0x03	; 3
    13bc:	80 93 20 04 	sts	0x0420, r24	; 0x800420 <encoderDir+0x7f4d3c>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:95
  PORTA.PIN5CTRL = PORT_PULLUPEN_bm;
    13c0:	88 e0       	ldi	r24, 0x08	; 8
    13c2:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <encoderDir+0x7f4d31>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:96
  PORTA.PIN6CTRL = PORT_PULLUPEN_bm;
    13c6:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <encoderDir+0x7f4d32>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:97
  PORTA.OUT &= ~PIN4_bm;// P CHANNEL mosfet low to activate
    13ca:	80 91 04 04 	lds	r24, 0x0404	; 0x800404 <encoderDir+0x7f4d20>
    13ce:	8f 7e       	andi	r24, 0xEF	; 239
    13d0:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <encoderDir+0x7f4d20>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:99

  if (eeprom_read_byte((uint8_t*)255) != 131) { // prevents excessive flash write and default values if first time used or no colors are choose
    13d4:	8f ef       	ldi	r24, 0xFF	; 255
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	0e 94 9a 1a 	call	0x3534	; 0x3534 <eeprom_read_byte>
    13dc:	83 38       	cpi	r24, 0x83	; 131
    13de:	21 f1       	breq	.+72     	; 0x1428 <main+0xb6>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:100
    eeprom_write_byte((uint8_t*)255, 131); // 255B of aviable EEPROM on the ATTINY1614
    13e0:	63 e8       	ldi	r22, 0x83	; 131
    13e2:	8f ef       	ldi	r24, 0xFF	; 255
    13e4:	90 e0       	ldi	r25, 0x00	; 0
    13e6:	0e 94 a2 1a 	call	0x3544	; 0x3544 <eeprom_write_byte>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:101
    eeprom_write_byte((uint8_t*)2, 1);//color
    13ea:	61 e0       	ldi	r22, 0x01	; 1
    13ec:	82 e0       	ldi	r24, 0x02	; 2
    13ee:	90 e0       	ldi	r25, 0x00	; 0
    13f0:	0e 94 a2 1a 	call	0x3544	; 0x3544 <eeprom_write_byte>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:102
    eeprom_write_byte((uint8_t*)3, 2);//brightness level
    13f4:	62 e0       	ldi	r22, 0x02	; 2
    13f6:	83 e0       	ldi	r24, 0x03	; 3
    13f8:	90 e0       	ldi	r25, 0x00	; 0
    13fa:	0e 94 a2 1a 	call	0x3544	; 0x3544 <eeprom_write_byte>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:103
    eeprom_write_byte((uint8_t*)4, true);//sound on/off
    13fe:	61 e0       	ldi	r22, 0x01	; 1
    1400:	84 e0       	ldi	r24, 0x04	; 4
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	0e 94 a2 1a 	call	0x3544	; 0x3544 <eeprom_write_byte>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:104
    writeScoreToEEPROM(5, 0); // LedIvaders Score function to store uint16 in two uint8 eeprom slots
    1408:	70 e0       	ldi	r23, 0x00	; 0
    140a:	60 e0       	ldi	r22, 0x00	; 0
    140c:	85 e0       	ldi	r24, 0x05	; 5
    140e:	cf dc       	rcall	.-1634   	; 0xdae <writeScoreToEEPROM(unsigned char, unsigned int)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:106
    //eeprom_write_byte((uint8_t*)6, 0);This is reserved to ledInvadersScore don´t uncoment and don´t use in any other part of code.
    writeScoreToEEPROM(7, 0); // Ledtris score
    1410:	70 e0       	ldi	r23, 0x00	; 0
    1412:	60 e0       	ldi	r22, 0x00	; 0
    1414:	87 e0       	ldi	r24, 0x07	; 7
    1416:	cb dc       	rcall	.-1642   	; 0xdae <writeScoreToEEPROM(unsigned char, unsigned int)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:108
    //eeprom_write_byte((uint8_t*)8, 0);// reserved for ledtris score
    writeScoreToEEPROM(9, 0); // FlappyLed score
    1418:	70 e0       	ldi	r23, 0x00	; 0
    141a:	60 e0       	ldi	r22, 0x00	; 0
    141c:	89 e0       	ldi	r24, 0x09	; 9
    141e:	c7 dc       	rcall	.-1650   	; 0xdae <writeScoreToEEPROM(unsigned char, unsigned int)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:110
    //eeprom_write_byte((uint8_t*)10, 0);// reserved for ledtris score
    writeScoreToEEPROM(11, 0); // Ledkanoid score
    1420:	70 e0       	ldi	r23, 0x00	; 0
    1422:	60 e0       	ldi	r22, 0x00	; 0
    1424:	8b e0       	ldi	r24, 0x0B	; 11
    1426:	c3 dc       	rcall	.-1658   	; 0xdae <writeScoreToEEPROM(unsigned char, unsigned int)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:115
    //eeprom_write_byte((uint8_t*)12, 0);// reserved for ledkanoid score
  }

  //read from EEPROM
  color = eeprom_read_byte((uint8_t*)2); //read stored color
    1428:	82 e0       	ldi	r24, 0x02	; 2
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	0e 94 9a 1a 	call	0x3534	; 0x3534 <eeprom_read_byte>
    1430:	80 93 64 3b 	sts	0x3B64, r24	; 0x803b64 <color>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:116
  sound = eeprom_read_byte((uint8_t*)4); //read if mute on/off
    1434:	84 e0       	ldi	r24, 0x04	; 4
    1436:	90 e0       	ldi	r25, 0x00	; 0
    1438:	0e 94 9a 1a 	call	0x3534	; 0x3534 <eeprom_read_byte>
    143c:	91 e0       	ldi	r25, 0x01	; 1
    143e:	81 11       	cpse	r24, r1
    1440:	01 c0       	rjmp	.+2      	; 0x1444 <main+0xd2>
    1442:	90 e0       	ldi	r25, 0x00	; 0
    1444:	90 93 5d 3b 	sts	0x3B5D, r25	; 0x803b5d <sound>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:119

  strip.begin();
  brightLevel = eeprom_read_byte((uint8_t*)3); // read brightness from eeprom
    1448:	83 e0       	ldi	r24, 0x03	; 3
    144a:	90 e0       	ldi	r25, 0x00	; 0
    144c:	0e 94 9a 1a 	call	0x3534	; 0x3534 <eeprom_read_byte>
    1450:	80 93 60 3b 	sts	0x3B60, r24	; 0x803b60 <brightLevel>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:120
  strip.setBrightness(brightLevel * 3);// brightness select from 0 to 255
    1454:	98 2f       	mov	r25, r24
    1456:	99 0f       	add	r25, r25
    1458:	89 0f       	add	r24, r25
    145a:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <tinyNeoPixel::setBrightness(unsigned char) [clone .constprop.6]>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:121
  colorSelect();
    145e:	40 d9       	rcall	.-3456   	; 0x6e0 <colorSelect()>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:123

  CCP = 0xD8;
    1460:	88 ed       	ldi	r24, 0xD8	; 216
    1462:	84 bf       	out	0x34, r24	; 52
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:124
  CLKCTRL.XOSC32KCTRLA = CLKCTRL_ENABLE_bm;   //Enable the external crystal
    1464:	81 e0       	ldi	r24, 0x01	; 1
    1466:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <encoderDir+0x7f4998>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:125
  while (RTC.STATUS > 0); /* Wait for all register to be synchronized */
    146a:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <encoderDir+0x7f4a5d>
    146e:	81 11       	cpse	r24, r1
    1470:	fc cf       	rjmp	.-8      	; 0x146a <main+0xf8>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:126
  RTC.CTRLA = RTC_PRESCALER_DIV1_gc   /* 1 */
    1472:	80 e8       	ldi	r24, 0x80	; 128
    1474:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <encoderDir+0x7f4a5c>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:129
              | 0 << RTC_RTCEN_bp     /* Enable: disabled */
              | 1 << RTC_RUNSTDBY_bp; /* Run In Standby: enabled */
  RTC.CLKSEL = RTC_CLKSEL_TOSC32K_gc; /* 32.768kHz External Crystal Oscillator (XOSC32K) */
    1478:	82 e0       	ldi	r24, 0x02	; 2
    147a:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <encoderDir+0x7f4a63>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:130
  while (RTC.PITSTATUS > 0) {} /* Wait for all register to be synchronized */
    147e:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <encoderDir+0x7f4a6d>
    1482:	81 11       	cpse	r24, r1
    1484:	fc cf       	rjmp	.-8      	; 0x147e <main+0x10c>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:131
  RTC.PITCTRLA = RTC_PERIOD_CYC32768_gc /* RTC Clock Cycles 32768 */
    1486:	81 e7       	ldi	r24, 0x71	; 113
    1488:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <encoderDir+0x7f4a6c>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:133
                 | 1 << RTC_PITEN_bp;   /* Enable: enabled */
  RTC.PITINTCTRL = 1 << RTC_PI_bp; /* Periodic Interrupt: enabled */
    148c:	81 e0       	ldi	r24, 0x01	; 1
    148e:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <encoderDir+0x7f4a6e>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:136


  TCB0.INTCTRL = TCB_CAPT_bm; // Setup Timer B as compare capture mode to trigger interrupt
    1492:	80 93 45 0a 	sts	0x0A45, r24	; 0x800a45 <encoderDir+0x7f5361>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:137
  TCB0_CCMP = 8000;// CLK
    1496:	80 e4       	ldi	r24, 0x40	; 64
    1498:	9f e1       	ldi	r25, 0x1F	; 31
    149a:	80 93 4c 0a 	sts	0x0A4C, r24	; 0x800a4c <encoderDir+0x7f5368>
    149e:	90 93 4d 0a 	sts	0x0A4D, r25	; 0x800a4d <encoderDir+0x7f5369>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:138
  TCB0_CTRLA = (1 << 1) | TCB_ENABLE_bm;
    14a2:	83 e0       	ldi	r24, 0x03	; 3
    14a4:	80 93 40 0a 	sts	0x0A40, r24	; 0x800a40 <encoderDir+0x7f535c>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:140

  sei(); // enable interrupts
    14a8:	78 94       	sei
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:141
  set_sleep_mode(SLEEP_MODE_PWR_DOWN);// configure sleep mode
    14aa:	80 91 50 00 	lds	r24, 0x0050	; 0x800050 <encoderDir+0x7f496c>
    14ae:	89 7f       	andi	r24, 0xF9	; 249
    14b0:	84 60       	ori	r24, 0x04	; 4
    14b2:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <encoderDir+0x7f496c>
    14b6:	9e 01       	movw	r18, r28
    14b8:	2f 5f       	subi	r18, 0xFF	; 255
    14ba:	3f 4f       	sbci	r19, 0xFF	; 255
    14bc:	cf 51       	subi	r28, 0x1F	; 31
    14be:	df 4f       	sbci	r29, 0xFF	; 255
    14c0:	28 83       	st	Y, r18
    14c2:	39 83       	std	Y+1, r19	; 0x01
    14c4:	c1 5e       	subi	r28, 0xE1	; 225
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:145
}

void loop() {
  showclock();
    14c6:	d0 40       	sbci	r29, 0x00	; 0
loop():
    14c8:	41 dc       	rcall	.-1918   	; 0xd4c <showclock()>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:147

  if (seconds != lastSecond) {
    14ca:	90 91 78 3b 	lds	r25, 0x3B78	; 0x803b78 <seconds>
    14ce:	80 91 77 3b 	lds	r24, 0x3B77	; 0x803b77 <lastSecond>
    14d2:	98 17       	cp	r25, r24
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:148
    lastSecond = seconds;
    14d4:	29 f0       	breq	.+10     	; 0x14e0 <main+0x16e>
    14d6:	80 91 78 3b 	lds	r24, 0x3B78	; 0x803b78 <seconds>
    14da:	80 93 77 3b 	sts	0x3B77, r24	; 0x803b77 <lastSecond>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:149
    battStatus();// update batt status when seconds change
    14de:	35 dd       	rcall	.-1430   	; 0xf4a <battStatus()>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:152
  }

  if ((interruptTimer - generalTimer) > 5000) { // sleep code while in clock mode
    14e0:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
    14e4:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    14e8:	20 91 73 3b 	lds	r18, 0x3B73	; 0x803b73 <generalTimer>
    14ec:	30 91 74 3b 	lds	r19, 0x3B74	; 0x803b74 <generalTimer+0x1>
    14f0:	82 1b       	sub	r24, r18
    14f2:	93 0b       	sbc	r25, r19
    14f4:	89 38       	cpi	r24, 0x89	; 137
    14f6:	93 41       	sbci	r25, 0x13	; 19
    14f8:	08 f4       	brcc	.+2      	; 0x14fc <main+0x18a>
    14fa:	47 c0       	rjmp	.+142    	; 0x158a <main+0x218>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:153
    generalTimer = interruptTimer;
    14fc:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
    1500:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    1504:	80 93 73 3b 	sts	0x3B73, r24	; 0x803b73 <generalTimer>
    1508:	90 93 74 3b 	sts	0x3B74, r25	; 0x803b74 <generalTimer+0x1>
analogRead():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring_analog.c:692
      // don't waste flash on smallest parts.
      if ((pin & 0x7F) > 0x1F) { // highest valid mux value for any 0 or 1-series part.
        return ADC_ERROR_BAD_PIN_OR_CHANNEL;
      }
    #endif
    if (!ADC0.CTRLA & 0x01) return ADC_ERROR_DISABLED;
    150c:	80 91 00 06 	lds	r24, 0x0600	; 0x800600 <encoderDir+0x7f4f1c>
main():
    1510:	69 ef       	ldi	r22, 0xF9	; 249
    1512:	72 e8       	ldi	r23, 0x82	; 130
analogRead():
    1514:	88 23       	and	r24, r24
    1516:	71 f0       	breq	.+28     	; 0x1534 <main+0x1c2>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring_analog.c:696
    pin &= 0x1F;
    /* Reference should be already set up */
    /* Select channel */
    ADC0.MUXPOS = (pin << ADC_MUXPOS_gp);
    1518:	87 e0       	ldi	r24, 0x07	; 7
    151a:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <encoderDir+0x7f4f22>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring_analog.c:703
    #if defined(STRICT_ERROR_CHECKING)
      if (ADC0.COMMAND) return ADC_ERROR_BUSY;
    #endif

    /* Start conversion */
    ADC0.COMMAND = ADC_STCONV_bm;
    151e:	81 e0       	ldi	r24, 0x01	; 1
    1520:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <encoderDir+0x7f4f24>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring_analog.c:706

    /* Wait for result ready */
    while (!(ADC0.INTFLAGS & ADC_RESRDY_bm));
    1524:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <encoderDir+0x7f4f27>
    1528:	80 ff       	sbrs	r24, 0
    152a:	fc cf       	rjmp	.-8      	; 0x1524 <main+0x1b2>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/wiring_analog.c:709

    /* Combine two bytes */
    return ADC0.RES;
    152c:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <encoderDir+0x7f4f2c>
    1530:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <encoderDir+0x7f4f2d>
loop():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:154
    randomSeed(analogRead(EXT));
    1534:	07 2e       	mov	r0, r23
    1536:	00 0c       	add	r0, r0
    1538:	88 0b       	sbc	r24, r24
    153a:	99 0b       	sbc	r25, r25
randomSeed():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/WMath.cpp:29
extern "C" {
#include "stdlib.h"
}

void randomSeed(unsigned long seed) {
  if (seed != 0) {
    153c:	61 15       	cp	r22, r1
    153e:	71 05       	cpc	r23, r1
    1540:	81 05       	cpc	r24, r1
    1542:	91 05       	cpc	r25, r1
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/WMath.cpp:30
    srandom(seed);
    1544:	11 f0       	breq	.+4      	; 0x154a <main+0x1d8>
    1546:	0e 94 91 1a 	call	0x3522	; 0x3522 <srandom>
loop():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:155
    strip.clear();
    154a:	f6 db       	rcall	.-2068   	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
show():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:76
    154c:	80 91 8a 3b 	lds	r24, 0x3B8A	; 0x803b8a <strip+0x6>
    1550:	90 91 8b 3b 	lds	r25, 0x3B8B	; 0x803b8b <strip+0x7>
    1554:	89 2b       	or	r24, r25
    1556:	31 f0       	breq	.+12     	; 0x1564 <main+0x1f2>
    1558:	80 91 88 3b 	lds	r24, 0x3B88	; 0x803b88 <strip+0x4>
    155c:	8c 30       	cpi	r24, 0x0C	; 12
    155e:	14 f4       	brge	.+4      	; 0x1564 <main+0x1f2>
    1560:	0e 94 26 02 	call	0x44c	; 0x44c <tinyNeoPixel::show() [clone .part.1] [clone .constprop.1]>
loop():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:157
    strip.show();
    lastMinute = 60;
    1564:	8c e3       	ldi	r24, 0x3C	; 60
    1566:	80 93 20 3a 	sts	0x3A20, r24	; 0x803a20 <lastMinute>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:158
    shouldWakeUp = false;
    156a:	10 92 1f 3a 	sts	0x3A1F, r1	; 0x803a1f <shouldWakeUp>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:159
    PORTA.OUT |= PIN4_bm;// P CHANNEL mosfet High to deactivate
    156e:	80 91 04 04 	lds	r24, 0x0404	; 0x800404 <encoderDir+0x7f4d20>
    1572:	80 61       	ori	r24, 0x10	; 16
    1574:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <encoderDir+0x7f4d20>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:160
    PORTA.PIN3CTRL = PORT_ISC_BOTHEDGES_gc; //attach interrupt to portA pin 3
    1578:	81 e0       	ldi	r24, 0x01	; 1
    157a:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <encoderDir+0x7f4d2f>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:161
    sleep_enable();
    157e:	80 91 50 00 	lds	r24, 0x0050	; 0x800050 <encoderDir+0x7f496c>
    1582:	81 60       	ori	r24, 0x01	; 1
    1584:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <encoderDir+0x7f496c>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:165
    sleep_cpu();// go to sleep
  }

  if (buttonDebounce(0, 0, 1, 1000) && (interruptTimer - generalTimer) > 1000) clockAlwaysOn (); // Clock always on function
    1588:	88 95       	sleep
    158a:	28 ee       	ldi	r18, 0xE8	; 232
    158c:	33 e0       	ldi	r19, 0x03	; 3
    158e:	41 e0       	ldi	r20, 0x01	; 1
    1590:	60 e0       	ldi	r22, 0x00	; 0
    1592:	80 e0       	ldi	r24, 0x00	; 0
    1594:	9b d9       	rcall	.-3274   	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
    1596:	88 23       	and	r24, r24
    1598:	09 f4       	brne	.+2      	; 0x159c <main+0x22a>
    159a:	84 c0       	rjmp	.+264    	; 0x16a4 <main+0x332>
    159c:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
    15a0:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    15a4:	20 91 73 3b 	lds	r18, 0x3B73	; 0x803b73 <generalTimer>
    15a8:	30 91 74 3b 	lds	r19, 0x3B74	; 0x803b74 <generalTimer+0x1>
    15ac:	82 1b       	sub	r24, r18
    15ae:	93 0b       	sbc	r25, r19
    15b0:	89 3e       	cpi	r24, 0xE9	; 233
    15b2:	93 40       	sbci	r25, 0x03	; 3
    15b4:	08 f4       	brcc	.+2      	; 0x15b8 <main+0x246>
    15b6:	76 c0       	rjmp	.+236    	; 0x16a4 <main+0x332>
clockAlwaysOn():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:216
    }
  }
}

void clockAlwaysOn (void) {
  encoder.encoderSetPosition(5, 2);
    15b8:	62 e0       	ldi	r22, 0x02	; 2
    15ba:	85 e0       	ldi	r24, 0x05	; 5
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	0e 94 ba 02 	call	0x574	; 0x574 <encoder::encoderSetPosition(int, unsigned char) [clone .constprop.9]>
main():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:231

    if (actualValue != lastRotaryValue) {
      generalTimer = interruptTimer;
      strip.setBrightness(actualValue);// brightness select from 0 to 255
      lastRotaryValue = actualValue;
      lastMinute = 60;
    15c2:	00 e0       	ldi	r16, 0x00	; 0
clockAlwaysOn():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:220
void clockAlwaysOn (void) {
  encoder.encoderSetPosition(5, 2);
  uint8_t lastRotaryValue = 0;
  uint8_t actualValue = 0;

  while (!buttonDebounce(1, 1, 1, 1000)) {
    15c4:	1c e3       	ldi	r17, 0x3C	; 60
    15c6:	d1 2e       	mov	r13, r17
    15c8:	28 ee       	ldi	r18, 0xE8	; 232
    15ca:	33 e0       	ldi	r19, 0x03	; 3
    15cc:	41 e0       	ldi	r20, 0x01	; 1
    15ce:	61 e0       	ldi	r22, 0x01	; 1
    15d0:	81 e0       	ldi	r24, 0x01	; 1
    15d2:	7c d9       	rcall	.-3336   	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:221
    battStatus();
    15d4:	81 11       	cpse	r24, r1
    15d6:	53 c0       	rjmp	.+166    	; 0x167e <main+0x30c>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:222
    showclock();
    15d8:	b8 dc       	rcall	.-1680   	; 0xf4a <battStatus()>
    15da:	b8 db       	rcall	.-2192   	; 0xd4c <showclock()>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:223
    strip.setPixelColor(61, red, green, blue);
    15dc:	e0 90 63 3b 	lds	r14, 0x3B63	; 0x803b63 <blue>
    15e0:	f0 90 62 3b 	lds	r15, 0x3B62	; 0x803b62 <green>
    15e4:	10 91 61 3b 	lds	r17, 0x3B61	; 0x803b61 <red>
    15e8:	2e 2d       	mov	r18, r14
    15ea:	4f 2d       	mov	r20, r15
    15ec:	61 2f       	mov	r22, r17
    15ee:	8d e3       	ldi	r24, 0x3D	; 61
    15f0:	90 e0       	ldi	r25, 0x00	; 0
    15f2:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:224
    strip.setPixelColor(81, red, green, blue);
    15f6:	2e 2d       	mov	r18, r14
    15f8:	4f 2d       	mov	r20, r15
    15fa:	61 2f       	mov	r22, r17
    15fc:	81 e5       	ldi	r24, 0x51	; 81
    15fe:	90 e0       	ldi	r25, 0x00	; 0
    1600:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:225
    actualValue =  encoder.encoderRead(2, 25, false, 2);
    1604:	22 e0       	ldi	r18, 0x02	; 2
    1606:	40 e0       	ldi	r20, 0x00	; 0
    1608:	69 e1       	ldi	r22, 0x19	; 25
    160a:	82 e0       	ldi	r24, 0x02	; 2
    160c:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]>
    1610:	18 2f       	mov	r17, r24
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:227

    if (actualValue != lastRotaryValue) {
    1612:	80 17       	cp	r24, r16
    1614:	69 f0       	breq	.+26     	; 0x1630 <main+0x2be>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:228
      generalTimer = interruptTimer;
    1616:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
    161a:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    161e:	80 93 73 3b 	sts	0x3B73, r24	; 0x803b73 <generalTimer>
    1622:	90 93 74 3b 	sts	0x3B74, r25	; 0x803b74 <generalTimer+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:229
      strip.setBrightness(actualValue);// brightness select from 0 to 255
    1626:	81 2f       	mov	r24, r17
    1628:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <tinyNeoPixel::setBrightness(unsigned char) [clone .constprop.6]>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:231
      lastRotaryValue = actualValue;
      lastMinute = 60;
    162c:	d0 92 20 3a 	sts	0x3A20, r13	; 0x803a20 <lastMinute>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:234
    }

    if ((interruptTimer - generalTimer) > 500) {
    1630:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
    1634:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    1638:	20 91 73 3b 	lds	r18, 0x3B73	; 0x803b73 <generalTimer>
    163c:	30 91 74 3b 	lds	r19, 0x3B74	; 0x803b74 <generalTimer+0x1>
    1640:	82 1b       	sub	r24, r18
    1642:	93 0b       	sbc	r25, r19
    1644:	85 3f       	cpi	r24, 0xF5	; 245
    1646:	91 40       	sbci	r25, 0x01	; 1
    1648:	c0 f0       	brcs	.+48     	; 0x167a <main+0x308>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:235
      generalTimer = interruptTimer;
    164a:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
    164e:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    1652:	80 93 73 3b 	sts	0x3B73, r24	; 0x803b73 <generalTimer>
    1656:	90 93 74 3b 	sts	0x3B74, r25	; 0x803b74 <generalTimer+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:236
      PORTA.PIN3CTRL  |= PORT_ISC_BOTHEDGES_gc;
    165a:	80 91 13 04 	lds	r24, 0x0413	; 0x800413 <encoderDir+0x7f4d2f>
    165e:	81 60       	ori	r24, 0x01	; 1
    1660:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <encoderDir+0x7f4d2f>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:237
      PORTA.PIN6CTRL  |= PORT_ISC_FALLING_gc;
    1664:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <encoderDir+0x7f4d32>
    1668:	83 60       	ori	r24, 0x03	; 3
    166a:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <encoderDir+0x7f4d32>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:238
      sleep_enable();
    166e:	80 91 50 00 	lds	r24, 0x0050	; 0x800050 <encoderDir+0x7f496c>
    1672:	81 60       	ori	r24, 0x01	; 1
    1674:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <encoderDir+0x7f496c>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:225
  while (!buttonDebounce(1, 1, 1, 1000)) {
    battStatus();
    showclock();
    strip.setPixelColor(61, red, green, blue);
    strip.setPixelColor(81, red, green, blue);
    actualValue =  encoder.encoderRead(2, 25, false, 2);
    1678:	88 95       	sleep
    167a:	01 2f       	mov	r16, r17
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:242
      PORTA.PIN6CTRL  |= PORT_ISC_FALLING_gc;
      sleep_enable();
      sleep_cpu();// go to sleep
    }
  }
  strip.clear();
    167c:	a5 cf       	rjmp	.-182    	; 0x15c8 <main+0x256>
    167e:	5c db       	rcall	.-2376   	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:243
  strip.setBrightness(brightLevel * 3);// brightness select from 0 to 255
    1680:	80 91 60 3b 	lds	r24, 0x3B60	; 0x803b60 <brightLevel>
    1684:	98 2f       	mov	r25, r24
    1686:	99 0f       	add	r25, r25
    1688:	89 0f       	add	r24, r25
    168a:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <tinyNeoPixel::setBrightness(unsigned char) [clone .constprop.6]>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:244
  generalTimer = interruptTimer;
    168e:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
    1692:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    1696:	80 93 73 3b 	sts	0x3B73, r24	; 0x803b73 <generalTimer>
    169a:	90 93 74 3b 	sts	0x3B74, r25	; 0x803b74 <generalTimer+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:245
  lastMinute = 60;
    169e:	8c e3       	ldi	r24, 0x3C	; 60
    16a0:	80 93 20 3a 	sts	0x3A20, r24	; 0x803a20 <lastMinute>
loop():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:167
    sleep_cpu();// go to sleep
  }

  if (buttonDebounce(0, 0, 1, 1000) && (interruptTimer - generalTimer) > 1000) clockAlwaysOn (); // Clock always on function

  if (buttonDebounce(1, 1, 0, 1000)) { // enters game mode
    16a4:	28 ee       	ldi	r18, 0xE8	; 232
    16a6:	33 e0       	ldi	r19, 0x03	; 3
    16a8:	40 e0       	ldi	r20, 0x00	; 0
    16aa:	61 e0       	ldi	r22, 0x01	; 1
    16ac:	81 e0       	ldi	r24, 0x01	; 1
    16ae:	0e d9       	rcall	.-3556   	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
    16b0:	88 23       	and	r24, r24
    16b2:	09 f4       	brne	.+2      	; 0x16b6 <main+0x344>
    16b4:	e8 c1       	rjmp	.+976    	; 0x1a86 <main+0x714>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:168
    strip.clear();
    16b6:	40 db       	rcall	.-2432   	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
gameSelection():
    16b8:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:287
  lastMinute = 60;
}

//game selection menu
void gameSelection() {
  enterGame = true;
    16ba:	80 93 72 3b 	sts	0x3B72, r24	; 0x803b72 <enterGame>
    16be:	80 91 6f 3b 	lds	r24, 0x3B6F	; 0x803b6f <gameSelect>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:289
  bool gameSelection = true;
  uint8_t lastGameSelect = (gameSelect + 1);
    16c2:	dd 24       	eor	r13, r13
    16c4:	d3 94       	inc	r13
    16c6:	d8 0e       	add	r13, r24
    16c8:	62 e0       	ldi	r22, 0x02	; 2
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:290
  encoder.encoderSetPosition(gameSelect, 2);
    16ca:	90 91 70 3b 	lds	r25, 0x3B70	; 0x803b70 <gameSelect+0x1>
    16ce:	0e 94 ba 02 	call	0x574	; 0x574 <encoder::encoderSetPosition(int, unsigned char) [clone .constprop.9]>
    16d2:	bb 24       	eor	r11, r11
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:297
  while (gameSelection) {
    gameSelect = encoder.encoderRead(0, 5, false, 2);

    if (lastGameSelect != gameSelect) {
      lastGameSelect = gameSelect;
      textScrolling = true;
    16d4:	b3 94       	inc	r11
    16d6:	22 e0       	ldi	r18, 0x02	; 2
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:293
  bool gameSelection = true;
  uint8_t lastGameSelect = (gameSelect + 1);
  encoder.encoderSetPosition(gameSelect, 2);

  while (gameSelection) {
    gameSelect = encoder.encoderRead(0, 5, false, 2);
    16d8:	40 e0       	ldi	r20, 0x00	; 0
    16da:	65 e0       	ldi	r22, 0x05	; 5
    16dc:	80 e0       	ldi	r24, 0x00	; 0
    16de:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]>
    16e2:	18 2f       	mov	r17, r24
    16e4:	e8 2e       	mov	r14, r24
    16e6:	f1 2c       	mov	r15, r1
    16e8:	e0 92 6f 3b 	sts	0x3B6F, r14	; 0x803b6f <gameSelect>
    16ec:	f0 92 70 3b 	sts	0x3B70, r15	; 0x803b70 <gameSelect+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:295

    if (lastGameSelect != gameSelect) {
    16f0:	de 14       	cp	r13, r14
    16f2:	1f 04       	cpc	r1, r15
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:297
      lastGameSelect = gameSelect;
      textScrolling = true;
    16f4:	01 f1       	breq	.+64     	; 0x1736 <main+0x3c4>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:298
      strip.clear();
    16f6:	b0 92 1c 3a 	sts	0x3A1C, r11	; 0x803a1c <textScrolling>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:299
      drawCharacter(50, arrowLeft, 100, 0, 0);
    16fa:	1e db       	rcall	.-2500   	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
    16fc:	00 e0       	ldi	r16, 0x00	; 0
    16fe:	20 e0       	ldi	r18, 0x00	; 0
    1700:	44 e6       	ldi	r20, 0x64	; 100
    1702:	63 ef       	ldi	r22, 0xF3	; 243
    1704:	71 e0       	ldi	r23, 0x01	; 1
    1706:	82 e3       	ldi	r24, 0x32	; 50
    1708:	14 d8       	rcall	.-4056   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:300
      drawCharacter(57, arrowRight, 100, 0, 0);
    170a:	20 e0       	ldi	r18, 0x00	; 0
    170c:	44 e6       	ldi	r20, 0x64	; 100
    170e:	6d ee       	ldi	r22, 0xED	; 237
    1710:	71 e0       	ldi	r23, 0x01	; 1
    1712:	89 e3       	ldi	r24, 0x39	; 57
    1714:	0e d8       	rcall	.-4068   	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    1716:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <encoderDir+0x7f4d2d>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:301
      PORTA.PIN1CTRL |= PORT_ISC_FALLING_gc;
    171a:	83 60       	ori	r24, 0x03	; 3
    171c:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <encoderDir+0x7f4d2d>
    1720:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <encoderDir+0x7f4d2e>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:302
      PORTA.PIN2CTRL |= PORT_ISC_FALLING_gc;
    1724:	83 60       	ori	r24, 0x03	; 3
    1726:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <encoderDir+0x7f4d2e>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:303
      PORTA.PIN6CTRL  |= PORT_ISC_FALLING_gc;
    172a:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <encoderDir+0x7f4d32>
    172e:	83 60       	ori	r24, 0x03	; 3
    1730:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <encoderDir+0x7f4d32>
main():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:296

  while (gameSelection) {
    gameSelect = encoder.encoderRead(0, 5, false, 2);

    if (lastGameSelect != gameSelect) {
      lastGameSelect = gameSelect;
    1734:	d1 2e       	mov	r13, r17
gameSelection():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:306
      PORTA.PIN1CTRL |= PORT_ISC_FALLING_gc;
      PORTA.PIN2CTRL |= PORT_ISC_FALLING_gc;
      PORTA.PIN6CTRL  |= PORT_ISC_FALLING_gc;
    }

    if (buttonDebounce(1, 1 , 0, 1000)) gameSelection = false;
    1736:	28 ee       	ldi	r18, 0xE8	; 232
    1738:	33 e0       	ldi	r19, 0x03	; 3
    173a:	40 e0       	ldi	r20, 0x00	; 0
    173c:	61 e0       	ldi	r22, 0x01	; 1
    173e:	81 e0       	ldi	r24, 0x01	; 1
    1740:	c5 d8       	rcall	.-3702   	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
    1742:	c8 2e       	mov	r12, r24
    1744:	12 30       	cpi	r17, 0x02	; 2
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:308

    switch (gameSelect) { // select game ad scroll game title
    1746:	09 f4       	brne	.+2      	; 0x174a <main+0x3d8>
    1748:	c8 c0       	rjmp	.+400    	; 0x18da <main+0x568>
    174a:	08 f0       	brcs	.+2      	; 0x174e <main+0x3dc>
    174c:	52 c0       	rjmp	.+164    	; 0x17f2 <main+0x480>
    174e:	11 23       	and	r17, r17
    1750:	09 f4       	brne	.+2      	; 0x1754 <main+0x3e2>
    1752:	72 c0       	rjmp	.+228    	; 0x1838 <main+0x4c6>
    1754:	11 30       	cpi	r17, 0x01	; 1
    1756:	09 f4       	brne	.+2      	; 0x175a <main+0x3e8>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:292
  enterGame = true;
  bool gameSelection = true;
  uint8_t lastGameSelect = (gameSelect + 1);
  encoder.encoderSetPosition(gameSelect, 2);

  while (gameSelection) {
    1758:	8d c0       	rjmp	.+282    	; 0x1874 <main+0x502>
    175a:	cc 20       	and	r12, r12
    175c:	09 f4       	brne	.+2      	; 0x1760 <main+0x3ee>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:397
        drawCharacter(6, letterD, 100, 0, 0);
        break;
    }
  }

  if (gameSelect == 0) setOptions();
    175e:	bb cf       	rjmp	.-138    	; 0x16d6 <main+0x364>
    1760:	ef 28       	or	r14, r15
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1382
  }
}

// main screen options menu
void setOptions() {
  strip.clear();
    1762:	09 f0       	breq	.+2      	; 0x1766 <main+0x3f4>
    1764:	7b c1       	rjmp	.+758    	; 0x1a5c <main+0x6ea>
setOptions():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1384
  int8_t option = 0;
  uint8_t actualEncoderValue = 100;
    1766:	e8 da       	rcall	.-2608   	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
main():
    1768:	b4 e6       	ldi	r27, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1383
}

// main screen options menu
void setOptions() {
  strip.clear();
  int8_t option = 0;
    176a:	fb 2e       	mov	r15, r27
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1388
  uint8_t actualEncoderValue = 100;

  while (option < 5) {

    if (buttonDebounce(0, 1, 0, 1000)) {
    176c:	10 e0       	ldi	r17, 0x00	; 0
setOptions():
    176e:	28 ee       	ldi	r18, 0xE8	; 232
    1770:	33 e0       	ldi	r19, 0x03	; 3
    1772:	40 e0       	ldi	r20, 0x00	; 0
    1774:	61 e0       	ldi	r22, 0x01	; 1
    1776:	80 e0       	ldi	r24, 0x00	; 0
    1778:	a9 d8       	rcall	.-3758   	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1389
      if (option++, option > 4)  option = 0;
    177a:	88 23       	and	r24, r24
    177c:	29 f0       	breq	.+10     	; 0x1788 <main+0x416>
    177e:	1f 5f       	subi	r17, 0xFF	; 255
    1780:	15 30       	cpi	r17, 0x05	; 5
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1390
      strip.clear();
    1782:	09 f4       	brne	.+2      	; 0x1786 <main+0x414>
    1784:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1393
    }

    if (buttonDebounce(1, 0, 0, 1000)) {
    1786:	d8 da       	rcall	.-2640   	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
    1788:	28 ee       	ldi	r18, 0xE8	; 232
    178a:	33 e0       	ldi	r19, 0x03	; 3
    178c:	40 e0       	ldi	r20, 0x00	; 0
    178e:	60 e0       	ldi	r22, 0x00	; 0
    1790:	81 e0       	ldi	r24, 0x01	; 1
    1792:	9c d8       	rcall	.-3784   	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
    1794:	88 23       	and	r24, r24
    1796:	09 f4       	brne	.+2      	; 0x179a <main+0x428>
    1798:	1c c1       	rjmp	.+568    	; 0x19d2 <main+0x660>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1394
      if (option--, option < 0)  option = 4;
    179a:	11 50       	subi	r17, 0x01	; 1
    179c:	08 f0       	brcs	.+2      	; 0x17a0 <main+0x42e>
    179e:	18 c1       	rjmp	.+560    	; 0x19d0 <main+0x65e>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1395
      strip.clear();
    17a0:	cb da       	rcall	.-2666   	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
    17a2:	d0 90 63 3b 	lds	r13, 0x3B63	; 0x803b63 <blue>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1455
        showTime(53, minutes);
        minutes = encoder.encoderRead(0, 59, true, 1);
        break;

      case 4:
        drawCharacter(20, letterE, red, green, blue);
    17a6:	e0 90 62 3b 	lds	r14, 0x3B62	; 0x803b62 <green>
    17aa:	10 91 61 3b 	lds	r17, 0x3B61	; 0x803b61 <red>
    17ae:	0d 2d       	mov	r16, r13
    17b0:	2e 2d       	mov	r18, r14
    17b2:	41 2f       	mov	r20, r17
    17b4:	6f e9       	ldi	r22, 0x9F	; 159
    17b6:	72 e0       	ldi	r23, 0x02	; 2
    17b8:	84 e1       	ldi	r24, 0x14	; 20
    17ba:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1456
        drawCharacter(23, letterN, red, green, blue);
    17be:	2e 2d       	mov	r18, r14
    17c0:	41 2f       	mov	r20, r17
    17c2:	60 e4       	ldi	r22, 0x40	; 64
    17c4:	72 e0       	ldi	r23, 0x02	; 2
    17c6:	87 e1       	ldi	r24, 0x17	; 23
    17c8:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1457
        drawCharacter(26, letterD, red, green, blue);
    17cc:	2e 2d       	mov	r18, r14
    17ce:	41 2f       	mov	r20, r17
    17d0:	6a ed       	ldi	r22, 0xDA	; 218
    17d2:	71 e0       	ldi	r23, 0x01	; 1
    17d4:	8a e1       	ldi	r24, 0x1A	; 26
    17d6:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1459

        if (buttonDebounce (0, 0, 1, 1000)) option = 5; // end options
    17da:	28 ee       	ldi	r18, 0xE8	; 232
    17dc:	33 e0       	ldi	r19, 0x03	; 3
    17de:	41 e0       	ldi	r20, 0x01	; 1
    17e0:	60 e0       	ldi	r22, 0x00	; 0
    17e2:	80 e0       	ldi	r24, 0x00	; 0
    17e4:	73 d8       	rcall	.-3866   	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
    17e6:	14 e0       	ldi	r17, 0x04	; 4
    17e8:	88 23       	and	r24, r24
    17ea:	09 f4       	brne	.+2      	; 0x17ee <main+0x47c>
    17ec:	28 c1       	rjmp	.+592    	; 0x1a3e <main+0x6cc>
main():
    17ee:	15 e0       	ldi	r17, 0x05	; 5
    17f0:	26 c1       	rjmp	.+588    	; 0x1a3e <main+0x6cc>
gameSelection():
    17f2:	14 30       	cpi	r17, 0x04	; 4
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:308
      PORTA.PIN6CTRL  |= PORT_ISC_FALLING_gc;
    }

    if (buttonDebounce(1, 1 , 0, 1000)) gameSelection = false;

    switch (gameSelect) { // select game ad scroll game title
    17f4:	09 f4       	brne	.+2      	; 0x17f8 <main+0x486>
    17f6:	c3 c0       	rjmp	.+390    	; 0x197e <main+0x60c>
    17f8:	08 f4       	brcc	.+2      	; 0x17fc <main+0x48a>
    17fa:	98 c0       	rjmp	.+304    	; 0x192c <main+0x5ba>
    17fc:	15 30       	cpi	r17, 0x05	; 5
    17fe:	09 f0       	breq	.+2      	; 0x1802 <main+0x490>
    1800:	ac cf       	rjmp	.-168    	; 0x175a <main+0x3e8>
    1802:	24 e6       	ldi	r18, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:389
          }
        }
        break;

      case 5:
        strip.setPixelColor(77, 0, 0, 100);
    1804:	40 e0       	ldi	r20, 0x00	; 0
    1806:	60 e0       	ldi	r22, 0x00	; 0
    1808:	8d e4       	ldi	r24, 0x4D	; 77
    180a:	90 e0       	ldi	r25, 0x00	; 0
    180c:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    1810:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:390
        drawCharacter(0, letterE, 100, 0, 0);
    1812:	20 e0       	ldi	r18, 0x00	; 0
    1814:	44 e6       	ldi	r20, 0x64	; 100
    1816:	6f e9       	ldi	r22, 0x9F	; 159
    1818:	72 e0       	ldi	r23, 0x02	; 2
    181a:	80 e0       	ldi	r24, 0x00	; 0
    181c:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    1820:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:391
        drawCharacter(3, letterN, 100, 0, 0);
    1822:	44 e6       	ldi	r20, 0x64	; 100
    1824:	60 e4       	ldi	r22, 0x40	; 64
    1826:	72 e0       	ldi	r23, 0x02	; 2
    1828:	83 e0       	ldi	r24, 0x03	; 3
    182a:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    182e:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:392
        drawCharacter(6, letterD, 100, 0, 0);
    1830:	44 e6       	ldi	r20, 0x64	; 100
    1832:	6a ed       	ldi	r22, 0xDA	; 218
    1834:	71 e0       	ldi	r23, 0x01	; 1
    1836:	1a c0       	rjmp	.+52     	; 0x186c <main+0x4fa>
    1838:	24 e6       	ldi	r18, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:310

    if (buttonDebounce(1, 1 , 0, 1000)) gameSelection = false;

    switch (gameSelect) { // select game ad scroll game title
      case 0:
        strip.setPixelColor(72, 0, 0, 100);
    183a:	40 e0       	ldi	r20, 0x00	; 0
    183c:	60 e0       	ldi	r22, 0x00	; 0
    183e:	88 e4       	ldi	r24, 0x48	; 72
    1840:	90 e0       	ldi	r25, 0x00	; 0
    1842:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    1846:	04 e6       	ldi	r16, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:311
        drawCharacter(0, letterS, 0, 0, 100);
    1848:	20 e0       	ldi	r18, 0x00	; 0
    184a:	40 e0       	ldi	r20, 0x00	; 0
    184c:	6b ea       	ldi	r22, 0xAB	; 171
    184e:	72 e0       	ldi	r23, 0x02	; 2
    1850:	80 e0       	ldi	r24, 0x00	; 0
    1852:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    1856:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:312
        drawCharacter(3, letterE, 0, 0, 100);
    1858:	40 e0       	ldi	r20, 0x00	; 0
    185a:	6f e9       	ldi	r22, 0x9F	; 159
    185c:	72 e0       	ldi	r23, 0x02	; 2
    185e:	83 e0       	ldi	r24, 0x03	; 3
    1860:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    1864:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:313
        drawCharacter(6, letterT, 0, 0, 100);
    1866:	40 e0       	ldi	r20, 0x00	; 0
    1868:	65 ee       	ldi	r22, 0xE5	; 229
    186a:	71 e0       	ldi	r23, 0x01	; 1
    186c:	86 e0       	ldi	r24, 0x06	; 6
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:392

      case 5:
        strip.setPixelColor(77, 0, 0, 100);
        drawCharacter(0, letterE, 100, 0, 0);
        drawCharacter(3, letterN, 100, 0, 0);
        drawCharacter(6, letterD, 100, 0, 0);
    186e:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    1872:	73 cf       	rjmp	.-282    	; 0x175a <main+0x3e8>
    1874:	24 e6       	ldi	r18, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:317
        drawCharacter(3, letterE, 0, 0, 100);
        drawCharacter(6, letterT, 0, 0, 100);
        break;

      case 1:
        strip.setPixelColor(73, 0, 0, 100);
    1876:	40 e0       	ldi	r20, 0x00	; 0
    1878:	60 e0       	ldi	r22, 0x00	; 0
    187a:	89 e4       	ldi	r24, 0x49	; 73
    187c:	90 e0       	ldi	r25, 0x00	; 0
    187e:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
main():
    1882:	10 e0       	ldi	r17, 0x00	; 0
gameSelection():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:319

        for (uint8_t x = 0; x < 5 && textScrolling; x++) {
    1884:	80 91 1c 3a 	lds	r24, 0x3A1C	; 0x803a1c <textScrolling>
    1888:	88 23       	and	r24, r24
    188a:	09 f4       	brne	.+2      	; 0x188e <main+0x51c>
    188c:	66 cf       	rjmp	.-308    	; 0x175a <main+0x3e8>
    188e:	12 30       	cpi	r17, 0x02	; 2
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:320
          switch (x) {
    1890:	c1 f0       	breq	.+48     	; 0x18c2 <main+0x550>
    1892:	30 f4       	brcc	.+12     	; 0x18a0 <main+0x52e>
    1894:	11 30       	cpi	r17, 0x01	; 1
    1896:	71 f0       	breq	.+28     	; 0x18b4 <main+0x542>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:319
        break;

      case 1:
        strip.setPixelColor(73, 0, 0, 100);

        for (uint8_t x = 0; x < 5 && textScrolling; x++) {
    1898:	1f 5f       	subi	r17, 0xFF	; 255
    189a:	15 30       	cpi	r17, 0x05	; 5
    189c:	99 f7       	brne	.-26     	; 0x1884 <main+0x512>
    189e:	5d cf       	rjmp	.-326    	; 0x175a <main+0x3e8>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:320
          switch (x) {
    18a0:	13 30       	cpi	r17, 0x03	; 3
    18a2:	a9 f0       	breq	.+42     	; 0x18ce <main+0x55c>
    18a4:	14 30       	cpi	r17, 0x04	; 4
    18a6:	c1 f7       	brne	.-16     	; 0x1898 <main+0x526>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:331
              break;
            case 3:
              scrollPixels(ledInvadersTitle3, 0, 100, 0);
              break;
            case 4:
              scrollPixels(ledInvadersTitle4, 0, 100, 0);
    18a8:	20 e0       	ldi	r18, 0x00	; 0
    18aa:	44 e6       	ldi	r20, 0x64	; 100
    18ac:	60 e0       	ldi	r22, 0x00	; 0
    18ae:	88 e6       	ldi	r24, 0x68	; 104
    18b0:	99 e3       	ldi	r25, 0x39	; 57
    18b2:	05 c0       	rjmp	.+10     	; 0x18be <main+0x54c>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:322
        strip.setPixelColor(73, 0, 0, 100);

        for (uint8_t x = 0; x < 5 && textScrolling; x++) {
          switch (x) {
            case 1:
              scrollPixels(ledInvadersTitle1, 0, 100, 0);
    18b4:	20 e0       	ldi	r18, 0x00	; 0
    18b6:	44 e6       	ldi	r20, 0x64	; 100
    18b8:	60 e0       	ldi	r22, 0x00	; 0
    18ba:	8f ee       	ldi	r24, 0xEF	; 239
    18bc:	99 e3       	ldi	r25, 0x39	; 57
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:331
              break;
            case 3:
              scrollPixels(ledInvadersTitle3, 0, 100, 0);
              break;
            case 4:
              scrollPixels(ledInvadersTitle4, 0, 100, 0);
    18be:	89 d8       	rcall	.-3822   	; 0x9d2 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)>
    18c0:	eb cf       	rjmp	.-42     	; 0x1898 <main+0x526>
    18c2:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:325
          switch (x) {
            case 1:
              scrollPixels(ledInvadersTitle1, 0, 100, 0);
              break;
            case 2:
              scrollPixels(ledInvadersTitle2, 0, 100, 0);
    18c4:	44 e6       	ldi	r20, 0x64	; 100
    18c6:	60 e0       	ldi	r22, 0x00	; 0
    18c8:	82 ec       	ldi	r24, 0xC2	; 194
    18ca:	99 e3       	ldi	r25, 0x39	; 57
    18cc:	f8 cf       	rjmp	.-16     	; 0x18be <main+0x54c>
    18ce:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:328
              break;
            case 3:
              scrollPixels(ledInvadersTitle3, 0, 100, 0);
    18d0:	44 e6       	ldi	r20, 0x64	; 100
    18d2:	60 e0       	ldi	r22, 0x00	; 0
    18d4:	85 e9       	ldi	r24, 0x95	; 149
    18d6:	99 e3       	ldi	r25, 0x39	; 57
    18d8:	f2 cf       	rjmp	.-28     	; 0x18be <main+0x54c>
    18da:	24 e6       	ldi	r18, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:337
              break;
          }
        }
        break;
      case 2:
        strip.setPixelColor(74, 0, 0, 100);
    18dc:	40 e0       	ldi	r20, 0x00	; 0
    18de:	60 e0       	ldi	r22, 0x00	; 0
    18e0:	8a e4       	ldi	r24, 0x4A	; 74
    18e2:	90 e0       	ldi	r25, 0x00	; 0
    18e4:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
main():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:339

        for (uint8_t x = 0; x < 4 && textScrolling; x++) {
    18e8:	10 e0       	ldi	r17, 0x00	; 0
gameSelection():
    18ea:	80 91 1c 3a 	lds	r24, 0x3A1C	; 0x803a1c <textScrolling>
    18ee:	88 23       	and	r24, r24
    18f0:	09 f4       	brne	.+2      	; 0x18f4 <main+0x582>
    18f2:	33 cf       	rjmp	.-410    	; 0x175a <main+0x3e8>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:340
          switch (x) {
    18f4:	12 30       	cpi	r17, 0x02	; 2
    18f6:	71 f0       	breq	.+28     	; 0x1914 <main+0x5a2>
    18f8:	13 30       	cpi	r17, 0x03	; 3
    18fa:	91 f0       	breq	.+36     	; 0x1920 <main+0x5ae>
    18fc:	11 30       	cpi	r17, 0x01	; 1
    18fe:	31 f4       	brne	.+12     	; 0x190c <main+0x59a>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:342
            case 1:
              scrollPixels(ledInvadersTitle1, 80, 80, 0);
    1900:	20 e0       	ldi	r18, 0x00	; 0
    1902:	40 e5       	ldi	r20, 0x50	; 80
    1904:	60 e5       	ldi	r22, 0x50	; 80
    1906:	8f ee       	ldi	r24, 0xEF	; 239
    1908:	99 e3       	ldi	r25, 0x39	; 57
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:348
              break;
            case 2:
              scrollPixels(ledTrisTitle2, 80, 80, 0);
              break;
            case 3:
              scrollPixels(ledTrisTitle3, 80, 80, 0);
    190a:	63 d8       	rcall	.-3898   	; 0x9d2 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)>
    190c:	1f 5f       	subi	r17, 0xFF	; 255
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:339
        }
        break;
      case 2:
        strip.setPixelColor(74, 0, 0, 100);

        for (uint8_t x = 0; x < 4 && textScrolling; x++) {
    190e:	14 30       	cpi	r17, 0x04	; 4
    1910:	61 f7       	brne	.-40     	; 0x18ea <main+0x578>
    1912:	23 cf       	rjmp	.-442    	; 0x175a <main+0x3e8>
    1914:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:345
          switch (x) {
            case 1:
              scrollPixels(ledInvadersTitle1, 80, 80, 0);
              break;
            case 2:
              scrollPixels(ledTrisTitle2, 80, 80, 0);
    1916:	40 e5       	ldi	r20, 0x50	; 80
    1918:	60 e5       	ldi	r22, 0x50	; 80
    191a:	8b e3       	ldi	r24, 0x3B	; 59
    191c:	99 e3       	ldi	r25, 0x39	; 57
    191e:	f5 cf       	rjmp	.-22     	; 0x190a <main+0x598>
    1920:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:348
              break;
            case 3:
              scrollPixels(ledTrisTitle3, 80, 80, 0);
    1922:	40 e5       	ldi	r20, 0x50	; 80
    1924:	60 e5       	ldi	r22, 0x50	; 80
    1926:	8e e0       	ldi	r24, 0x0E	; 14
    1928:	99 e3       	ldi	r25, 0x39	; 57
    192a:	ef cf       	rjmp	.-34     	; 0x190a <main+0x598>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:354
              break;
          }
        }
        break;
      case 3:
        strip.setPixelColor(75, 0, 0, 100);
    192c:	24 e6       	ldi	r18, 0x64	; 100
    192e:	40 e0       	ldi	r20, 0x00	; 0
    1930:	60 e0       	ldi	r22, 0x00	; 0
    1932:	8b e4       	ldi	r24, 0x4B	; 75
    1934:	90 e0       	ldi	r25, 0x00	; 0
    1936:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
main():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:356

        for (uint8_t x = 0; x < 4 && textScrolling; x++) {
    193a:	10 e0       	ldi	r17, 0x00	; 0
gameSelection():
    193c:	80 91 1c 3a 	lds	r24, 0x3A1C	; 0x803a1c <textScrolling>
    1940:	88 23       	and	r24, r24
    1942:	09 f4       	brne	.+2      	; 0x1946 <main+0x5d4>
    1944:	0a cf       	rjmp	.-492    	; 0x175a <main+0x3e8>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:357
          switch (x) {
    1946:	12 30       	cpi	r17, 0x02	; 2
    1948:	71 f0       	breq	.+28     	; 0x1966 <main+0x5f4>
    194a:	13 30       	cpi	r17, 0x03	; 3
    194c:	91 f0       	breq	.+36     	; 0x1972 <main+0x600>
    194e:	11 30       	cpi	r17, 0x01	; 1
    1950:	31 f4       	brne	.+12     	; 0x195e <main+0x5ec>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:359
            case 1:
              scrollPixels(flappyLedTitle1, 0, 100, 0);
    1952:	20 e0       	ldi	r18, 0x00	; 0
    1954:	44 e6       	ldi	r20, 0x64	; 100
    1956:	60 e0       	ldi	r22, 0x00	; 0
    1958:	81 ee       	ldi	r24, 0xE1	; 225
    195a:	98 e3       	ldi	r25, 0x38	; 56
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:365
              break;
            case 2:
              scrollPixels(flappyLedTitle2, 0, 100, 0);
              break;
            case 3:
              scrollPixels(ledInvadersTitle1, 0, 100, 0);
    195c:	3a d8       	rcall	.-3980   	; 0x9d2 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)>
    195e:	1f 5f       	subi	r17, 0xFF	; 255
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:356
        }
        break;
      case 3:
        strip.setPixelColor(75, 0, 0, 100);

        for (uint8_t x = 0; x < 4 && textScrolling; x++) {
    1960:	14 30       	cpi	r17, 0x04	; 4
    1962:	61 f7       	brne	.-40     	; 0x193c <main+0x5ca>
    1964:	fa ce       	rjmp	.-524    	; 0x175a <main+0x3e8>
    1966:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:362
          switch (x) {
            case 1:
              scrollPixels(flappyLedTitle1, 0, 100, 0);
              break;
            case 2:
              scrollPixels(flappyLedTitle2, 0, 100, 0);
    1968:	44 e6       	ldi	r20, 0x64	; 100
    196a:	60 e0       	ldi	r22, 0x00	; 0
    196c:	84 eb       	ldi	r24, 0xB4	; 180
    196e:	98 e3       	ldi	r25, 0x38	; 56
    1970:	f5 cf       	rjmp	.-22     	; 0x195c <main+0x5ea>
    1972:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:365
              break;
            case 3:
              scrollPixels(ledInvadersTitle1, 0, 100, 0);
    1974:	44 e6       	ldi	r20, 0x64	; 100
    1976:	60 e0       	ldi	r22, 0x00	; 0
    1978:	8f ee       	ldi	r24, 0xEF	; 239
    197a:	99 e3       	ldi	r25, 0x39	; 57
    197c:	ef cf       	rjmp	.-34     	; 0x195c <main+0x5ea>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:371
              break;
          }
        }
        break;
      case 4:
        strip.setPixelColor(76, 0, 0, 100);
    197e:	24 e6       	ldi	r18, 0x64	; 100
    1980:	40 e0       	ldi	r20, 0x00	; 0
    1982:	60 e0       	ldi	r22, 0x00	; 0
    1984:	8c e4       	ldi	r24, 0x4C	; 76
    1986:	90 e0       	ldi	r25, 0x00	; 0
    1988:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
main():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:373

        for (uint8_t x = 0; x < 4 && textScrolling; x++) {
    198c:	10 e0       	ldi	r17, 0x00	; 0
gameSelection():
    198e:	80 91 1c 3a 	lds	r24, 0x3A1C	; 0x803a1c <textScrolling>
    1992:	88 23       	and	r24, r24
    1994:	09 f4       	brne	.+2      	; 0x1998 <main+0x626>
    1996:	e1 ce       	rjmp	.-574    	; 0x175a <main+0x3e8>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:374
          switch (x) {
    1998:	12 30       	cpi	r17, 0x02	; 2
    199a:	71 f0       	breq	.+28     	; 0x19b8 <main+0x646>
    199c:	13 30       	cpi	r17, 0x03	; 3
    199e:	91 f0       	breq	.+36     	; 0x19c4 <main+0x652>
    19a0:	11 30       	cpi	r17, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:376
            case 1:
              scrollPixels(ledInvadersTitle1, 80, 80, 0);
    19a2:	31 f4       	brne	.+12     	; 0x19b0 <main+0x63e>
    19a4:	20 e0       	ldi	r18, 0x00	; 0
    19a6:	40 e5       	ldi	r20, 0x50	; 80
    19a8:	60 e5       	ldi	r22, 0x50	; 80
    19aa:	8f ee       	ldi	r24, 0xEF	; 239
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:382
              break;
            case 2:
              scrollPixels(ledKanoidTitle1, 80, 80, 0);
              break;
            case 3:
              scrollPixels(ledKanoidTitle2, 80, 80, 0);
    19ac:	99 e3       	ldi	r25, 0x39	; 57
    19ae:	11 d8       	rcall	.-4062   	; 0x9d2 <scrollPixels(unsigned char (*) [9], unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:373
        }
        break;
      case 4:
        strip.setPixelColor(76, 0, 0, 100);

        for (uint8_t x = 0; x < 4 && textScrolling; x++) {
    19b0:	1f 5f       	subi	r17, 0xFF	; 255
    19b2:	14 30       	cpi	r17, 0x04	; 4
    19b4:	61 f7       	brne	.-40     	; 0x198e <main+0x61c>
    19b6:	d1 ce       	rjmp	.-606    	; 0x175a <main+0x3e8>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:379
          switch (x) {
            case 1:
              scrollPixels(ledInvadersTitle1, 80, 80, 0);
              break;
            case 2:
              scrollPixels(ledKanoidTitle1, 80, 80, 0);
    19b8:	20 e0       	ldi	r18, 0x00	; 0
    19ba:	40 e5       	ldi	r20, 0x50	; 80
    19bc:	60 e5       	ldi	r22, 0x50	; 80
    19be:	87 e8       	ldi	r24, 0x87	; 135
    19c0:	98 e3       	ldi	r25, 0x38	; 56
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:382
              break;
            case 3:
              scrollPixels(ledKanoidTitle2, 80, 80, 0);
    19c2:	f5 cf       	rjmp	.-22     	; 0x19ae <main+0x63c>
    19c4:	20 e0       	ldi	r18, 0x00	; 0
    19c6:	40 e5       	ldi	r20, 0x50	; 80
    19c8:	60 e5       	ldi	r22, 0x50	; 80
    19ca:	8a e5       	ldi	r24, 0x5A	; 90
    19cc:	98 e3       	ldi	r25, 0x38	; 56
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1395
      strip.clear();
    }

    if (buttonDebounce(1, 0, 0, 1000)) {
      if (option--, option < 0)  option = 4;
      strip.clear();
    19ce:	ef cf       	rjmp	.-34     	; 0x19ae <main+0x63c>
setOptions():
    19d0:	b3 d9       	rcall	.-3226   	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1398
    }

    switch (option) { // color NeoPixel LED number from first to last
    19d2:	12 30       	cpi	r17, 0x02	; 2
    19d4:	09 f4       	brne	.+2      	; 0x19d8 <main+0x666>
    19d6:	9e c0       	rjmp	.+316    	; 0x1b14 <main+0x7a2>
    19d8:	0c f0       	brlt	.+2      	; 0x19dc <main+0x66a>
    19da:	64 c0       	rjmp	.+200    	; 0x1aa4 <main+0x732>
    19dc:	11 30       	cpi	r17, 0x01	; 1
    19de:	09 f4       	brne	.+2      	; 0x19e2 <main+0x670>
    19e0:	68 c0       	rjmp	.+208    	; 0x1ab2 <main+0x740>
    19e2:	10 91 64 3b 	lds	r17, 0x3B64	; 0x803b64 <color>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1401
      case 0:

        if (actualEncoderValue != color) {
    19e6:	1f 15       	cp	r17, r15
    19e8:	29 f0       	breq	.+10     	; 0x19f4 <main+0x682>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1403
          actualEncoderValue = color;
          strip.clear();
    19ea:	a6 d9       	rcall	.-3252   	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
encoderSetPosition():
    19ec:	81 2f       	mov	r24, r17
    19ee:	90 e0       	ldi	r25, 0x00	; 0
    19f0:	0e 94 a4 02 	call	0x548	; 0x548 <encoder::encoderSetPosition(int, unsigned char) [clone .part.0]>
setOptions():
    19f4:	d0 90 63 3b 	lds	r13, 0x3B63	; 0x803b63 <blue>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1406
          encoder.encoderSetPosition(color, 1);
        }
        drawCharacter(0, letterC, red, green, blue); // color selection
    19f8:	e0 90 62 3b 	lds	r14, 0x3B62	; 0x803b62 <green>
    19fc:	f0 90 61 3b 	lds	r15, 0x3B61	; 0x803b61 <red>
    1a00:	0d 2d       	mov	r16, r13
    1a02:	2e 2d       	mov	r18, r14
    1a04:	4f 2d       	mov	r20, r15
    1a06:	62 ed       	ldi	r22, 0xD2	; 210
    1a08:	71 e0       	ldi	r23, 0x01	; 1
    1a0a:	80 e0       	ldi	r24, 0x00	; 0
    1a0c:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    1a10:	2e 2d       	mov	r18, r14
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1407
        drawCharacter(4, letterO, red, green, blue);
    1a12:	4f 2d       	mov	r20, r15
    1a14:	69 ec       	ldi	r22, 0xC9	; 201
    1a16:	71 e0       	ldi	r23, 0x01	; 1
    1a18:	84 e0       	ldi	r24, 0x04	; 4
    1a1a:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    1a1e:	61 2f       	mov	r22, r17
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1408
        showTime(53, color);
    1a20:	85 e3       	ldi	r24, 0x35	; 53
    1a22:	0e 94 c8 03 	call	0x790	; 0x790 <showTime(unsigned char, unsigned char)>
    1a26:	21 e0       	ldi	r18, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1409
        color = encoder.encoderRead(1, 4, true, 1);
    1a28:	41 e0       	ldi	r20, 0x01	; 1
    1a2a:	64 e0       	ldi	r22, 0x04	; 4
    1a2c:	81 e0       	ldi	r24, 0x01	; 1
    1a2e:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]>
    1a32:	80 93 64 3b 	sts	0x3B64, r24	; 0x803b64 <color>
    1a36:	0e 94 70 03 	call	0x6e0	; 0x6e0 <colorSelect()>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1410
        colorSelect();
    1a3a:	f1 2e       	mov	r15, r17
    1a3c:	10 e0       	ldi	r17, 0x00	; 0
    1a3e:	60 91 64 3b 	lds	r22, 0x3B64	; 0x803b64 <color>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1462
        drawCharacter(26, letterD, red, green, blue);

        if (buttonDebounce (0, 0, 1, 1000)) option = 5; // end options
        break;
    }
    eeprom_write_byte((uint8_t*)2, color); // values are store in EEPROM
    1a42:	82 e0       	ldi	r24, 0x02	; 2
    1a44:	90 e0       	ldi	r25, 0x00	; 0
    1a46:	0e 94 a2 1a 	call	0x3544	; 0x3544 <eeprom_write_byte>
    1a4a:	60 91 60 3b 	lds	r22, 0x3B60	; 0x803b60 <brightLevel>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1463
    eeprom_write_byte((uint8_t*)3, brightLevel);
    1a4e:	83 e0       	ldi	r24, 0x03	; 3
    1a50:	90 e0       	ldi	r25, 0x00	; 0
    1a52:	0e 94 a2 1a 	call	0x3544	; 0x3544 <eeprom_write_byte>
    1a56:	15 30       	cpi	r17, 0x05	; 5
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1386
void setOptions() {
  strip.clear();
  int8_t option = 0;
  uint8_t actualEncoderValue = 100;

  while (option < 5) {
    1a58:	09 f0       	breq	.+2      	; 0x1a5c <main+0x6ea>
    1a5a:	89 ce       	rjmp	.-750    	; 0x176e <main+0x3fc>
gameSelection():
    1a5c:	80 91 6f 3b 	lds	r24, 0x3B6F	; 0x803b6f <gameSelect>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:399
    }
  }

  if (gameSelect == 0) setOptions();

  if (gameSelect == 0 || gameSelect == 5) {
    1a60:	90 91 70 3b 	lds	r25, 0x3B70	; 0x803b70 <gameSelect+0x1>
    1a64:	00 97       	sbiw	r24, 0x00	; 0
    1a66:	11 f0       	breq	.+4      	; 0x1a6c <main+0x6fa>
    1a68:	05 97       	sbiw	r24, 0x05	; 5
    1a6a:	69 f4       	brne	.+26     	; 0x1a86 <main+0x714>
    1a6c:	10 92 72 3b 	sts	0x3B72, r1	; 0x803b72 <enterGame>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:400
    enterGame = false;
    1a70:	8c e3       	ldi	r24, 0x3C	; 60
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:401
    lastMinute = 60;
    1a72:	80 93 20 3a 	sts	0x3A20, r24	; 0x803a20 <lastMinute>
    1a76:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:402
    generalTimer = interruptTimer;
    1a7a:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    1a7e:	80 93 73 3b 	sts	0x3B73, r24	; 0x803b73 <generalTimer>
    1a82:	90 93 74 3b 	sts	0x3B74, r25	; 0x803b74 <generalTimer+0x1>
loop():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:172
  if (buttonDebounce(1, 1, 0, 1000)) { // enters game mode
    strip.clear();
    gameSelection();
  }

  while (enterGame) { // end game or continue
    1a86:	40 90 72 3b 	lds	r4, 0x3B72	; 0x803b72 <enterGame>
    1a8a:	44 20       	and	r4, r4
    1a8c:	09 f4       	brne	.+2      	; 0x1a90 <main+0x71e>
    1a8e:	1c cd       	rjmp	.-1480   	; 0x14c8 <main+0x156>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:174

    if (endGame) {
    1a90:	80 91 71 3b 	lds	r24, 0x3B71	; 0x803b71 <endGame>
    1a94:	88 23       	and	r24, r24
    1a96:	09 f4       	brne	.+2      	; 0x1a9a <main+0x728>
    1a98:	9b c0       	rjmp	.+310    	; 0x1bd0 <main+0x85e>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:175
      endGame = false;
    1a9a:	10 92 71 3b 	sts	0x3B71, r1	; 0x803b71 <endGame>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:176
      enterGame = false;
    1a9e:	10 92 72 3b 	sts	0x3B72, r1	; 0x803b72 <enterGame>
    1aa2:	f1 cf       	rjmp	.-30     	; 0x1a86 <main+0x714>
setOptions():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1398
    if (buttonDebounce(1, 0, 0, 1000)) {
      if (option--, option < 0)  option = 4;
      strip.clear();
    }

    switch (option) { // color NeoPixel LED number from first to last
    1aa4:	13 30       	cpi	r17, 0x03	; 3
    1aa6:	09 f4       	brne	.+2      	; 0x1aaa <main+0x738>
    1aa8:	64 c0       	rjmp	.+200    	; 0x1b72 <main+0x800>
    1aaa:	14 30       	cpi	r17, 0x04	; 4
    1aac:	09 f0       	breq	.+2      	; 0x1ab0 <main+0x73e>
    1aae:	99 cf       	rjmp	.-206    	; 0x19e2 <main+0x670>
    1ab0:	78 ce       	rjmp	.-784    	; 0x17a2 <main+0x430>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1415
        colorSelect();
        break;

      case 1:

        if (actualEncoderValue != brightLevel) {
    1ab2:	e0 90 60 3b 	lds	r14, 0x3B60	; 0x803b60 <brightLevel>
    1ab6:	ef 14       	cp	r14, r15
    1ab8:	51 f0       	breq	.+20     	; 0x1ace <main+0x75c>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1417
          actualEncoderValue = brightLevel;
          strip.clear();
    1aba:	3e d9       	rcall	.-3460   	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
encoderSetPosition():
    1abc:	8e 2d       	mov	r24, r14
    1abe:	90 e0       	ldi	r25, 0x00	; 0
    1ac0:	0e 94 a4 02 	call	0x548	; 0x548 <encoder::encoderSetPosition(int, unsigned char) [clone .part.0]>
setOptions():
    1ac4:	8e 2d       	mov	r24, r14
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1419
          encoder.encoderSetPosition(brightLevel, 1);
          strip.setBrightness((brightLevel * 3));
    1ac6:	88 0f       	add	r24, r24
    1ac8:	8e 0d       	add	r24, r14
    1aca:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <tinyNeoPixel::setBrightness(unsigned char) [clone .constprop.6]>
    1ace:	c0 90 63 3b 	lds	r12, 0x3B63	; 0x803b63 <blue>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1422
        }

        drawCharacter(0, letterB, red, green, blue);
    1ad2:	d0 90 62 3b 	lds	r13, 0x3B62	; 0x803b62 <green>
    1ad6:	f0 90 61 3b 	lds	r15, 0x3B61	; 0x803b61 <red>
    1ada:	0c 2d       	mov	r16, r12
    1adc:	2d 2d       	mov	r18, r13
    1ade:	4f 2d       	mov	r20, r15
    1ae0:	6e eb       	ldi	r22, 0xBE	; 190
    1ae2:	71 e0       	ldi	r23, 0x01	; 1
    1ae4:	80 e0       	ldi	r24, 0x00	; 0
    1ae6:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1423
        drawCharacter(4, letterR, red, green, blue);
    1aea:	2d 2d       	mov	r18, r13
    1aec:	4f 2d       	mov	r20, r15
    1aee:	63 eb       	ldi	r22, 0xB3	; 179
    1af0:	71 e0       	ldi	r23, 0x01	; 1
    1af2:	84 e0       	ldi	r24, 0x04	; 4
    1af4:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1424
        showTime(53, brightLevel);
    1af8:	6e 2d       	mov	r22, r14
    1afa:	85 e3       	ldi	r24, 0x35	; 53
    1afc:	0e 94 c8 03 	call	0x790	; 0x790 <showTime(unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1425
        brightLevel = encoder.encoderRead(1, 5, true, 1);
    1b00:	21 e0       	ldi	r18, 0x01	; 1
    1b02:	41 e0       	ldi	r20, 0x01	; 1
    1b04:	65 e0       	ldi	r22, 0x05	; 5
    1b06:	81 e0       	ldi	r24, 0x01	; 1
    1b08:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]>
    1b0c:	80 93 60 3b 	sts	0x3B60, r24	; 0x803b60 <brightLevel>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1415
        colorSelect();
        break;

      case 1:

        if (actualEncoderValue != brightLevel) {
    1b10:	fe 2c       	mov	r15, r14
    1b12:	95 cf       	rjmp	.-214    	; 0x1a3e <main+0x6cc>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1430
        brightLevel = encoder.encoderRead(1, 5, true, 1);

        break;
      case 2:

        if (actualEncoderValue != hours) {
    1b14:	80 91 5f 3b 	lds	r24, 0x3B5F	; 0x803b5f <hours>
    1b18:	8f 15       	cp	r24, r15
    1b1a:	41 f0       	breq	.+16     	; 0x1b2c <main+0x7ba>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1431
          actualEncoderValue = hours;
    1b1c:	f0 90 5f 3b 	lds	r15, 0x3B5F	; 0x803b5f <hours>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1432
          strip.clear();
    1b20:	0b d9       	rcall	.-3562   	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
    1b22:	80 91 5f 3b 	lds	r24, 0x3B5F	; 0x803b5f <hours>
encoderSetPosition():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1433
          encoder.encoderSetPosition(hours, 1);
    1b26:	90 e0       	ldi	r25, 0x00	; 0
    1b28:	0e 94 a4 02 	call	0x548	; 0x548 <encoder::encoderSetPosition(int, unsigned char) [clone .part.0]>
setOptions():
    1b2c:	c0 90 63 3b 	lds	r12, 0x3B63	; 0x803b63 <blue>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1435
        }
        drawCharacter(0, letterH, red, green, blue);
    1b30:	d0 90 62 3b 	lds	r13, 0x3B62	; 0x803b62 <green>
    1b34:	e0 90 61 3b 	lds	r14, 0x3B61	; 0x803b61 <red>
    1b38:	0c 2d       	mov	r16, r12
    1b3a:	2d 2d       	mov	r18, r13
    1b3c:	4e 2d       	mov	r20, r14
    1b3e:	67 ea       	ldi	r22, 0xA7	; 167
    1b40:	71 e0       	ldi	r23, 0x01	; 1
    1b42:	80 e0       	ldi	r24, 0x00	; 0
    1b44:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1436
        drawCharacter(4, letterR, red, green, blue);
    1b48:	2d 2d       	mov	r18, r13
    1b4a:	4e 2d       	mov	r20, r14
    1b4c:	63 eb       	ldi	r22, 0xB3	; 179
    1b4e:	71 e0       	ldi	r23, 0x01	; 1
    1b50:	84 e0       	ldi	r24, 0x04	; 4
    1b52:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1437
        showTime(53, hours);
    1b56:	60 91 5f 3b 	lds	r22, 0x3B5F	; 0x803b5f <hours>
    1b5a:	85 e3       	ldi	r24, 0x35	; 53
    1b5c:	0e 94 c8 03 	call	0x790	; 0x790 <showTime(unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1438
        hours = encoder.encoderRead(0, 23, true, 1);
    1b60:	21 e0       	ldi	r18, 0x01	; 1
    1b62:	41 e0       	ldi	r20, 0x01	; 1
    1b64:	67 e1       	ldi	r22, 0x17	; 23
    1b66:	80 e0       	ldi	r24, 0x00	; 0
    1b68:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]>
    1b6c:	80 93 5f 3b 	sts	0x3B5F, r24	; 0x803b5f <hours>
    1b70:	66 cf       	rjmp	.-308    	; 0x1a3e <main+0x6cc>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1443

        break;
      case 3:

        if (actualEncoderValue != minutes) {
    1b72:	80 91 5e 3b 	lds	r24, 0x3B5E	; 0x803b5e <minutes>
    1b76:	8f 15       	cp	r24, r15
    1b78:	41 f0       	breq	.+16     	; 0x1b8a <main+0x818>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1444
          actualEncoderValue = minutes;
    1b7a:	f0 90 5e 3b 	lds	r15, 0x3B5E	; 0x803b5e <minutes>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1445
          strip.clear();
    1b7e:	dc d8       	rcall	.-3656   	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
    1b80:	80 91 5e 3b 	lds	r24, 0x3B5E	; 0x803b5e <minutes>
encoderSetPosition():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1446
          encoder.encoderSetPosition(minutes, 1);
    1b84:	90 e0       	ldi	r25, 0x00	; 0
    1b86:	0e 94 a4 02 	call	0x548	; 0x548 <encoder::encoderSetPosition(int, unsigned char) [clone .part.0]>
setOptions():
    1b8a:	c0 90 63 3b 	lds	r12, 0x3B63	; 0x803b63 <blue>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1448
        }
        drawCharacter(0, letterM, red, green, blue);
    1b8e:	d0 90 62 3b 	lds	r13, 0x3B62	; 0x803b62 <green>
    1b92:	e0 90 61 3b 	lds	r14, 0x3B61	; 0x803b61 <red>
    1b96:	0c 2d       	mov	r16, r12
    1b98:	2d 2d       	mov	r18, r13
    1b9a:	4e 2d       	mov	r20, r14
    1b9c:	6b e9       	ldi	r22, 0x9B	; 155
    1b9e:	71 e0       	ldi	r23, 0x01	; 1
    1ba0:	80 e0       	ldi	r24, 0x00	; 0
    1ba2:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1449
        drawCharacter(4, letterI, red, green, blue);
    1ba6:	2d 2d       	mov	r18, r13
    1ba8:	4e 2d       	mov	r20, r14
    1baa:	6c e4       	ldi	r22, 0x4C	; 76
    1bac:	72 e0       	ldi	r23, 0x02	; 2
    1bae:	84 e0       	ldi	r24, 0x04	; 4
    1bb0:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1450
        showTime(53, minutes);
    1bb4:	60 91 5e 3b 	lds	r22, 0x3B5E	; 0x803b5e <minutes>
    1bb8:	85 e3       	ldi	r24, 0x35	; 53
    1bba:	0e 94 c8 03 	call	0x790	; 0x790 <showTime(unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1451
        minutes = encoder.encoderRead(0, 59, true, 1);
    1bbe:	21 e0       	ldi	r18, 0x01	; 1
    1bc0:	41 e0       	ldi	r20, 0x01	; 1
    1bc2:	6b e3       	ldi	r22, 0x3B	; 59
    1bc4:	80 e0       	ldi	r24, 0x00	; 0
    1bc6:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]>
    1bca:	80 93 5e 3b 	sts	0x3B5E, r24	; 0x803b5e <minutes>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:178

    if (endGame) {
      endGame = false;
      enterGame = false;
    } else {
      strip.clear();
    1bce:	37 cf       	rjmp	.-402    	; 0x1a3e <main+0x6cc>
loop():
    1bd0:	b3 d8       	rcall	.-3738   	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:179
      switch (gameSelect) {
    1bd2:	80 91 6f 3b 	lds	r24, 0x3B6F	; 0x803b6f <gameSelect>
    1bd6:	90 91 70 3b 	lds	r25, 0x3B70	; 0x803b70 <gameSelect+0x1>
    1bda:	82 30       	cpi	r24, 0x02	; 2
    1bdc:	91 05       	cpc	r25, r1
    1bde:	09 f4       	brne	.+2      	; 0x1be2 <main+0x870>
    1be0:	bf c4       	rjmp	.+2430   	; 0x2560 <main+0x11ee>
    1be2:	0c f0       	brlt	.+2      	; 0x1be6 <main+0x874>
    1be4:	73 c0       	rjmp	.+230    	; 0x1ccc <main+0x95a>
    1be6:	01 97       	sbiw	r24, 0x01	; 1
    1be8:	09 f0       	breq	.+2      	; 0x1bec <main+0x87a>
    1bea:	4d cf       	rjmp	.-358    	; 0x1a86 <main+0x714>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:181
        case 1:
          gameSpeed =  pgm_read_word_near (enemySpeed + 0);
    1bec:	e7 ec       	ldi	r30, 0xC7	; 199
    1bee:	f2 e0       	ldi	r31, 0x02	; 2
    1bf0:	85 91       	lpm	r24, Z+
    1bf2:	94 91       	lpm	r25, Z
    1bf4:	80 93 6d 3b 	sts	0x3B6D, r24	; 0x803b6d <gameSpeed>
    1bf8:	90 93 6e 3b 	sts	0x3B6E, r25	; 0x803b6e <gameSpeed+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:182
          levelTitle ();
    1bfc:	bc d8       	rcall	.-3720   	; 0xd76 <levelTitle()>
gameLedInvaders():
    1bfe:	8d b7       	in	r24, 0x3d	; 61
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1164

    if (ledInvadersScore > 999) ledInvadersScore = 999;
    endGameMenu(ledInvadersScore, 5);
    ledInvadersScore = 0;
    gameLevel = 1;
  }
    1c00:	9e b7       	in	r25, 0x3e	; 62
    1c02:	ce 5f       	subi	r28, 0xFE	; 254
    1c04:	de 4f       	sbci	r29, 0xFE	; 254
    1c06:	88 83       	st	Y, r24
    1c08:	99 83       	std	Y+1, r25	; 0x01
    1c0a:	c2 50       	subi	r28, 0x02	; 2
    1c0c:	d1 40       	sbci	r29, 0x01	; 1
    1c0e:	e0 91 67 3b 	lds	r30, 0x3B67	; 0x803b67 <enemiesLevel>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:943
void gameLedInvaders () {
  uint8_t playerPos = 84;
  uint8_t lastEnemyPos = 10;
  uint8_t lastPlayerPos = 0;
  uint8_t playerShotPosition = 99;
  uint8_t arrayElements = pgm_read_byte_near (enemies[enemiesLevel] + 0) - 1; // reads enemy position
    1c12:	f0 e0       	ldi	r31, 0x00	; 0
    1c14:	ee 0f       	add	r30, r30
    1c16:	ff 1f       	adc	r31, r31
    1c18:	e6 55       	subi	r30, 0x56	; 86
    1c1a:	f9 44       	sbci	r31, 0x49	; 73
    1c1c:	01 90       	ld	r0, Z+
    1c1e:	f0 81       	ld	r31, Z
    1c20:	e0 2d       	mov	r30, r0
    1c22:	84 91       	lpm	r24, Z
    1c24:	81 50       	subi	r24, 0x01	; 1
    1c26:	cb 51       	subi	r28, 0x1B	; 27
    1c28:	df 4f       	sbci	r29, 0xFF	; 255
    1c2a:	88 83       	st	Y, r24
    1c2c:	c5 5e       	subi	r28, 0xE5	; 229
    1c2e:	d0 40       	sbci	r29, 0x00	; 0
    1c30:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:944
  int actualEnemies [arrayElements];// because enemies array cointains 1 extra element with number of elements information
    1c32:	9c 01       	movw	r18, r24
    1c34:	22 0f       	add	r18, r18
    1c36:	33 1f       	adc	r19, r19
    1c38:	ad b7       	in	r26, 0x3d	; 61
    1c3a:	be b7       	in	r27, 0x3e	; 62
    1c3c:	a2 1b       	sub	r26, r18
    1c3e:	b3 0b       	sbc	r27, r19
    1c40:	ad bf       	out	0x3d, r26	; 61
    1c42:	be bf       	out	0x3e, r27	; 62
    1c44:	2d b7       	in	r18, 0x3d	; 61
    1c46:	3e b7       	in	r19, 0x3e	; 62
    1c48:	2f 5f       	subi	r18, 0xFF	; 255
    1c4a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c4c:	ce 50       	subi	r28, 0x0E	; 14
    1c4e:	df 4f       	sbci	r29, 0xFF	; 255
    1c50:	28 83       	st	Y, r18
    1c52:	39 83       	std	Y+1, r19	; 0x01
    1c54:	c2 5f       	subi	r28, 0xF2	; 242
    1c56:	d0 40       	sbci	r29, 0x00	; 0
    1c58:	4d b7       	in	r20, 0x3d	; 61
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:945
  uint8_t enemiesKilled [arrayElements];// another array that contains only enemies killed
    1c5a:	5e b7       	in	r21, 0x3e	; 62
    1c5c:	48 1b       	sub	r20, r24
    1c5e:	59 0b       	sbc	r21, r25
    1c60:	4d bf       	out	0x3d, r20	; 61
    1c62:	5e bf       	out	0x3e, r21	; 62
    1c64:	8d b7       	in	r24, 0x3d	; 61
    1c66:	9e b7       	in	r25, 0x3e	; 62
    1c68:	01 96       	adiw	r24, 0x01	; 1
    1c6a:	24 e6       	ldi	r18, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:959
  int motherShipMovement = 9; // int because working with negative numbers
  int enemyPos = 10; // int because working with negative numbers
  bool callMotherShip = false;
  bool playerShot = false;
  bool allowRightMove = true;
  enemiesKilled [0] = 100; // default 0 value will be used later, so is changed to a value never used.
    1c6c:	ad b7       	in	r26, 0x3d	; 61
    1c6e:	be b7       	in	r27, 0x3e	; 62
    1c70:	11 96       	adiw	r26, 0x01	; 1
    1c72:	2c 93       	st	X, r18
    1c74:	cc 50       	subi	r28, 0x0C	; 12
    1c76:	df 4f       	sbci	r29, 0xFF	; 255
    1c78:	88 83       	st	Y, r24
    1c7a:	c4 5f       	subi	r28, 0xF4	; 244
    1c7c:	d0 40       	sbci	r29, 0x00	; 0
    1c7e:	c1 50       	subi	r28, 0x01	; 1
    1c80:	df 4f       	sbci	r29, 0xFF	; 255
    1c82:	98 83       	st	Y, r25
    1c84:	cf 5f       	subi	r28, 0xFF	; 255
    1c86:	d0 40       	sbci	r29, 0x00	; 0
    1c88:	bc 01       	movw	r22, r24
    1c8a:	ce 50       	subi	r28, 0x0E	; 14
    1c8c:	df 4f       	sbci	r29, 0xFF	; 255
    1c8e:	28 81       	ld	r18, Y
    1c90:	39 81       	ldd	r19, Y+1	; 0x01
    1c92:	c2 5f       	subi	r28, 0xF2	; 242
    1c94:	d0 40       	sbci	r29, 0x00	; 0
    1c96:	43 e6       	ldi	r20, 0x63	; 99
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:963

  for (uint8_t x = 0; x < arrayElements; x++) {
    actualEnemies[x] = pgm_read_byte_near (enemies[enemiesLevel] + (x + 1)); // first enemy draw on Leds
    enemiesKilled [x] = 99; // fill enemiesKilled array with a number never used some times memory stills holds a value that shouldn´t be there
    1c98:	31 96       	adiw	r30, 0x01	; 1
    1c9a:	86 2f       	mov	r24, r22
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:961
  bool callMotherShip = false;
  bool playerShot = false;
  bool allowRightMove = true;
  enemiesKilled [0] = 100; // default 0 value will be used later, so is changed to a value never used.

  for (uint8_t x = 0; x < arrayElements; x++) {
    1c9c:	cc 50       	subi	r28, 0x0C	; 12
    1c9e:	df 4f       	sbci	r29, 0xFF	; 255
    1ca0:	b8 81       	ld	r27, Y
    1ca2:	c4 5f       	subi	r28, 0xF4	; 244
    1ca4:	d0 40       	sbci	r29, 0x00	; 0
    1ca6:	8b 1b       	sub	r24, r27
    1ca8:	cb 51       	subi	r28, 0x1B	; 27
    1caa:	df 4f       	sbci	r29, 0xFF	; 255
    1cac:	58 81       	ld	r21, Y
    1cae:	c5 5e       	subi	r28, 0xE5	; 229
    1cb0:	d0 40       	sbci	r29, 0x00	; 0
    1cb2:	85 17       	cp	r24, r21
    1cb4:	08 f0       	brcs	.+2      	; 0x1cb8 <main+0x946>
    1cb6:	5f c0       	rjmp	.+190    	; 0x1d76 <main+0xa04>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:962
    actualEnemies[x] = pgm_read_byte_near (enemies[enemiesLevel] + (x + 1)); // first enemy draw on Leds
    1cb8:	84 91       	lpm	r24, Z
    1cba:	90 e0       	ldi	r25, 0x00	; 0
    1cbc:	d9 01       	movw	r26, r18
    1cbe:	8d 93       	st	X+, r24
    1cc0:	9d 93       	st	X+, r25
    1cc2:	9d 01       	movw	r18, r26
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:963
    enemiesKilled [x] = 99; // fill enemiesKilled array with a number never used some times memory stills holds a value that shouldn´t be there
    1cc4:	db 01       	movw	r26, r22
    1cc6:	4d 93       	st	X+, r20
    1cc8:	bd 01       	movw	r22, r26
    1cca:	e6 cf       	rjmp	.-52     	; 0x1c98 <main+0x926>
loop():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:179
    if (endGame) {
      endGame = false;
      enterGame = false;
    } else {
      strip.clear();
      switch (gameSelect) {
    1ccc:	83 30       	cpi	r24, 0x03	; 3
    1cce:	91 05       	cpc	r25, r1
    1cd0:	09 f4       	brne	.+2      	; 0x1cd4 <main+0x962>
    1cd2:	f7 c6       	rjmp	.+3566   	; 0x2ac2 <main+0x1750>
    1cd4:	04 97       	sbiw	r24, 0x04	; 4
    1cd6:	09 f0       	breq	.+2      	; 0x1cda <main+0x968>
    1cd8:	d6 ce       	rjmp	.-596    	; 0x1a86 <main+0x714>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:192
          break;
        case 3:
          gameFlappyLed();
          break;
        case 4:
          while (!buttonDebounce(1, 1, 1, 1000)) {
    1cda:	28 ee       	ldi	r18, 0xE8	; 232
    1cdc:	33 e0       	ldi	r19, 0x03	; 3
    1cde:	41 e0       	ldi	r20, 0x01	; 1
    1ce0:	61 e0       	ldi	r22, 0x01	; 1
    1ce2:	81 e0       	ldi	r24, 0x01	; 1
    1ce4:	0e 94 66 04 	call	0x8cc	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
    1ce8:	f8 2e       	mov	r15, r24
    1cea:	e0 90 6a 3b 	lds	r14, 0x3B6A	; 0x803b6a <LedKanoidNumberOfplayers>
    1cee:	81 11       	cpse	r24, r1
    1cf0:	c2 c7       	rjmp	.+3972   	; 0x2c76 <main+0x1904>
    1cf2:	21 e0       	ldi	r18, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:193
            uint8_t actualValue = encoder.encoderRead(1, 2, true, 1);
    1cf4:	41 e0       	ldi	r20, 0x01	; 1
    1cf6:	62 e0       	ldi	r22, 0x02	; 2
    1cf8:	81 e0       	ldi	r24, 0x01	; 1
    1cfa:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]>
    1cfe:	18 2f       	mov	r17, r24
    1d00:	e8 2f       	mov	r30, r24
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:194
            arrayNumberValue[0] = pgm_read_word_near(number + actualValue);
    1d02:	f0 e0       	ldi	r31, 0x00	; 0
    1d04:	ee 0f       	add	r30, r30
    1d06:	ff 1f       	adc	r31, r31
    1d08:	ed 54       	subi	r30, 0x4D	; 77
    1d0a:	fd 4f       	sbci	r31, 0xFD	; 253
    1d0c:	65 91       	lpm	r22, Z+
    1d0e:	74 91       	lpm	r23, Z
    1d10:	60 93 6b 3b 	sts	0x3B6B, r22	; 0x803b6b <arrayNumberValue>
    1d14:	70 93 6c 3b 	sts	0x3B6C, r23	; 0x803b6c <arrayNumberValue+0x1>
    1d18:	04 e6       	ldi	r16, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:195
            drawCharacter(50, arrayNumberValue[0], 0, 0, 100);
    1d1a:	20 e0       	ldi	r18, 0x00	; 0
    1d1c:	40 e0       	ldi	r20, 0x00	; 0
    1d1e:	82 e3       	ldi	r24, 0x32	; 50
    1d20:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    1d24:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:196
            drawCharacter(0, letterS, 100, 0, 0);
    1d26:	20 e0       	ldi	r18, 0x00	; 0
    1d28:	44 e6       	ldi	r20, 0x64	; 100
    1d2a:	6b ea       	ldi	r22, 0xAB	; 171
    1d2c:	72 e0       	ldi	r23, 0x02	; 2
    1d2e:	80 e0       	ldi	r24, 0x00	; 0
    1d30:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    1d34:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:197
            drawCharacter(3, letterE, 100, 0, 0);
    1d36:	44 e6       	ldi	r20, 0x64	; 100
    1d38:	6f e9       	ldi	r22, 0x9F	; 159
    1d3a:	72 e0       	ldi	r23, 0x02	; 2
    1d3c:	83 e0       	ldi	r24, 0x03	; 3
    1d3e:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    1d42:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:198
            drawCharacter(7, letterL, 100, 0, 0);
    1d44:	44 e6       	ldi	r20, 0x64	; 100
    1d46:	67 e9       	ldi	r22, 0x97	; 151
    1d48:	72 e0       	ldi	r23, 0x02	; 2
    1d4a:	87 e0       	ldi	r24, 0x07	; 7
    1d4c:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    1d50:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:199
            drawCharacter(54, letterP, 100, 0, 0);
    1d52:	44 e6       	ldi	r20, 0x64	; 100
    1d54:	6e e8       	ldi	r22, 0x8E	; 142
    1d56:	72 e0       	ldi	r23, 0x02	; 2
    1d58:	86 e3       	ldi	r24, 0x36	; 54
    1d5a:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    1d5e:	1e 15       	cp	r17, r14
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:201

            if (LedKanoidNumberOfplayers != actualValue) {
    1d60:	09 f4       	brne	.+2      	; 0x1d64 <main+0x9f2>
    1d62:	bb cf       	rjmp	.-138    	; 0x1cda <main+0x968>
    1d64:	0e 94 9c 06 	call	0xd38	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:202
              strip.clear();
    1d68:	82 e3       	ldi	r24, 0x32	; 50
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:203
              beep(50);
    1d6a:	90 e0       	ldi	r25, 0x00	; 0
    1d6c:	0e 94 58 03 	call	0x6b0	; 0x6b0 <beep(unsigned int)>
    1d70:	10 93 6a 3b 	sts	0x3B6A, r17	; 0x803b6a <LedKanoidNumberOfplayers>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:204
              LedKanoidNumberOfplayers = actualValue;
    1d74:	b2 cf       	rjmp	.-156    	; 0x1cda <main+0x968>
main():
    1d76:	c0 51       	subi	r28, 0x10	; 16
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:958
  uint16_t playerShotTimer = 0;
  int motherShipMovement = 9; // int because working with negative numbers
  int enemyPos = 10; // int because working with negative numbers
  bool callMotherShip = false;
  bool playerShot = false;
  bool allowRightMove = true;
    1d78:	df 4f       	sbci	r29, 0xFF	; 255
    1d7a:	48 82       	st	Y, r4
    1d7c:	c0 5f       	subi	r28, 0xF0	; 240
    1d7e:	d0 40       	sbci	r29, 0x00	; 0
    1d80:	51 2c       	mov	r5, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:957
  uint16_t motherShipTimer = 0;
  uint16_t playerShotTimer = 0;
  int motherShipMovement = 9; // int because working with negative numbers
  int enemyPos = 10; // int because working with negative numbers
  bool callMotherShip = false;
  bool playerShot = false;
    1d82:	c5 51       	subi	r28, 0x15	; 21
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:956
  uint16_t enemyShotTimer = 0;
  uint16_t motherShipTimer = 0;
  uint16_t playerShotTimer = 0;
  int motherShipMovement = 9; // int because working with negative numbers
  int enemyPos = 10; // int because working with negative numbers
  bool callMotherShip = false;
    1d84:	df 4f       	sbci	r29, 0xFF	; 255
    1d86:	18 82       	st	Y, r1
    1d88:	cb 5e       	subi	r28, 0xEB	; 235
    1d8a:	d0 40       	sbci	r29, 0x00	; 0
gameLedInvaders():
    1d8c:	cb 51       	subi	r28, 0x1B	; 27
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:961
  bool playerShot = false;
  bool allowRightMove = true;
  enemiesKilled [0] = 100; // default 0 value will be used later, so is changed to a value never used.

  for (uint8_t x = 0; x < arrayElements; x++) {
    1d8e:	df 4f       	sbci	r29, 0xFF	; 255
    1d90:	b8 81       	ld	r27, Y
    1d92:	c5 5e       	subi	r28, 0xE5	; 229
    1d94:	d0 40       	sbci	r29, 0x00	; 0
    1d96:	cd 51       	subi	r28, 0x1D	; 29
    1d98:	df 4f       	sbci	r29, 0xFF	; 255
    1d9a:	b8 83       	st	Y, r27
    1d9c:	c3 5e       	subi	r28, 0xE3	; 227
    1d9e:	d0 40       	sbci	r29, 0x00	; 0
main():
    1da0:	4a e0       	ldi	r20, 0x0A	; 10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:955
  uint16_t enemiesMoveTimer = 0;
  uint16_t enemyShotTimer = 0;
  uint16_t motherShipTimer = 0;
  uint16_t playerShotTimer = 0;
  int motherShipMovement = 9; // int because working with negative numbers
  int enemyPos = 10; // int because working with negative numbers
    1da2:	e4 2e       	mov	r14, r20
    1da4:	f1 2c       	mov	r15, r1
    1da6:	59 e0       	ldi	r21, 0x09	; 9
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:954
  uint8_t enemyShotPosition = 90;
  uint16_t enemiesMoveTimer = 0;
  uint16_t enemyShotTimer = 0;
  uint16_t motherShipTimer = 0;
  uint16_t playerShotTimer = 0;
  int motherShipMovement = 9; // int because working with negative numbers
    1da8:	25 2e       	mov	r2, r21
    1daa:	31 2c       	mov	r3, r1
    1dac:	ca 50       	subi	r28, 0x0A	; 10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:953
  uint8_t enemiesheightTimer = 0;
  uint8_t enemyShotPosition = 90;
  uint16_t enemiesMoveTimer = 0;
  uint16_t enemyShotTimer = 0;
  uint16_t motherShipTimer = 0;
  uint16_t playerShotTimer = 0;
    1dae:	df 4f       	sbci	r29, 0xFF	; 255
    1db0:	18 82       	st	Y, r1
    1db2:	19 82       	std	Y+1, r1	; 0x01
    1db4:	c6 5f       	subi	r28, 0xF6	; 246
    1db6:	d0 40       	sbci	r29, 0x00	; 0
    1db8:	c6 50       	subi	r28, 0x06	; 6
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:952
  uint8_t closestEnemy = 0;
  uint8_t enemiesheightTimer = 0;
  uint8_t enemyShotPosition = 90;
  uint16_t enemiesMoveTimer = 0;
  uint16_t enemyShotTimer = 0;
  uint16_t motherShipTimer = 0;
    1dba:	df 4f       	sbci	r29, 0xFF	; 255
    1dbc:	18 82       	st	Y, r1
    1dbe:	19 82       	std	Y+1, r1	; 0x01
    1dc0:	ca 5f       	subi	r28, 0xFA	; 250
    1dc2:	d0 40       	sbci	r29, 0x00	; 0
    1dc4:	c8 50       	subi	r28, 0x08	; 8
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:951
  uint8_t enemiesRemaining = arrayElements;
  uint8_t closestEnemy = 0;
  uint8_t enemiesheightTimer = 0;
  uint8_t enemyShotPosition = 90;
  uint16_t enemiesMoveTimer = 0;
  uint16_t enemyShotTimer = 0;
    1dc6:	df 4f       	sbci	r29, 0xFF	; 255
    1dc8:	18 82       	st	Y, r1
    1dca:	19 82       	std	Y+1, r1	; 0x01
    1dcc:	c8 5f       	subi	r28, 0xF8	; 248
    1dce:	d0 40       	sbci	r29, 0x00	; 0
    1dd0:	c4 50       	subi	r28, 0x04	; 4
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:950
  uint8_t enemiesKilled [arrayElements];// another array that contains only enemies killed
  uint8_t enemiesRemaining = arrayElements;
  uint8_t closestEnemy = 0;
  uint8_t enemiesheightTimer = 0;
  uint8_t enemyShotPosition = 90;
  uint16_t enemiesMoveTimer = 0;
    1dd2:	df 4f       	sbci	r29, 0xFF	; 255
    1dd4:	18 82       	st	Y, r1
    1dd6:	19 82       	std	Y+1, r1	; 0x01
    1dd8:	cc 5f       	subi	r28, 0xFC	; 252
    1dda:	d0 40       	sbci	r29, 0x00	; 0
    1ddc:	1a e5       	ldi	r17, 0x5A	; 90
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:949
  int actualEnemies [arrayElements];// because enemies array cointains 1 extra element with number of elements information
  uint8_t enemiesKilled [arrayElements];// another array that contains only enemies killed
  uint8_t enemiesRemaining = arrayElements;
  uint8_t closestEnemy = 0;
  uint8_t enemiesheightTimer = 0;
  uint8_t enemyShotPosition = 90;
    1dde:	c7 51       	subi	r28, 0x17	; 23
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:948
  uint8_t arrayElements = pgm_read_byte_near (enemies[enemiesLevel] + 0) - 1; // reads enemy position
  int actualEnemies [arrayElements];// because enemies array cointains 1 extra element with number of elements information
  uint8_t enemiesKilled [arrayElements];// another array that contains only enemies killed
  uint8_t enemiesRemaining = arrayElements;
  uint8_t closestEnemy = 0;
  uint8_t enemiesheightTimer = 0;
    1de0:	df 4f       	sbci	r29, 0xFF	; 255
    1de2:	18 82       	st	Y, r1
    1de4:	c9 5e       	subi	r28, 0xE9	; 233
    1de6:	d0 40       	sbci	r29, 0x00	; 0
    1de8:	c9 51       	subi	r28, 0x19	; 25
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:947
  uint8_t playerShotPosition = 99;
  uint8_t arrayElements = pgm_read_byte_near (enemies[enemiesLevel] + 0) - 1; // reads enemy position
  int actualEnemies [arrayElements];// because enemies array cointains 1 extra element with number of elements information
  uint8_t enemiesKilled [arrayElements];// another array that contains only enemies killed
  uint8_t enemiesRemaining = arrayElements;
  uint8_t closestEnemy = 0;
    1dea:	df 4f       	sbci	r29, 0xFF	; 255
    1dec:	18 82       	st	Y, r1
    1dee:	c7 5e       	subi	r28, 0xE7	; 231
    1df0:	d0 40       	sbci	r29, 0x00	; 0
    1df2:	63 e6       	ldi	r22, 0x63	; 99
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:942
// LedInvaders Game code
void gameLedInvaders () {
  uint8_t playerPos = 84;
  uint8_t lastEnemyPos = 10;
  uint8_t lastPlayerPos = 0;
  uint8_t playerShotPosition = 99;
    1df4:	66 2e       	mov	r6, r22
    1df6:	c1 51       	subi	r28, 0x11	; 17
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:941

// LedInvaders Game code
void gameLedInvaders () {
  uint8_t playerPos = 84;
  uint8_t lastEnemyPos = 10;
  uint8_t lastPlayerPos = 0;
    1df8:	df 4f       	sbci	r29, 0xFF	; 255
    1dfa:	18 82       	st	Y, r1
    1dfc:	cf 5e       	subi	r28, 0xEF	; 239
    1dfe:	d0 40       	sbci	r29, 0x00	; 0
    1e00:	ea e0       	ldi	r30, 0x0A	; 10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:940
}

// LedInvaders Game code
void gameLedInvaders () {
  uint8_t playerPos = 84;
  uint8_t lastEnemyPos = 10;
    1e02:	c2 50       	subi	r28, 0x02	; 2
    1e04:	df 4f       	sbci	r29, 0xFF	; 255
    1e06:	e8 83       	st	Y, r30
    1e08:	ce 5f       	subi	r28, 0xFE	; 254
    1e0a:	d0 40       	sbci	r29, 0x00	; 0
    1e0c:	f6 c1       	rjmp	.+1004   	; 0x21fa <main+0xe88>
gameLedInvaders():
    1e0e:	22 e0       	ldi	r18, 0x02	; 2
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:992
        if ((actualEnemies[x] + enemyPos) > closestEnemy)  closestEnemy = (actualEnemies[x] + enemyPos);// some math to know  enemy positon closest to player.
      }
    }

    // player position
    playerPos = encoder.encoderRead(80, 87, false, 2);
    1e10:	40 e0       	ldi	r20, 0x00	; 0
    1e12:	67 e5       	ldi	r22, 0x57	; 87
    1e14:	80 e5       	ldi	r24, 0x50	; 80
    1e16:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]>
    1e1a:	78 2e       	mov	r7, r24
    1e1c:	c1 51       	subi	r28, 0x11	; 17
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:994

    if (playerPos != lastPlayerPos) {
    1e1e:	df 4f       	sbci	r29, 0xFF	; 255
    1e20:	88 81       	ld	r24, Y
    1e22:	cf 5e       	subi	r28, 0xEF	; 239
    1e24:	d0 40       	sbci	r29, 0x00	; 0
    1e26:	78 16       	cp	r7, r24
    1e28:	39 f0       	breq	.+14     	; 0x1e38 <main+0xac6>
    1e2a:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:995
      drawCharacter(lastPlayerPos, playerShip, 0, 0, 0);
    1e2c:	20 e0       	ldi	r18, 0x00	; 0
    1e2e:	40 e0       	ldi	r20, 0x00	; 0
    1e30:	6e ef       	ldi	r22, 0xFE	; 254
    1e32:	71 e0       	ldi	r23, 0x01	; 1
    1e34:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    1e38:	80 91 1d 3a 	lds	r24, 0x3A1D	; 0x803a1d <ledInvaderLives>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:999
      lastPlayerPos = playerPos;
    }

    if (ledInvaderLives > 1 ) {// player ship color change depending on lives left
    1e3c:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1000
      drawCharacter(playerPos, playerShip, 0, 100, 0);
    1e3e:	24 e6       	ldi	r18, 0x64	; 100
    1e40:	40 e0       	ldi	r20, 0x00	; 0
    1e42:	82 30       	cpi	r24, 0x02	; 2
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:999
    if (playerPos != lastPlayerPos) {
      drawCharacter(lastPlayerPos, playerShip, 0, 0, 0);
      lastPlayerPos = playerPos;
    }

    if (ledInvaderLives > 1 ) {// player ship color change depending on lives left
    1e44:	08 f4       	brcc	.+2      	; 0x1e48 <main+0xad6>
    1e46:	44 e6       	ldi	r20, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1002
      drawCharacter(playerPos, playerShip, 0, 100, 0);
    } else {
      drawCharacter(playerPos, playerShip, 100, 100, 0);
    1e48:	6e ef       	ldi	r22, 0xFE	; 254
    1e4a:	71 e0       	ldi	r23, 0x01	; 1
    1e4c:	87 2d       	mov	r24, r7
    1e4e:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    1e52:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <encoderDir+0x7f4d24>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1005
    }

    if ((LEFTLOW || RIGHTLOW) && !playerShot) {// generates player shot
    1e56:	82 ff       	sbrs	r24, 2
    1e58:	04 c0       	rjmp	.+8      	; 0x1e62 <main+0xaf0>
    1e5a:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <encoderDir+0x7f4d24>
    1e5e:	81 fd       	sbrc	r24, 1
    1e60:	06 c0       	rjmp	.+12     	; 0x1e6e <main+0xafc>
    1e62:	51 10       	cpse	r5, r1
    1e64:	04 c0       	rjmp	.+8      	; 0x1e6e <main+0xafc>
    1e66:	66 24       	eor	r6, r6
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1007
      playerShot = true;
      playerShotPosition = (playerPos + 1);
    1e68:	63 94       	inc	r6
    1e6a:	67 0c       	add	r6, r7
main():
    1e6c:	54 2c       	mov	r5, r4
gameLedInvaders():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1006
    } else {
      drawCharacter(playerPos, playerShip, 100, 100, 0);
    }

    if ((LEFTLOW || RIGHTLOW) && !playerShot) {// generates player shot
      playerShot = true;
    1e6e:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1010
      playerShotPosition = (playerPos + 1);
    }

    if (((interruptTimer - playerShotTimer) > 80) && playerShot) {//player shot check with enemies and mother ship
    1e72:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    1e76:	ca 50       	subi	r28, 0x0A	; 10
    1e78:	df 4f       	sbci	r29, 0xFF	; 255
    1e7a:	a8 81       	ld	r26, Y
    1e7c:	b9 81       	ldd	r27, Y+1	; 0x01
    1e7e:	c6 5f       	subi	r28, 0xF6	; 246
    1e80:	d0 40       	sbci	r29, 0x00	; 0
    1e82:	8a 1b       	sub	r24, r26
    1e84:	9b 0b       	sbc	r25, r27
    1e86:	81 35       	cpi	r24, 0x51	; 81
    1e88:	91 05       	cpc	r25, r1
    1e8a:	08 f4       	brcc	.+2      	; 0x1e8e <main+0xb1c>
    1e8c:	a9 c0       	rjmp	.+338    	; 0x1fe0 <main+0xc6e>
    1e8e:	55 20       	and	r5, r5
    1e90:	09 f4       	brne	.+2      	; 0x1e94 <main+0xb22>
    1e92:	a6 c0       	rjmp	.+332    	; 0x1fe0 <main+0xc6e>
    1e94:	e0 91 75 3b 	lds	r30, 0x3B75	; 0x803b75 <interruptTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1011
      playerShotTimer = interruptTimer;
    1e98:	f0 91 76 3b 	lds	r31, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    1e9c:	ca 50       	subi	r28, 0x0A	; 10
    1e9e:	df 4f       	sbci	r29, 0xFF	; 255
    1ea0:	e8 83       	st	Y, r30
    1ea2:	f9 83       	std	Y+1, r31	; 0x01
    1ea4:	c6 5f       	subi	r28, 0xF6	; 246
    1ea6:	d0 40       	sbci	r29, 0x00	; 0
    1ea8:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1012
      strip.setPixelColor(playerShotPosition, 0 , 0 , 0); // clear shot
    1eaa:	40 e0       	ldi	r20, 0x00	; 0
    1eac:	60 e0       	ldi	r22, 0x00	; 0
    1eae:	86 2d       	mov	r24, r6
    1eb0:	90 e0       	ldi	r25, 0x00	; 0
    1eb2:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    1eb6:	f9 e0       	ldi	r31, 0x09	; 9
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1014

      if (playerShotPosition < 10) {
    1eb8:	f6 15       	cp	r31, r6
    1eba:	08 f0       	brcs	.+2      	; 0x1ebe <main+0xb4c>
    1ebc:	54 c0       	rjmp	.+168    	; 0x1f66 <main+0xbf4>
    1ebe:	26 ef       	ldi	r18, 0xF6	; 246
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1017
        playerShot = false;
      } else {
        playerShotPosition -= 10;
    1ec0:	62 0e       	add	r6, r18
    1ec2:	3f e4       	ldi	r19, 0x4F	; 79
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1019

        if ( playerShotPosition < 80) strip.setPixelColor(playerShotPosition, 0 , 0 , 100);// draw shot
    1ec4:	36 15       	cp	r19, r6
    1ec6:	38 f0       	brcs	.+14     	; 0x1ed6 <main+0xb64>
    1ec8:	24 e6       	ldi	r18, 0x64	; 100
    1eca:	40 e0       	ldi	r20, 0x00	; 0
    1ecc:	60 e0       	ldi	r22, 0x00	; 0
    1ece:	86 2d       	mov	r24, r6
    1ed0:	90 e0       	ldi	r25, 0x00	; 0
    1ed2:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
main():
    1ed6:	cc 50       	subi	r28, 0x0C	; 12
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1006
    } else {
      drawCharacter(playerPos, playerShip, 100, 100, 0);
    }

    if ((LEFTLOW || RIGHTLOW) && !playerShot) {// generates player shot
      playerShot = true;
    1ed8:	df 4f       	sbci	r29, 0xFF	; 255
    1eda:	c8 80       	ld	r12, Y
    1edc:	c4 5f       	subi	r28, 0xF4	; 244
    1ede:	d0 40       	sbci	r29, 0x00	; 0
    1ee0:	c1 50       	subi	r28, 0x01	; 1
    1ee2:	df 4f       	sbci	r29, 0xFF	; 255
    1ee4:	d8 80       	ld	r13, Y
    1ee6:	cf 5f       	subi	r28, 0xFF	; 255
    1ee8:	d0 40       	sbci	r29, 0x00	; 0
    1eea:	ce 50       	subi	r28, 0x0E	; 14
    1eec:	df 4f       	sbci	r29, 0xFF	; 255
    1eee:	a8 80       	ld	r10, Y
    1ef0:	b9 80       	ldd	r11, Y+1	; 0x01
    1ef2:	c2 5f       	subi	r28, 0xF2	; 242
    1ef4:	d0 40       	sbci	r29, 0x00	; 0
    1ef6:	00 e0       	ldi	r16, 0x00	; 0
    1ef8:	86 2c       	mov	r8, r6
    1efa:	91 2c       	mov	r9, r1
gameLedInvaders():
    1efc:	cb 51       	subi	r28, 0x1B	; 27
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1021
      } else {
        playerShotPosition -= 10;

        if ( playerShotPosition < 80) strip.setPixelColor(playerShotPosition, 0 , 0 , 100);// draw shot

        for (uint8_t x = 0; x < arrayElements; x++) {// if enemies are killed another array is created containing only killed enemies
    1efe:	df 4f       	sbci	r29, 0xFF	; 255
    1f00:	48 81       	ld	r20, Y
    1f02:	c5 5e       	subi	r28, 0xE5	; 229
    1f04:	d0 40       	sbci	r29, 0x00	; 0
    1f06:	04 17       	cp	r16, r20
    1f08:	78 f5       	brcc	.+94     	; 0x1f68 <main+0xbf6>
    1f0a:	d5 01       	movw	r26, r10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1022
          if (playerShotPosition == (actualEnemies[x] + enemyPos) && enemiesKilled [x] != x) {
    1f0c:	8d 91       	ld	r24, X+
    1f0e:	9d 91       	ld	r25, X+
    1f10:	5d 01       	movw	r10, r26
    1f12:	8e 0d       	add	r24, r14
    1f14:	9f 1d       	adc	r25, r15
    1f16:	88 15       	cp	r24, r8
    1f18:	99 05       	cpc	r25, r9
    1f1a:	01 f5       	brne	.+64     	; 0x1f5c <main+0xbea>
    1f1c:	f6 01       	movw	r30, r12
    1f1e:	80 81       	ld	r24, Z
    1f20:	08 17       	cp	r16, r24
    1f22:	e1 f0       	breq	.+56     	; 0x1f5c <main+0xbea>
    1f24:	00 83       	st	Z, r16
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1023
            enemiesKilled [x] = x;
    1f26:	cd 51       	subi	r28, 0x1D	; 29
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1025
            playerShot = false;
            enemiesRemaining--;
    1f28:	df 4f       	sbci	r29, 0xFF	; 255
    1f2a:	f8 81       	ld	r31, Y
    1f2c:	c3 5e       	subi	r28, 0xE3	; 227
    1f2e:	d0 40       	sbci	r29, 0x00	; 0
    1f30:	f1 50       	subi	r31, 0x01	; 1
    1f32:	cd 51       	subi	r28, 0x1D	; 29
    1f34:	df 4f       	sbci	r29, 0xFF	; 255
    1f36:	f8 83       	st	Y, r31
    1f38:	c3 5e       	subi	r28, 0xE3	; 227
    1f3a:	d0 40       	sbci	r29, 0x00	; 0
    1f3c:	80 91 65 3b 	lds	r24, 0x3B65	; 0x803b65 <ledInvadersScore>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1026
            ledInvadersScore += 1;
    1f40:	90 91 66 3b 	lds	r25, 0x3B66	; 0x803b66 <ledInvadersScore+0x1>
    1f44:	01 96       	adiw	r24, 0x01	; 1
    1f46:	80 93 65 3b 	sts	0x3B65, r24	; 0x803b65 <ledInvadersScore>
    1f4a:	90 93 66 3b 	sts	0x3B66, r25	; 0x803b66 <ledInvadersScore+0x1>
    1f4e:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1027
            strip.setPixelColor((actualEnemies[x] + enemyPos), 0, 0, 0);
    1f50:	40 e0       	ldi	r20, 0x00	; 0
    1f52:	60 e0       	ldi	r22, 0x00	; 0
    1f54:	c4 01       	movw	r24, r8
    1f56:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
main():
    1f5a:	51 2c       	mov	r5, r1
gameLedInvaders():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1024
        if ( playerShotPosition < 80) strip.setPixelColor(playerShotPosition, 0 , 0 , 100);// draw shot

        for (uint8_t x = 0; x < arrayElements; x++) {// if enemies are killed another array is created containing only killed enemies
          if (playerShotPosition == (actualEnemies[x] + enemyPos) && enemiesKilled [x] != x) {
            enemiesKilled [x] = x;
            playerShot = false;
    1f5c:	0f 5f       	subi	r16, 0xFF	; 255
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1021
      } else {
        playerShotPosition -= 10;

        if ( playerShotPosition < 80) strip.setPixelColor(playerShotPosition, 0 , 0 , 100);// draw shot

        for (uint8_t x = 0; x < arrayElements; x++) {// if enemies are killed another array is created containing only killed enemies
    1f5e:	2f ef       	ldi	r18, 0xFF	; 255
    1f60:	c2 1a       	sub	r12, r18
    1f62:	d2 0a       	sbc	r13, r18
    1f64:	cb cf       	rjmp	.-106    	; 0x1efc <main+0xb8a>
main():
    1f66:	51 2c       	mov	r5, r1
gameLedInvaders():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1015
    if (((interruptTimer - playerShotTimer) > 80) && playerShot) {//player shot check with enemies and mother ship
      playerShotTimer = interruptTimer;
      strip.setPixelColor(playerShotPosition, 0 , 0 , 0); // clear shot

      if (playerShotPosition < 10) {
        playerShot = false;
    1f68:	86 2d       	mov	r24, r6
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1032
            strip.setPixelColor((actualEnemies[x] + enemyPos), 0, 0, 0);
          }
        }
      }

      if (playerShotPosition == motherShipMovement || playerShotPosition == (motherShipMovement + 1)) {// mother ship hit detection
    1f6a:	90 e0       	ldi	r25, 0x00	; 0
    1f6c:	82 15       	cp	r24, r2
    1f6e:	93 05       	cpc	r25, r3
    1f70:	31 f0       	breq	.+12     	; 0x1f7e <main+0xc0c>
    1f72:	91 01       	movw	r18, r2
    1f74:	2f 5f       	subi	r18, 0xFF	; 255
    1f76:	3f 4f       	sbci	r19, 0xFF	; 255
    1f78:	82 17       	cp	r24, r18
    1f7a:	93 07       	cpc	r25, r19
    1f7c:	39 f5       	brne	.+78     	; 0x1fcc <main+0xc5a>
    1f7e:	82 e0       	ldi	r24, 0x02	; 2
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1035
        motherShipMovement = 9;
        callMotherShip = false;
        ledInvaderLives = 2;
    1f80:	80 93 1d 3a 	sts	0x3A1D, r24	; 0x803a1d <ledInvaderLives>
    1f84:	80 91 65 3b 	lds	r24, 0x3B65	; 0x803b65 <ledInvadersScore>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1036
        ledInvadersScore += 3;
    1f88:	90 91 66 3b 	lds	r25, 0x3B66	; 0x803b66 <ledInvadersScore+0x1>
    1f8c:	03 96       	adiw	r24, 0x03	; 3
    1f8e:	80 93 65 3b 	sts	0x3B65, r24	; 0x803b65 <ledInvadersScore>
    1f92:	90 93 66 3b 	sts	0x3B66, r25	; 0x803b66 <ledInvadersScore+0x1>
    1f96:	d1 2c       	mov	r13, r1
    1f98:	c1 2c       	mov	r12, r1
    1f9a:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1038
        for (uint8_t x = 0; x < 9; x++) {
          strip.setPixelColor(x, 0 , 0 , 0);
    1f9c:	40 e0       	ldi	r20, 0x00	; 0
    1f9e:	60 e0       	ldi	r22, 0x00	; 0
    1fa0:	c6 01       	movw	r24, r12
    1fa2:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    1fa6:	3f ef       	ldi	r19, 0xFF	; 255
    1fa8:	c3 1a       	sub	r12, r19
    1faa:	d3 0a       	sbc	r13, r19
    1fac:	49 e0       	ldi	r20, 0x09	; 9
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1037
      if (playerShotPosition == motherShipMovement || playerShotPosition == (motherShipMovement + 1)) {// mother ship hit detection
        motherShipMovement = 9;
        callMotherShip = false;
        ledInvaderLives = 2;
        ledInvadersScore += 3;
        for (uint8_t x = 0; x < 9; x++) {
    1fae:	c4 16       	cp	r12, r20
    1fb0:	d1 04       	cpc	r13, r1
    1fb2:	99 f7       	brne	.-26     	; 0x1f9a <main+0xc28>
    1fb4:	80 e2       	ldi	r24, 0x20	; 32
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1040
          strip.setPixelColor(x, 0 , 0 , 0);
        }
        beep(20000);
    1fb6:	9e e4       	ldi	r25, 0x4E	; 78
    1fb8:	0e 94 58 03 	call	0x6b0	; 0x6b0 <beep(unsigned int)>
main():
    1fbc:	c5 51       	subi	r28, 0x15	; 21
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1034
        }
      }

      if (playerShotPosition == motherShipMovement || playerShotPosition == (motherShipMovement + 1)) {// mother ship hit detection
        motherShipMovement = 9;
        callMotherShip = false;
    1fbe:	df 4f       	sbci	r29, 0xFF	; 255
    1fc0:	18 82       	st	Y, r1
    1fc2:	cb 5e       	subi	r28, 0xEB	; 235
    1fc4:	d0 40       	sbci	r29, 0x00	; 0
    1fc6:	39 e0       	ldi	r19, 0x09	; 9
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1033
          }
        }
      }

      if (playerShotPosition == motherShipMovement || playerShotPosition == (motherShipMovement + 1)) {// mother ship hit detection
        motherShipMovement = 9;
    1fc8:	23 2e       	mov	r2, r19
    1fca:	31 2c       	mov	r3, r1
gameLedInvaders():
    1fcc:	55 20       	and	r5, r5
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1043
          strip.setPixelColor(x, 0 , 0 , 0);
        }
        beep(20000);
      }

      if (playerShot) {
    1fce:	09 f4       	brne	.+2      	; 0x1fd2 <main+0xc60>
    1fd0:	c6 c1       	rjmp	.+908    	; 0x235e <main+0xfec>
    1fd2:	24 e6       	ldi	r18, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1044
        strip.setPixelColor(playerShotPosition, 0 , 0 , 100);
    1fd4:	40 e0       	ldi	r20, 0x00	; 0
    1fd6:	60 e0       	ldi	r22, 0x00	; 0
    1fd8:	86 2d       	mov	r24, r6
    1fda:	90 e0       	ldi	r25, 0x00	; 0
    1fdc:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    1fe0:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1050
      } else {
        playerShotPosition = (playerPos + 1);
      }
    }

    if ((interruptTimer - enemyShotTimer > 180) && closestEnemy < 79 && enemyShotPosition < 100) {// enemiees fire code
    1fe4:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    1fe8:	c8 50       	subi	r28, 0x08	; 8
    1fea:	df 4f       	sbci	r29, 0xFF	; 255
    1fec:	a8 81       	ld	r26, Y
    1fee:	b9 81       	ldd	r27, Y+1	; 0x01
    1ff0:	c8 5f       	subi	r28, 0xF8	; 248
    1ff2:	d0 40       	sbci	r29, 0x00	; 0
    1ff4:	8a 1b       	sub	r24, r26
    1ff6:	9b 0b       	sbc	r25, r27
    1ff8:	85 3b       	cpi	r24, 0xB5	; 181
    1ffa:	91 05       	cpc	r25, r1
    1ffc:	10 f1       	brcs	.+68     	; 0x2042 <main+0xcd0>
    1ffe:	c9 51       	subi	r28, 0x19	; 25
    2000:	df 4f       	sbci	r29, 0xFF	; 255
    2002:	b8 81       	ld	r27, Y
    2004:	c7 5e       	subi	r28, 0xE7	; 231
    2006:	d0 40       	sbci	r29, 0x00	; 0
    2008:	bf 34       	cpi	r27, 0x4F	; 79
    200a:	d8 f4       	brcc	.+54     	; 0x2042 <main+0xcd0>
    200c:	14 36       	cpi	r17, 0x64	; 100
    200e:	c8 f4       	brcc	.+50     	; 0x2042 <main+0xcd0>
    2010:	e0 91 75 3b 	lds	r30, 0x3B75	; 0x803b75 <interruptTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1051
      enemyShotTimer = interruptTimer;
    2014:	f0 91 76 3b 	lds	r31, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    2018:	c8 50       	subi	r28, 0x08	; 8
    201a:	df 4f       	sbci	r29, 0xFF	; 255
    201c:	e8 83       	st	Y, r30
    201e:	f9 83       	std	Y+1, r31	; 0x01
    2020:	c8 5f       	subi	r28, 0xF8	; 248
    2022:	d0 40       	sbci	r29, 0x00	; 0
    2024:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1052
      strip.setPixelColor(enemyShotPosition, 0 , 0 , 0);
    2026:	40 e0       	ldi	r20, 0x00	; 0
    2028:	60 e0       	ldi	r22, 0x00	; 0
    202a:	81 2f       	mov	r24, r17
    202c:	90 e0       	ldi	r25, 0x00	; 0
    202e:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    2032:	16 5f       	subi	r17, 0xF6	; 246
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1053
      enemyShotPosition += 10;
    2034:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1054
      strip.setPixelColor(enemyShotPosition, 100 , 70 , 0);
    2036:	46 e4       	ldi	r20, 0x46	; 70
    2038:	64 e6       	ldi	r22, 0x64	; 100
    203a:	81 2f       	mov	r24, r17
    203c:	90 e0       	ldi	r25, 0x00	; 0
    203e:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    2042:	71 16       	cp	r7, r17
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1057
    }

    if (enemyShotPosition == playerPos || enemyShotPosition == (playerPos + 1) || enemyShotPosition == (playerPos + 2) || closestEnemy > 79) {
    2044:	09 f4       	brne	.+2      	; 0x2048 <main+0xcd6>
    2046:	8f c1       	rjmp	.+798    	; 0x2366 <main+0xff4>
    2048:	21 2f       	mov	r18, r17
    204a:	30 e0       	ldi	r19, 0x00	; 0
    204c:	87 2d       	mov	r24, r7
    204e:	90 e0       	ldi	r25, 0x00	; 0
    2050:	ac 01       	movw	r20, r24
    2052:	4f 5f       	subi	r20, 0xFF	; 255
    2054:	5f 4f       	sbci	r21, 0xFF	; 255
    2056:	24 17       	cp	r18, r20
    2058:	35 07       	cpc	r19, r21
    205a:	09 f4       	brne	.+2      	; 0x205e <main+0xcec>
    205c:	84 c1       	rjmp	.+776    	; 0x2366 <main+0xff4>
    205e:	02 96       	adiw	r24, 0x02	; 2
    2060:	28 17       	cp	r18, r24
    2062:	39 07       	cpc	r19, r25
    2064:	09 f4       	brne	.+2      	; 0x2068 <main+0xcf6>
    2066:	7f c1       	rjmp	.+766    	; 0x2366 <main+0xff4>
    2068:	c9 51       	subi	r28, 0x19	; 25
    206a:	df 4f       	sbci	r29, 0xFF	; 255
    206c:	f8 81       	ld	r31, Y
    206e:	c7 5e       	subi	r28, 0xE7	; 231
    2070:	d0 40       	sbci	r29, 0x00	; 0
    2072:	f0 35       	cpi	r31, 0x50	; 80
    2074:	08 f0       	brcs	.+2      	; 0x2078 <main+0xd06>
    2076:	7e c1       	rjmp	.+764    	; 0x2374 <main+0x1002>
random():
    2078:	0e 94 45 1a 	call	0x348a	; 0x348a <random>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/WMath.cpp:38

long random(long howbig) {
  if (howbig == 0) {
    return 0;
  }
  return random() % howbig;
    207c:	28 e8       	ldi	r18, 0x88	; 136
    207e:	33 e1       	ldi	r19, 0x13	; 19
    2080:	40 e0       	ldi	r20, 0x00	; 0
    2082:	50 e0       	ldi	r21, 0x00	; 0
    2084:	0e 94 b6 1a 	call	0x356c	; 0x356c <__divmodsi4>
gameLedInvaders():
    2088:	64 3f       	cpi	r22, 0xF4	; 244
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1083
        }
      }
    }

    //mother ship movement
    if (random(0 , 5000) == 500)  callMotherShip = true;
    208a:	71 40       	sbci	r23, 0x01	; 1
    208c:	81 05       	cpc	r24, r1
    208e:	91 05       	cpc	r25, r1
    2090:	29 f4       	brne	.+10     	; 0x209c <main+0xd2a>
main():
    2092:	c5 51       	subi	r28, 0x15	; 21
    2094:	df 4f       	sbci	r29, 0xFF	; 255
    2096:	48 82       	st	Y, r4
    2098:	cb 5e       	subi	r28, 0xEB	; 235
    209a:	d0 40       	sbci	r29, 0x00	; 0
gameLedInvaders():
    209c:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1085

    if ((interruptTimer - motherShipTimer >= 160) && callMotherShip) {
    20a0:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    20a4:	c6 50       	subi	r28, 0x06	; 6
    20a6:	df 4f       	sbci	r29, 0xFF	; 255
    20a8:	a8 81       	ld	r26, Y
    20aa:	b9 81       	ldd	r27, Y+1	; 0x01
    20ac:	ca 5f       	subi	r28, 0xFA	; 250
    20ae:	d0 40       	sbci	r29, 0x00	; 0
    20b0:	8a 1b       	sub	r24, r26
    20b2:	9b 0b       	sbc	r25, r27
    20b4:	80 3a       	cpi	r24, 0xA0	; 160
    20b6:	91 05       	cpc	r25, r1
    20b8:	10 f1       	brcs	.+68     	; 0x20fe <main+0xd8c>
    20ba:	c5 51       	subi	r28, 0x15	; 21
    20bc:	df 4f       	sbci	r29, 0xFF	; 255
    20be:	b8 81       	ld	r27, Y
    20c0:	cb 5e       	subi	r28, 0xEB	; 235
    20c2:	d0 40       	sbci	r29, 0x00	; 0
    20c4:	bb 23       	and	r27, r27
    20c6:	d9 f0       	breq	.+54     	; 0x20fe <main+0xd8c>
    20c8:	e0 91 75 3b 	lds	r30, 0x3B75	; 0x803b75 <interruptTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1086
      motherShipTimer = interruptTimer;
    20cc:	f0 91 76 3b 	lds	r31, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    20d0:	c6 50       	subi	r28, 0x06	; 6
    20d2:	df 4f       	sbci	r29, 0xFF	; 255
    20d4:	e8 83       	st	Y, r30
    20d6:	f9 83       	std	Y+1, r31	; 0x01
    20d8:	ca 5f       	subi	r28, 0xFA	; 250
    20da:	d0 40       	sbci	r29, 0x00	; 0
    20dc:	37 fe       	sbrs	r3, 7
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1087
      if (motherShipMovement < 0) {
    20de:	90 c1       	rjmp	.+800    	; 0x2400 <main+0x108e>
    20e0:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1088
        strip.setPixelColor((motherShipMovement + 1), 0 , 0 , 0);
    20e2:	40 e0       	ldi	r20, 0x00	; 0
    20e4:	60 e0       	ldi	r22, 0x00	; 0
    20e6:	c1 01       	movw	r24, r2
    20e8:	01 96       	adiw	r24, 0x01	; 1
    20ea:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
main():
    20ee:	c5 51       	subi	r28, 0x15	; 21
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1090
        motherShipMovement = 9;
        callMotherShip = false;
    20f0:	df 4f       	sbci	r29, 0xFF	; 255
    20f2:	18 82       	st	Y, r1
    20f4:	cb 5e       	subi	r28, 0xEB	; 235
    20f6:	d0 40       	sbci	r29, 0x00	; 0
    20f8:	99 e0       	ldi	r25, 0x09	; 9
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1089

    if ((interruptTimer - motherShipTimer >= 160) && callMotherShip) {
      motherShipTimer = interruptTimer;
      if (motherShipMovement < 0) {
        strip.setPixelColor((motherShipMovement + 1), 0 , 0 , 0);
        motherShipMovement = 9;
    20fa:	29 2e       	mov	r2, r25
    20fc:	31 2c       	mov	r3, r1
gameLedInvaders():
    20fe:	cd 51       	subi	r28, 0x1D	; 29
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1102
      }
    }

    //enemies movement

    if (enemiesRemaining < 4)  gameSpeed = pgm_read_word_near (enemySpeed + enemiesRemaining);// reads enemies speed from array "enemySpeed" element 0 is reserved for Hard mode, not used for now
    2100:	df 4f       	sbci	r29, 0xFF	; 255
    2102:	38 81       	ld	r19, Y
    2104:	c3 5e       	subi	r28, 0xE3	; 227
    2106:	d0 40       	sbci	r29, 0x00	; 0
    2108:	34 30       	cpi	r19, 0x04	; 4
    210a:	60 f4       	brcc	.+24     	; 0x2124 <main+0xdb2>
    210c:	e3 2f       	mov	r30, r19
    210e:	f0 e0       	ldi	r31, 0x00	; 0
    2110:	ee 0f       	add	r30, r30
    2112:	ff 1f       	adc	r31, r31
    2114:	e9 53       	subi	r30, 0x39	; 57
    2116:	fd 4f       	sbci	r31, 0xFD	; 253
    2118:	85 91       	lpm	r24, Z+
    211a:	94 91       	lpm	r25, Z
    211c:	80 93 6d 3b 	sts	0x3B6D, r24	; 0x803b6d <gameSpeed>
    2120:	90 93 6e 3b 	sts	0x3B6E, r25	; 0x803b6e <gameSpeed+0x1>
    2124:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1104

    if ((interruptTimer - enemiesMoveTimer) > gameSpeed) {
    2128:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    212c:	c4 50       	subi	r28, 0x04	; 4
    212e:	df 4f       	sbci	r29, 0xFF	; 255
    2130:	48 81       	ld	r20, Y
    2132:	59 81       	ldd	r21, Y+1	; 0x01
    2134:	cc 5f       	subi	r28, 0xFC	; 252
    2136:	d0 40       	sbci	r29, 0x00	; 0
    2138:	84 1b       	sub	r24, r20
    213a:	95 0b       	sbc	r25, r21
    213c:	20 91 6d 3b 	lds	r18, 0x3B6D	; 0x803b6d <gameSpeed>
    2140:	30 91 6e 3b 	lds	r19, 0x3B6E	; 0x803b6e <gameSpeed+0x1>
    2144:	28 17       	cp	r18, r24
    2146:	39 07       	cpc	r19, r25
    2148:	c0 f5       	brcc	.+112    	; 0x21ba <main+0xe48>
    214a:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1105
      enemiesMoveTimer = interruptTimer;
    214e:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    2152:	c4 50       	subi	r28, 0x04	; 4
    2154:	df 4f       	sbci	r29, 0xFF	; 255
    2156:	88 83       	st	Y, r24
    2158:	99 83       	std	Y+1, r25	; 0x01
    215a:	cc 5f       	subi	r28, 0xFC	; 252
    215c:	d0 40       	sbci	r29, 0x00	; 0
    215e:	c2 50       	subi	r28, 0x02	; 2
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1106
      lastEnemyPos = enemyPos;
    2160:	df 4f       	sbci	r29, 0xFF	; 255
    2162:	e8 82       	st	Y, r14
    2164:	ce 5f       	subi	r28, 0xFE	; 254
    2166:	d0 40       	sbci	r29, 0x00	; 0
    2168:	c7 51       	subi	r28, 0x17	; 23
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1107
      enemiesheightTimer++;
    216a:	df 4f       	sbci	r29, 0xFF	; 255
    216c:	98 81       	ld	r25, Y
    216e:	c9 5e       	subi	r28, 0xE9	; 233
    2170:	d0 40       	sbci	r29, 0x00	; 0
    2172:	9f 5f       	subi	r25, 0xFF	; 255
    2174:	c7 51       	subi	r28, 0x17	; 23
    2176:	df 4f       	sbci	r29, 0xFF	; 255
    2178:	98 83       	st	Y, r25
    217a:	c9 5e       	subi	r28, 0xE9	; 233
    217c:	d0 40       	sbci	r29, 0x00	; 0
    217e:	82 e3       	ldi	r24, 0x32	; 50
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1108
      beep(50);
    2180:	90 e0       	ldi	r25, 0x00	; 0
    2182:	0e 94 58 03 	call	0x6b0	; 0x6b0 <beep(unsigned int)>
    2186:	c0 51       	subi	r28, 0x10	; 16
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1110

      if (allowRightMove) {// cheked before in screenRightBounds and screenLeftBounds
    2188:	df 4f       	sbci	r29, 0xFF	; 255
    218a:	a8 81       	ld	r26, Y
    218c:	c0 5f       	subi	r28, 0xF0	; 240
    218e:	d0 40       	sbci	r29, 0x00	; 0
    2190:	aa 23       	and	r26, r26
    2192:	09 f4       	brne	.+2      	; 0x2196 <main+0xe24>
    2194:	4c c1       	rjmp	.+664    	; 0x242e <main+0x10bc>
    2196:	bf ef       	ldi	r27, 0xFF	; 255
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1111
        enemyPos++;
    2198:	eb 1a       	sub	r14, r27
    219a:	fb 0a       	sbc	r15, r27
    219c:	c7 51       	subi	r28, 0x17	; 23
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1116
      } else {
        enemyPos--;
      }

      if (enemiesheightTimer >= 22) { // allow enemies to get closer to player
    219e:	df 4f       	sbci	r29, 0xFF	; 255
    21a0:	f8 81       	ld	r31, Y
    21a2:	c9 5e       	subi	r28, 0xE9	; 233
    21a4:	d0 40       	sbci	r29, 0x00	; 0
    21a6:	f6 31       	cpi	r31, 0x16	; 22
    21a8:	40 f0       	brcs	.+16     	; 0x21ba <main+0xe48>
    21aa:	2a e0       	ldi	r18, 0x0A	; 10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1118
        enemiesheightTimer = 0;
        enemyPos += 10;
    21ac:	e2 0e       	add	r14, r18
    21ae:	f1 1c       	adc	r15, r1
main():
    21b0:	c7 51       	subi	r28, 0x17	; 23
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1117
      } else {
        enemyPos--;
      }

      if (enemiesheightTimer >= 22) { // allow enemies to get closer to player
        enemiesheightTimer = 0;
    21b2:	df 4f       	sbci	r29, 0xFF	; 255
    21b4:	18 82       	st	Y, r1
    21b6:	c9 5e       	subi	r28, 0xE9	; 233
    21b8:	d0 40       	sbci	r29, 0x00	; 0
gameLedInvaders():
    21ba:	28 ee       	ldi	r18, 0xE8	; 232
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1122
        enemyPos += 10;
      }
    }

    if (buttonDebounce(0, 0, 1, 1000)) gameMenu();     //enemiesRemaining = 0;// uncoment to cheat and advance level with one button ;)
    21bc:	33 e0       	ldi	r19, 0x03	; 3
    21be:	41 e0       	ldi	r20, 0x01	; 1
    21c0:	60 e0       	ldi	r22, 0x00	; 0
    21c2:	80 e0       	ldi	r24, 0x00	; 0
    21c4:	0e 94 66 04 	call	0x8cc	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
    21c8:	81 11       	cpse	r24, r1
    21ca:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <gameMenu()>
    21ce:	80 91 71 3b 	lds	r24, 0x3B71	; 0x803b71 <endGame>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1124

    if (endGame)  break;
    21d2:	81 11       	cpse	r24, r1
    21d4:	30 c1       	rjmp	.+608    	; 0x2436 <main+0x10c4>
    21d6:	80 91 65 3b 	lds	r24, 0x3B65	; 0x803b65 <ledInvadersScore>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1126

    if (ledInvadersScore > 999) {
    21da:	90 91 66 3b 	lds	r25, 0x3B66	; 0x803b66 <ledInvadersScore+0x1>
    21de:	88 3e       	cpi	r24, 0xE8	; 232
    21e0:	93 40       	sbci	r25, 0x03	; 3
    21e2:	30 f0       	brcs	.+12     	; 0x21f0 <main+0xe7e>
    21e4:	47 ee       	ldi	r20, 0xE7	; 231
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1127
      ledInvadersScore = 999;
    21e6:	53 e0       	ldi	r21, 0x03	; 3
    21e8:	40 93 65 3b 	sts	0x3B65, r20	; 0x803b65 <ledInvadersScore>
    21ec:	50 93 66 3b 	sts	0x3B66, r21	; 0x803b66 <ledInvadersScore+0x1>
    21f0:	c1 51       	subi	r28, 0x11	; 17
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:992
        if ((actualEnemies[x] + enemyPos) > closestEnemy)  closestEnemy = (actualEnemies[x] + enemyPos);// some math to know  enemy positon closest to player.
      }
    }

    // player position
    playerPos = encoder.encoderRead(80, 87, false, 2);
    21f2:	df 4f       	sbci	r29, 0xFF	; 255
    21f4:	78 82       	st	Y, r7
    21f6:	cf 5e       	subi	r28, 0xEF	; 239
    21f8:	d0 40       	sbci	r29, 0x00	; 0
    21fa:	cd 51       	subi	r28, 0x1D	; 29
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:966
  for (uint8_t x = 0; x < arrayElements; x++) {
    actualEnemies[x] = pgm_read_byte_near (enemies[enemiesLevel] + (x + 1)); // first enemy draw on Leds
    enemiesKilled [x] = 99; // fill enemiesKilled array with a number never used some times memory stills holds a value that shouldn´t be there
  }

  while (enemiesRemaining > 0 && ledInvaderLives > 0) {
    21fc:	df 4f       	sbci	r29, 0xFF	; 255
    21fe:	f8 81       	ld	r31, Y
    2200:	c3 5e       	subi	r28, 0xE3	; 227
    2202:	d0 40       	sbci	r29, 0x00	; 0
    2204:	ff 23       	and	r31, r31
    2206:	09 f4       	brne	.+2      	; 0x220a <main+0xe98>
    2208:	16 c1       	rjmp	.+556    	; 0x2436 <main+0x10c4>
    220a:	80 91 1d 3a 	lds	r24, 0x3A1D	; 0x803a1d <ledInvaderLives>
    220e:	88 23       	and	r24, r24
    2210:	09 f4       	brne	.+2      	; 0x2214 <main+0xea2>
    2212:	11 c1       	rjmp	.+546    	; 0x2436 <main+0x10c4>
    2214:	ce 50       	subi	r28, 0x0E	; 14
    2216:	df 4f       	sbci	r29, 0xFF	; 255
    2218:	88 80       	ld	r8, Y
    221a:	99 80       	ldd	r9, Y+1	; 0x01
    221c:	c2 5f       	subi	r28, 0xF2	; 242
    221e:	d0 40       	sbci	r29, 0x00	; 0
    2220:	cc 50       	subi	r28, 0x0C	; 12
    2222:	df 4f       	sbci	r29, 0xFF	; 255
    2224:	28 81       	ld	r18, Y
    2226:	c4 5f       	subi	r28, 0xF4	; 244
    2228:	d0 40       	sbci	r29, 0x00	; 0
    222a:	c3 51       	subi	r28, 0x13	; 19
    222c:	df 4f       	sbci	r29, 0xFF	; 255
    222e:	28 83       	st	Y, r18
    2230:	cd 5e       	subi	r28, 0xED	; 237
    2232:	d0 40       	sbci	r29, 0x00	; 0
    2234:	c1 50       	subi	r28, 0x01	; 1
    2236:	df 4f       	sbci	r29, 0xFF	; 255
    2238:	38 81       	ld	r19, Y
    223a:	cf 5f       	subi	r28, 0xFF	; 255
    223c:	d0 40       	sbci	r29, 0x00	; 0
    223e:	c2 51       	subi	r28, 0x12	; 18
    2240:	df 4f       	sbci	r29, 0xFF	; 255
    2242:	38 83       	st	Y, r19
    2244:	ce 5e       	subi	r28, 0xEE	; 238
    2246:	d0 40       	sbci	r29, 0x00	; 0
main():
    2248:	00 e0       	ldi	r16, 0x00	; 0
gameLedInvaders():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:968

    for (uint8_t x = 0; x < arrayElements; x++) {
    224a:	c2 50       	subi	r28, 0x02	; 2
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:972

      if (enemiesKilled [x] != x) {

        if (enemyPos != lastEnemyPos) {
    224c:	df 4f       	sbci	r29, 0xFF	; 255
    224e:	58 81       	ld	r21, Y
    2250:	ce 5f       	subi	r28, 0xFE	; 254
    2252:	d0 40       	sbci	r29, 0x00	; 0
    2254:	45 2f       	mov	r20, r21
    2256:	50 e0       	ldi	r21, 0x00	; 0
    2258:	c0 50       	subi	r28, 0x00	; 0
    225a:	df 4f       	sbci	r29, 0xFF	; 255
    225c:	48 83       	st	Y, r20
    225e:	59 83       	std	Y+1, r21	; 0x01
    2260:	c0 50       	subi	r28, 0x00	; 0
    2262:	d1 40       	sbci	r29, 0x01	; 1
    2264:	cb 51       	subi	r28, 0x1B	; 27
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:968
    enemiesKilled [x] = 99; // fill enemiesKilled array with a number never used some times memory stills holds a value that shouldn´t be there
  }

  while (enemiesRemaining > 0 && ledInvaderLives > 0) {

    for (uint8_t x = 0; x < arrayElements; x++) {
    2266:	df 4f       	sbci	r29, 0xFF	; 255
    2268:	88 81       	ld	r24, Y
    226a:	c5 5e       	subi	r28, 0xE5	; 229
    226c:	d0 40       	sbci	r29, 0x00	; 0
    226e:	08 17       	cp	r16, r24
    2270:	08 f0       	brcs	.+2      	; 0x2274 <main+0xf02>
    2272:	cd cd       	rjmp	.-1126   	; 0x1e0e <main+0xa9c>
    2274:	c3 51       	subi	r28, 0x13	; 19
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:970

      if (enemiesKilled [x] != x) {
    2276:	df 4f       	sbci	r29, 0xFF	; 255
    2278:	a8 81       	ld	r26, Y
    227a:	b9 81       	ldd	r27, Y+1	; 0x01
    227c:	cd 5e       	subi	r28, 0xED	; 237
    227e:	d0 40       	sbci	r29, 0x00	; 0
    2280:	8d 91       	ld	r24, X+
    2282:	c3 51       	subi	r28, 0x13	; 19
    2284:	df 4f       	sbci	r29, 0xFF	; 255
    2286:	a8 83       	st	Y, r26
    2288:	b9 83       	std	Y+1, r27	; 0x01
    228a:	cd 5e       	subi	r28, 0xED	; 237
    228c:	d0 40       	sbci	r29, 0x00	; 0
    228e:	08 17       	cp	r16, r24
    2290:	09 f4       	brne	.+2      	; 0x2294 <main+0xf22>
    2292:	60 c0       	rjmp	.+192    	; 0x2354 <main+0xfe2>
    2294:	f4 01       	movw	r30, r8
    2296:	c0 80       	ld	r12, Z
    2298:	d1 80       	ldd	r13, Z+1	; 0x01
    229a:	c0 50       	subi	r28, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:972

        if (enemyPos != lastEnemyPos) {
    229c:	df 4f       	sbci	r29, 0xFF	; 255
    229e:	28 81       	ld	r18, Y
    22a0:	39 81       	ldd	r19, Y+1	; 0x01
    22a2:	c0 50       	subi	r28, 0x00	; 0
    22a4:	d1 40       	sbci	r29, 0x01	; 1
    22a6:	2e 15       	cp	r18, r14
    22a8:	3f 05       	cpc	r19, r15
    22aa:	69 f0       	breq	.+26     	; 0x22c6 <main+0xf54>
    22ac:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:973
          strip.setPixelColor((actualEnemies[x] + lastEnemyPos), 0, 0, 0); // clear last enemy position
    22ae:	40 e0       	ldi	r20, 0x00	; 0
    22b0:	60 e0       	ldi	r22, 0x00	; 0
    22b2:	c0 50       	subi	r28, 0x00	; 0
    22b4:	df 4f       	sbci	r29, 0xFF	; 255
    22b6:	88 81       	ld	r24, Y
    22b8:	99 81       	ldd	r25, Y+1	; 0x01
    22ba:	c0 50       	subi	r28, 0x00	; 0
    22bc:	d1 40       	sbci	r29, 0x01	; 1
    22be:	8c 0d       	add	r24, r12
    22c0:	9d 1d       	adc	r25, r13
    22c2:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    22c6:	57 01       	movw	r10, r14
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:976
        }

        strip.setPixelColor((actualEnemies[x] + enemyPos), 100, 0, 0);// led enemy position musn´t be less than 0strip.setPixelColor((actualEnemies[x] + enemyPos), 100, 0, 0);// led enemy position musn´t be less than 0
    22c8:	ac 0c       	add	r10, r12
    22ca:	bd 1c       	adc	r11, r13
    22cc:	20 e0       	ldi	r18, 0x00	; 0
    22ce:	40 e0       	ldi	r20, 0x00	; 0
    22d0:	64 e6       	ldi	r22, 0x64	; 100
    22d2:	c5 01       	movw	r24, r10
    22d4:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    22d8:	90 e0       	ldi	r25, 0x00	; 0
    22da:	80 e0       	ldi	r24, 0x00	; 0
    22dc:	fc 01       	movw	r30, r24
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:980

        for (uint8_t y = 0; y < 9  ; y++) {// code to check bounds of enemies

          if (pgm_read_byte_near (screenRightBounds + y) == (actualEnemies[x] + enemyPos)) allowRightMove = false;
    22de:	e9 59       	subi	r30, 0x99	; 153
    22e0:	fd 4f       	sbci	r31, 0xFD	; 253
    22e2:	e4 91       	lpm	r30, Z
    22e4:	ea 15       	cp	r30, r10
    22e6:	1b 04       	cpc	r1, r11
    22e8:	29 f4       	brne	.+10     	; 0x22f4 <main+0xf82>
main():
    22ea:	c0 51       	subi	r28, 0x10	; 16
    22ec:	df 4f       	sbci	r29, 0xFF	; 255
    22ee:	18 82       	st	Y, r1
    22f0:	c0 5f       	subi	r28, 0xF0	; 240
    22f2:	d0 40       	sbci	r29, 0x00	; 0
gameLedInvaders():
    22f4:	fc 01       	movw	r30, r24
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:982

          if (pgm_read_byte_near (screenLeftBounds + y) == (actualEnemies[x] + enemyPos))  allowRightMove = true;
    22f6:	e3 5a       	subi	r30, 0xA3	; 163
    22f8:	fd 4f       	sbci	r31, 0xFD	; 253
    22fa:	e4 91       	lpm	r30, Z
    22fc:	ea 15       	cp	r30, r10
    22fe:	1b 04       	cpc	r1, r11
    2300:	29 f4       	brne	.+10     	; 0x230c <main+0xf9a>
main():
    2302:	c0 51       	subi	r28, 0x10	; 16
    2304:	df 4f       	sbci	r29, 0xFF	; 255
    2306:	48 82       	st	Y, r4
    2308:	c0 5f       	subi	r28, 0xF0	; 240
    230a:	d0 40       	sbci	r29, 0x00	; 0
    230c:	01 96       	adiw	r24, 0x01	; 1
gameLedInvaders():
    230e:	89 30       	cpi	r24, 0x09	; 9
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:978
          strip.setPixelColor((actualEnemies[x] + lastEnemyPos), 0, 0, 0); // clear last enemy position
        }

        strip.setPixelColor((actualEnemies[x] + enemyPos), 100, 0, 0);// led enemy position musn´t be less than 0strip.setPixelColor((actualEnemies[x] + enemyPos), 100, 0, 0);// led enemy position musn´t be less than 0

        for (uint8_t y = 0; y < 9  ; y++) {// code to check bounds of enemies
    2310:	91 05       	cpc	r25, r1
    2312:	21 f7       	brne	.-56     	; 0x22dc <main+0xf6a>
random():
    2314:	0e 94 45 1a 	call	0x348a	; 0x348a <random>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/WMath.cpp:38
    2318:	2c e2       	ldi	r18, 0x2C	; 44
    231a:	31 e0       	ldi	r19, 0x01	; 1
    231c:	40 e0       	ldi	r20, 0x00	; 0
    231e:	50 e0       	ldi	r21, 0x00	; 0
    2320:	0e 94 b6 1a 	call	0x356c	; 0x356c <__divmodsi4>
gameLedInvaders():
    2324:	66 39       	cpi	r22, 0x96	; 150
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:985
          if (pgm_read_byte_near (screenRightBounds + y) == (actualEnemies[x] + enemyPos)) allowRightMove = false;

          if (pgm_read_byte_near (screenLeftBounds + y) == (actualEnemies[x] + enemyPos))  allowRightMove = true;
        }

        if (random(0 , 300) == 150 && enemyShotPosition > 99) enemyShotPosition = (actualEnemies[x] + enemyPos);
    2326:	71 05       	cpc	r23, r1
    2328:	81 05       	cpc	r24, r1
    232a:	91 05       	cpc	r25, r1
    232c:	21 f4       	brne	.+8      	; 0x2336 <main+0xfc4>
    232e:	14 36       	cpi	r17, 0x64	; 100
    2330:	10 f0       	brcs	.+4      	; 0x2336 <main+0xfc4>
    2332:	1c 2d       	mov	r17, r12
    2334:	1e 0d       	add	r17, r14
    2336:	c9 51       	subi	r28, 0x19	; 25
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:987

        if ((actualEnemies[x] + enemyPos) > closestEnemy)  closestEnemy = (actualEnemies[x] + enemyPos);// some math to know  enemy positon closest to player.
    2338:	df 4f       	sbci	r29, 0xFF	; 255
    233a:	38 81       	ld	r19, Y
    233c:	c7 5e       	subi	r28, 0xE7	; 231
    233e:	d0 40       	sbci	r29, 0x00	; 0
    2340:	3a 15       	cp	r19, r10
    2342:	1b 04       	cpc	r1, r11
    2344:	3c f4       	brge	.+14     	; 0x2354 <main+0xfe2>
    2346:	4c 2d       	mov	r20, r12
    2348:	4e 0d       	add	r20, r14
    234a:	c9 51       	subi	r28, 0x19	; 25
    234c:	df 4f       	sbci	r29, 0xFF	; 255
    234e:	48 83       	st	Y, r20
    2350:	c7 5e       	subi	r28, 0xE7	; 231
    2352:	d0 40       	sbci	r29, 0x00	; 0
    2354:	0f 5f       	subi	r16, 0xFF	; 255
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:968
    enemiesKilled [x] = 99; // fill enemiesKilled array with a number never used some times memory stills holds a value that shouldn´t be there
  }

  while (enemiesRemaining > 0 && ledInvaderLives > 0) {

    for (uint8_t x = 0; x < arrayElements; x++) {
    2356:	52 e0       	ldi	r21, 0x02	; 2
    2358:	85 0e       	add	r8, r21
    235a:	91 1c       	adc	r9, r1
    235c:	83 cf       	rjmp	.-250    	; 0x2264 <main+0xef2>
    235e:	66 24       	eor	r6, r6
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1046
      }

      if (playerShot) {
        strip.setPixelColor(playerShotPosition, 0 , 0 , 100);
      } else {
        playerShotPosition = (playerPos + 1);
    2360:	63 94       	inc	r6
    2362:	67 0c       	add	r6, r7
    2364:	3d ce       	rjmp	.-902    	; 0x1fe0 <main+0xc6e>
    2366:	c9 51       	subi	r28, 0x19	; 25
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1059
      strip.setPixelColor(enemyShotPosition, 100 , 70 , 0);
    }

    if (enemyShotPosition == playerPos || enemyShotPosition == (playerPos + 1) || enemyShotPosition == (playerPos + 2) || closestEnemy > 79) {

      if (closestEnemy > 79) {// if the enemies enters player position END game
    2368:	df 4f       	sbci	r29, 0xFF	; 255
    236a:	28 81       	ld	r18, Y
    236c:	c7 5e       	subi	r28, 0xE7	; 231
    236e:	d0 40       	sbci	r29, 0x00	; 0
    2370:	20 35       	cpi	r18, 0x50	; 80
    2372:	b0 f0       	brcs	.+44     	; 0x23a0 <main+0x102e>
    2374:	10 92 1d 3a 	sts	0x3A1D, r1	; 0x803a1d <ledInvaderLives>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1060
        ledInvaderLives = 0;
    2378:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1065
      } else {
        ledInvaderLives --;
      }

      strip.setPixelColor(enemyShotPosition, 0 , 0 , 0);
    237a:	40 e0       	ldi	r20, 0x00	; 0
    237c:	60 e0       	ldi	r22, 0x00	; 0
    237e:	81 2f       	mov	r24, r17
    2380:	90 e0       	ldi	r25, 0x00	; 0
    2382:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    2386:	80 91 1d 3a 	lds	r24, 0x3A1D	; 0x803a1d <ledInvaderLives>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1068
      enemyShotPosition = 100;

      if (ledInvaderLives > 0) {
    238a:	26 e0       	ldi	r18, 0x06	; 6
    238c:	c2 2e       	mov	r12, r18
    238e:	d1 2c       	mov	r13, r1
    2390:	88 23       	and	r24, r24
    2392:	61 f0       	breq	.+24     	; 0x23ac <main+0x103a>
    2394:	80 ed       	ldi	r24, 0xD0	; 208
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1069
        beep(2000);
    2396:	97 e0       	ldi	r25, 0x07	; 7
    2398:	0e 94 58 03 	call	0x6b0	; 0x6b0 <beep(unsigned int)>
main():
    239c:	14 e6       	ldi	r17, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1066
      } else {
        ledInvaderLives --;
      }

      strip.setPixelColor(enemyShotPosition, 0 , 0 , 0);
      enemyShotPosition = 100;
    239e:	6c ce       	rjmp	.-808    	; 0x2078 <main+0xd06>
gameLedInvaders():
    23a0:	80 91 1d 3a 	lds	r24, 0x3A1D	; 0x803a1d <ledInvaderLives>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1062
    if (enemyShotPosition == playerPos || enemyShotPosition == (playerPos + 1) || enemyShotPosition == (playerPos + 2) || closestEnemy > 79) {

      if (closestEnemy > 79) {// if the enemies enters player position END game
        ledInvaderLives = 0;
      } else {
        ledInvaderLives --;
    23a4:	81 50       	subi	r24, 0x01	; 1
    23a6:	80 93 1d 3a 	sts	0x3A1D, r24	; 0x803a1d <ledInvaderLives>
    23aa:	e6 cf       	rjmp	.-52     	; 0x2378 <main+0x1006>
    23ac:	80 e6       	ldi	r24, 0x60	; 96
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1072

      if (ledInvaderLives > 0) {
        beep(2000);
      } else {
        for (uint16_t x = 0; x < 600; x += 100) {// game music
          beep(60000);
    23ae:	9a ee       	ldi	r25, 0xEA	; 234
    23b0:	0e 94 58 03 	call	0x6b0	; 0x6b0 <beep(unsigned int)>
    23b4:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1073
          drawCharacter(playerPos, playerShip, 0, 0, 0);
    23b6:	20 e0       	ldi	r18, 0x00	; 0
    23b8:	40 e0       	ldi	r20, 0x00	; 0
    23ba:	6e ef       	ldi	r22, 0xFE	; 254
    23bc:	71 e0       	ldi	r23, 0x01	; 1
    23be:	87 2d       	mov	r24, r7
    23c0:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    23c4:	24 e6       	ldi	r18, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1074
          drawCharacter(playerPos, playerShipDead, 0, 100, 0);
    23c6:	40 e0       	ldi	r20, 0x00	; 0
    23c8:	69 ef       	ldi	r22, 0xF9	; 249
    23ca:	71 e0       	ldi	r23, 0x01	; 1
    23cc:	87 2d       	mov	r24, r7
    23ce:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    23d2:	80 e6       	ldi	r24, 0x60	; 96
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1075
          beep(60000);
    23d4:	9a ee       	ldi	r25, 0xEA	; 234
    23d6:	0e 94 58 03 	call	0x6b0	; 0x6b0 <beep(unsigned int)>
    23da:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1076
          drawCharacter(playerPos, playerShipDead, 0, 0, 0);
    23dc:	40 e0       	ldi	r20, 0x00	; 0
    23de:	69 ef       	ldi	r22, 0xF9	; 249
    23e0:	71 e0       	ldi	r23, 0x01	; 1
    23e2:	87 2d       	mov	r24, r7
    23e4:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    23e8:	24 e6       	ldi	r18, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1077
          drawCharacter(playerPos, playerShip, 100, 100, 0);
    23ea:	44 e6       	ldi	r20, 0x64	; 100
    23ec:	6e ef       	ldi	r22, 0xFE	; 254
    23ee:	71 e0       	ldi	r23, 0x01	; 1
    23f0:	87 2d       	mov	r24, r7
    23f2:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    23f6:	31 e0       	ldi	r19, 0x01	; 1
    23f8:	c3 1a       	sub	r12, r19
    23fa:	d1 08       	sbc	r13, r1
    23fc:	b9 f6       	brne	.-82     	; 0x23ac <main+0x103a>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1071
      enemyShotPosition = 100;

      if (ledInvaderLives > 0) {
        beep(2000);
      } else {
        for (uint16_t x = 0; x < 600; x += 100) {// game music
    23fe:	ce cf       	rjmp	.-100    	; 0x239c <main+0x102a>
    2400:	61 01       	movw	r12, r2
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1092
      if (motherShipMovement < 0) {
        strip.setPixelColor((motherShipMovement + 1), 0 , 0 , 0);
        motherShipMovement = 9;
        callMotherShip = false;
      } else {
        motherShipMovement--;
    2402:	f1 e0       	ldi	r31, 0x01	; 1
    2404:	cf 1a       	sub	r12, r31
    2406:	d1 08       	sbc	r13, r1
    2408:	26 e4       	ldi	r18, 0x46	; 70
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1093
        strip.setPixelColor(motherShipMovement, 70 , 0 , 70);
    240a:	40 e0       	ldi	r20, 0x00	; 0
    240c:	66 e4       	ldi	r22, 0x46	; 70
    240e:	c6 01       	movw	r24, r12
    2410:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    2414:	28 e0       	ldi	r18, 0x08	; 8
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1094
        if (motherShipMovement < 8) {
    2416:	c2 16       	cp	r12, r18
    2418:	d1 04       	cpc	r13, r1
    241a:	3c f4       	brge	.+14     	; 0x242a <main+0x10b8>
    241c:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1095
          strip.setPixelColor((motherShipMovement + 2), 0 , 0 , 0);
    241e:	40 e0       	ldi	r20, 0x00	; 0
    2420:	60 e0       	ldi	r22, 0x00	; 0
    2422:	c1 01       	movw	r24, r2
    2424:	01 96       	adiw	r24, 0x01	; 1
    2426:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    242a:	16 01       	movw	r2, r12
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1094
        motherShipMovement = 9;
        callMotherShip = false;
      } else {
        motherShipMovement--;
        strip.setPixelColor(motherShipMovement, 70 , 0 , 70);
        if (motherShipMovement < 8) {
    242c:	68 ce       	rjmp	.-816    	; 0x20fe <main+0xd8c>
    242e:	e1 e0       	ldi	r30, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1113
      beep(50);

      if (allowRightMove) {// cheked before in screenRightBounds and screenLeftBounds
        enemyPos++;
      } else {
        enemyPos--;
    2430:	ee 1a       	sub	r14, r30
    2432:	f1 08       	sbc	r15, r1
    2434:	b3 ce       	rjmp	.-666    	; 0x219c <main+0xe2a>
    2436:	0e 94 9c 06 	call	0xd38	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1130

    if (ledInvadersScore > 999) {
      ledInvadersScore = 999;
    }
  }
  strip.clear();
    243a:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1131
  generalTimer = interruptTimer;
    243e:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    2442:	80 93 73 3b 	sts	0x3B73, r24	; 0x803b73 <generalTimer>
    2446:	90 93 74 3b 	sts	0x3B74, r25	; 0x803b74 <generalTimer+0x1>
    244a:	cd 51       	subi	r28, 0x1D	; 29
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1133

  if (enemiesRemaining == 0) {// go to next level
    244c:	df 4f       	sbci	r29, 0xFF	; 255
    244e:	58 81       	ld	r21, Y
    2450:	c3 5e       	subi	r28, 0xE3	; 227
    2452:	d0 40       	sbci	r29, 0x00	; 0
    2454:	51 11       	cpse	r21, r1
    2456:	1e c0       	rjmp	.+60     	; 0x2494 <main+0x1122>
    2458:	80 91 1e 3a 	lds	r24, 0x3A1E	; 0x803a1e <gameLevel>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1134
    gameLevel++;
    245c:	8f 5f       	subi	r24, 0xFF	; 255
    245e:	80 93 1e 3a 	sts	0x3A1E, r24	; 0x803a1e <gameLevel>
    2462:	90 91 67 3b 	lds	r25, 0x3B67	; 0x803b67 <enemiesLevel>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1135
    enemiesLevel++;
    2466:	9f 5f       	subi	r25, 0xFF	; 255
    2468:	90 93 67 3b 	sts	0x3B67, r25	; 0x803b67 <enemiesLevel>
    246c:	99 30       	cpi	r25, 0x09	; 9
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1137

    if (enemiesLevel > 8)   enemiesLevel = 0;
    246e:	10 f0       	brcs	.+4      	; 0x2474 <main+0x1102>
    2470:	10 92 67 3b 	sts	0x3B67, r1	; 0x803b67 <enemiesLevel>
    2474:	e7 ec       	ldi	r30, 0xC7	; 199
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1140

    if (gameLevel < 15) {// speeds up level up to level 15 then speeds is the same
      gameSpeed = pgm_read_word_near (enemySpeed + 0) - (gameLevel * 15);
    2476:	f2 e0       	ldi	r31, 0x02	; 2
    2478:	8f 30       	cpi	r24, 0x0F	; 15
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1139
    gameLevel++;
    enemiesLevel++;

    if (enemiesLevel > 8)   enemiesLevel = 0;

    if (gameLevel < 15) {// speeds up level up to level 15 then speeds is the same
    247a:	08 f0       	brcs	.+2      	; 0x247e <main+0x110c>
    247c:	43 c0       	rjmp	.+134    	; 0x2504 <main+0x1192>
    247e:	25 91       	lpm	r18, Z+
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1140
      gameSpeed = pgm_read_word_near (enemySpeed + 0) - (gameLevel * 15);
    2480:	34 91       	lpm	r19, Z
    2482:	9f e0       	ldi	r25, 0x0F	; 15
    2484:	89 9f       	mul	r24, r25
    2486:	20 19       	sub	r18, r0
    2488:	31 09       	sbc	r19, r1
    248a:	11 24       	eor	r1, r1
    248c:	20 93 6d 3b 	sts	0x3B6D, r18	; 0x803b6d <gameSpeed>
    2490:	30 93 6e 3b 	sts	0x3B6E, r19	; 0x803b6e <gameSpeed+0x1>
    2494:	80 91 1d 3a 	lds	r24, 0x3A1D	; 0x803a1d <ledInvaderLives>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1154
      endGame = true;
      delay(2000);
    }
  }

  if (ledInvaderLives == 0) {// Game over
    2498:	81 11       	cpse	r24, r1
    249a:	2b c0       	rjmp	.+86     	; 0x24f2 <main+0x1180>
    249c:	e7 ec       	ldi	r30, 0xC7	; 199
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1155
    gameSpeed =  pgm_read_word_near (enemySpeed + 0);
    249e:	f2 e0       	ldi	r31, 0x02	; 2
    24a0:	85 91       	lpm	r24, Z+
    24a2:	94 91       	lpm	r25, Z
    24a4:	80 93 6d 3b 	sts	0x3B6D, r24	; 0x803b6d <gameSpeed>
    24a8:	90 93 6e 3b 	sts	0x3B6E, r25	; 0x803b6e <gameSpeed+0x1>
    24ac:	10 92 67 3b 	sts	0x3B67, r1	; 0x803b67 <enemiesLevel>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1156
    enemiesLevel = 0;
    24b0:	82 e0       	ldi	r24, 0x02	; 2
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1157
    ledInvaderLives = 2;
    24b2:	80 93 1d 3a 	sts	0x3A1D, r24	; 0x803a1d <ledInvaderLives>
    24b6:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1158
    gameLevel = 1;
    24b8:	80 93 1e 3a 	sts	0x3A1E, r24	; 0x803a1e <gameLevel>
    24bc:	80 91 65 3b 	lds	r24, 0x3B65	; 0x803b65 <ledInvadersScore>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1160

    if (ledInvadersScore > 999) ledInvadersScore = 999;
    24c0:	90 91 66 3b 	lds	r25, 0x3B66	; 0x803b66 <ledInvadersScore+0x1>
    24c4:	88 3e       	cpi	r24, 0xE8	; 232
    24c6:	93 40       	sbci	r25, 0x03	; 3
    24c8:	30 f0       	brcs	.+12     	; 0x24d6 <main+0x1164>
    24ca:	87 ee       	ldi	r24, 0xE7	; 231
    24cc:	93 e0       	ldi	r25, 0x03	; 3
    24ce:	80 93 65 3b 	sts	0x3B65, r24	; 0x803b65 <ledInvadersScore>
    24d2:	90 93 66 3b 	sts	0x3B66, r25	; 0x803b66 <ledInvadersScore+0x1>
    24d6:	65 e0       	ldi	r22, 0x05	; 5
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1161
    endGameMenu(ledInvadersScore, 5);
    24d8:	80 91 65 3b 	lds	r24, 0x3B65	; 0x803b65 <ledInvadersScore>
    24dc:	90 91 66 3b 	lds	r25, 0x3B66	; 0x803b66 <ledInvadersScore+0x1>
    24e0:	0e 94 24 08 	call	0x1048	; 0x1048 <endGameMenu(unsigned int, unsigned char)>
    24e4:	10 92 65 3b 	sts	0x3B65, r1	; 0x803b65 <ledInvadersScore>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1162
    ledInvadersScore = 0;
    24e8:	10 92 66 3b 	sts	0x3B66, r1	; 0x803b66 <ledInvadersScore+0x1>
    24ec:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1163
    gameLevel = 1;
    24ee:	80 93 1e 3a 	sts	0x3A1E, r24	; 0x803a1e <gameLevel>
    24f2:	ce 5f       	subi	r28, 0xFE	; 254
    24f4:	de 4f       	sbci	r29, 0xFE	; 254
    24f6:	28 81       	ld	r18, Y
    24f8:	39 81       	ldd	r19, Y+1	; 0x01
    24fa:	c2 50       	subi	r28, 0x02	; 2
    24fc:	d1 40       	sbci	r29, 0x01	; 1
    24fe:	2d bf       	out	0x3d, r18	; 61
    2500:	3e bf       	out	0x3e, r19	; 62
    2502:	c1 ca       	rjmp	.-2686   	; 0x1a86 <main+0x714>
    2504:	25 91       	lpm	r18, Z+
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1142
    if (enemiesLevel > 8)   enemiesLevel = 0;

    if (gameLevel < 15) {// speeds up level up to level 15 then speeds is the same
      gameSpeed = pgm_read_word_near (enemySpeed + 0) - (gameLevel * 15);
    } else {
      gameSpeed = pgm_read_word_near (enemySpeed + 0) - 250;
    2506:	34 91       	lpm	r19, Z
    2508:	2a 5f       	subi	r18, 0xFA	; 250
    250a:	31 09       	sbc	r19, r1
    250c:	20 93 6d 3b 	sts	0x3B6D, r18	; 0x803b6d <gameSpeed>
    2510:	30 93 6e 3b 	sts	0x3B6E, r19	; 0x803b6e <gameSpeed+0x1>
    2514:	84 36       	cpi	r24, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1145
    }

    if (gameLevel > 99) {// for now  game continues only to level 99
    2516:	08 f4       	brcc	.+2      	; 0x251a <main+0x11a8>
    2518:	bd cf       	rjmp	.-134    	; 0x2494 <main+0x1122>
    251a:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1146
      drawCharacter(20, letterW, 100, 0, 0);
    251c:	20 e0       	ldi	r18, 0x00	; 0
    251e:	44 e6       	ldi	r20, 0x64	; 100
    2520:	61 e5       	ldi	r22, 0x51	; 81
    2522:	72 e0       	ldi	r23, 0x02	; 2
    2524:	84 e1       	ldi	r24, 0x14	; 20
    2526:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    252a:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1147
      drawCharacter(23, letterI, 100, 0, 0);
    252c:	44 e6       	ldi	r20, 0x64	; 100
    252e:	6c e4       	ldi	r22, 0x4C	; 76
    2530:	72 e0       	ldi	r23, 0x02	; 2
    2532:	87 e1       	ldi	r24, 0x17	; 23
    2534:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    2538:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1148
      drawCharacter(26, letterN, 100, 0, 0);
    253a:	44 e6       	ldi	r20, 0x64	; 100
    253c:	60 e4       	ldi	r22, 0x40	; 64
    253e:	72 e0       	ldi	r23, 0x02	; 2
    2540:	8a e1       	ldi	r24, 0x1A	; 26
    2542:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    2546:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1149
      endGame = true;
    2548:	80 93 71 3b 	sts	0x3B71, r24	; 0x803b71 <endGame>
_delay_ms():
    254c:	af ef       	ldi	r26, 0xFF	; 255
c:\users\gross\appdata\local\arduino15\packages\dxcore\tools\avr-gcc\7.3.0-atmel3.6.1-azduino6\avr\include\util/delay.h:187
    254e:	b3 ed       	ldi	r27, 0xD3	; 211
    2550:	e0 e3       	ldi	r30, 0x30	; 48
    2552:	a1 50       	subi	r26, 0x01	; 1
    2554:	b0 40       	sbci	r27, 0x00	; 0
    2556:	e0 40       	sbci	r30, 0x00	; 0
    2558:	e1 f7       	brne	.-8      	; 0x2552 <main+0x11e0>
    255a:	00 c0       	rjmp	.+0      	; 0x255c <main+0x11ea>
    255c:	00 00       	nop
    255e:	9a cf       	rjmp	.-204    	; 0x2494 <main+0x1122>
gameLedTris():
    2560:	4f e1       	ldi	r20, 0x1F	; 31
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:743
void gameLedTris() {
  uint8_t tetrominoRotation;
  uint8_t tetrominoLastRotation = 0;
  uint8_t randomTetromino = 0;
  uint8_t ledtrisLives = 1;// if a tetromino cant`t go lower than row 2, is game over
  uint16_t actualTetromino[1] = {tetromino1A};// Load tetromino from "character.h"
    2562:	52 e0       	ldi	r21, 0x02	; 2
    2564:	c7 51       	subi	r28, 0x17	; 23
    2566:	df 4f       	sbci	r29, 0xFF	; 255
    2568:	48 83       	st	Y, r20
    256a:	59 83       	std	Y+1, r21	; 0x01
    256c:	c9 5e       	subi	r28, 0xE9	; 233
    256e:	d0 40       	sbci	r29, 0x00	; 0
    2570:	ae 01       	movw	r20, r28
    2572:	4f 5f       	subi	r20, 0xFF	; 255
    2574:	5f 4f       	sbci	r21, 0xFF	; 255
    2576:	2a e0       	ldi	r18, 0x0A	; 10
    2578:	90 e0       	ldi	r25, 0x00	; 0
    257a:	80 e0       	ldi	r24, 0x00	; 0
    257c:	fc 01       	movw	r30, r24
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:760
  bool moveTetrominos = false;// once a line is complete allow remaining tetrominos to get down

  //fills all the tetrominos pos with 0.
  for ( uint8_t row = 0; row < 10; row++ ) {
    for ( uint8_t column = 0; column < 10; column++ ) {
      tetrominoInPos [row][column] = 0;
    257e:	ee 0f       	add	r30, r30
    2580:	ff 1f       	adc	r31, r31
    2582:	e4 0f       	add	r30, r20
    2584:	f5 1f       	adc	r31, r21
    2586:	10 82       	st	Z, r1
    2588:	11 82       	std	Z+1, r1	; 0x01
    258a:	01 96       	adiw	r24, 0x01	; 1
    258c:	8a 30       	cpi	r24, 0x0A	; 10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:759
  bool tetrominoStop = false;// if the piece touch nother or the bottom sceen
  bool moveTetrominos = false;// once a line is complete allow remaining tetrominos to get down

  //fills all the tetrominos pos with 0.
  for ( uint8_t row = 0; row < 10; row++ ) {
    for ( uint8_t column = 0; column < 10; column++ ) {
    258e:	91 05       	cpc	r25, r1
    2590:	a9 f7       	brne	.-22     	; 0x257c <main+0x120a>
    2592:	21 50       	subi	r18, 0x01	; 1
    2594:	4c 5e       	subi	r20, 0xEC	; 236
    2596:	5f 4f       	sbci	r21, 0xFF	; 255
    2598:	21 11       	cpse	r18, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:758
  bool tetrominoMoveLeft = true;
  bool tetrominoStop = false;// if the piece touch nother or the bottom sceen
  bool moveTetrominos = false;// once a line is complete allow remaining tetrominos to get down

  //fills all the tetrominos pos with 0.
  for ( uint8_t row = 0; row < 10; row++ ) {
    259a:	ee cf       	rjmp	.-36     	; 0x2578 <main+0x1206>
    259c:	ce 01       	movw	r24, r28
    259e:	01 96       	adiw	r24, 0x01	; 1
    25a0:	6c 01       	movw	r12, r24
    25a2:	f1 2c       	mov	r15, r1
    25a4:	e1 2c       	mov	r14, r1
    25a6:	f7 01       	movw	r30, r14
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:766
    }
  }

  //creates the left and right walls
  for (uint8_t x = 0; x < 10; x++) {
    tetrominoInPos [x][0] = pgm_read_byte_near (wallLeft + x);
    25a8:	eb 5e       	subi	r30, 0xEB	; 235
    25aa:	fd 4f       	sbci	r31, 0xFD	; 253
    25ac:	84 91       	lpm	r24, Z
    25ae:	90 e0       	ldi	r25, 0x00	; 0
    25b0:	d6 01       	movw	r26, r12
    25b2:	8d 93       	st	X+, r24
    25b4:	9c 93       	st	X, r25
    25b6:	f7 01       	movw	r30, r14
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:767
    tetrominoInPos [x][9] = pgm_read_byte_near (wallRight + x);
    25b8:	e5 5f       	subi	r30, 0xF5	; 245
    25ba:	fd 4f       	sbci	r31, 0xFD	; 253
    25bc:	e4 91       	lpm	r30, Z
    25be:	0e 2f       	mov	r16, r30
    25c0:	10 e0       	ldi	r17, 0x00	; 0
    25c2:	f6 01       	movw	r30, r12
    25c4:	02 8b       	std	Z+18, r16	; 0x12
    25c6:	13 8b       	std	Z+19, r17	; 0x13
    25c8:	20 e5       	ldi	r18, 0x50	; 80
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:768
    strip.setPixelColor(tetrominoInPos [x][0], 0, 0, 80);
    25ca:	40 e0       	ldi	r20, 0x00	; 0
    25cc:	60 e0       	ldi	r22, 0x00	; 0
    25ce:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    25d2:	20 e5       	ldi	r18, 0x50	; 80
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:769
    strip.setPixelColor(tetrominoInPos [x][9], 0, 0, 80);
    25d4:	40 e0       	ldi	r20, 0x00	; 0
    25d6:	60 e0       	ldi	r22, 0x00	; 0
    25d8:	c8 01       	movw	r24, r16
    25da:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    25de:	ff ef       	ldi	r31, 0xFF	; 255
    25e0:	ef 1a       	sub	r14, r31
    25e2:	ff 0a       	sbc	r15, r31
    25e4:	24 e1       	ldi	r18, 0x14	; 20
    25e6:	c2 0e       	add	r12, r18
    25e8:	d1 1c       	adc	r13, r1
    25ea:	3a e0       	ldi	r19, 0x0A	; 10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:765
      tetrominoInPos [row][column] = 0;
    }
  }

  //creates the left and right walls
  for (uint8_t x = 0; x < 10; x++) {
    25ec:	e3 16       	cp	r14, r19
    25ee:	f1 04       	cpc	r15, r1
    25f0:	d1 f6       	brne	.-76     	; 0x25a6 <main+0x1234>
main():
    25f2:	51 2c       	mov	r5, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:754
  int tetrominoLastPos = -6;
  int tetrominoPos = -6;
  bool tetris = false; // if a line is completed
  bool tetrominoMoveRight = true; // checks if moving is allowed
  bool tetrominoMoveLeft = true;
  bool tetrominoStop = false;// if the piece touch nother or the bottom sceen
    25f4:	cb 51       	subi	r28, 0x1B	; 27
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:747
  uint8_t ledtrisLives = 1;// if a tetromino cant`t go lower than row 2, is game over
  uint16_t actualTetromino[1] = {tetromino1A};// Load tetromino from "character.h"
  uint16_t lastTetromino[1] = {tetromino1A};// Last tetromino used
  uint16_t tetrominoInPos [10][10]; // variable to compare if the screen position has a tetromino
  uint16_t ledTrisSpeed = 350;
  uint16_t ledTrisScore = 0;
    25f6:	df 4f       	sbci	r29, 0xFF	; 255
    25f8:	18 82       	st	Y, r1
    25fa:	19 82       	std	Y+1, r1	; 0x01
    25fc:	c5 5e       	subi	r28, 0xE5	; 229
    25fe:	d0 40       	sbci	r29, 0x00	; 0
    2600:	ba ef       	ldi	r27, 0xFA	; 250
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:749
  uint16_t ledTrisTimer = 0;
  int tetrominoLastPos = -6;
    2602:	6b 2e       	mov	r6, r27
    2604:	77 24       	eor	r7, r7
    2606:	7a 94       	dec	r7
    2608:	1a ef       	ldi	r17, 0xFA	; 250
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:750
  int tetrominoPos = -6;
    260a:	e1 2e       	mov	r14, r17
    260c:	ff 24       	eor	r15, r15
    260e:	fa 94       	dec	r15
    2610:	4e e5       	ldi	r20, 0x5E	; 94
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:746
  uint8_t randomTetromino = 0;
  uint8_t ledtrisLives = 1;// if a tetromino cant`t go lower than row 2, is game over
  uint16_t actualTetromino[1] = {tetromino1A};// Load tetromino from "character.h"
  uint16_t lastTetromino[1] = {tetromino1A};// Last tetromino used
  uint16_t tetrominoInPos [10][10]; // variable to compare if the screen position has a tetromino
  uint16_t ledTrisSpeed = 350;
    2612:	51 e0       	ldi	r21, 0x01	; 1
    2614:	cd 51       	subi	r28, 0x1D	; 29
    2616:	df 4f       	sbci	r29, 0xFF	; 255
    2618:	48 83       	st	Y, r20
    261a:	59 83       	std	Y+1, r21	; 0x01
    261c:	c3 5e       	subi	r28, 0xE3	; 227
    261e:	d0 40       	sbci	r29, 0x00	; 0
    2620:	c9 51       	subi	r28, 0x19	; 25
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:748
  uint16_t ledTrisScore = 0;
  uint16_t ledTrisTimer = 0;
    2622:	df 4f       	sbci	r29, 0xFF	; 255
    2624:	18 82       	st	Y, r1
    2626:	19 82       	std	Y+1, r1	; 0x01
    2628:	c7 5e       	subi	r28, 0xE7	; 231
    262a:	d0 40       	sbci	r29, 0x00	; 0
    262c:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:740
}

// Game LedTris code
void gameLedTris() {
  uint8_t tetrominoRotation;
  uint8_t tetrominoLastRotation = 0;
    262e:	c5 51       	subi	r28, 0x15	; 21
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:741
  uint8_t randomTetromino = 0;
    2630:	df 4f       	sbci	r29, 0xFF	; 255
    2632:	18 82       	st	Y, r1
    2634:	cb 5e       	subi	r28, 0xEB	; 235
    2636:	d0 40       	sbci	r29, 0x00	; 0
gameLedTris():
    2638:	21 e0       	ldi	r18, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:775
  }

  // Game code
  while (ledtrisLives > 0) {

    tetrominoRotation = encoder.encoderRead(0, 3, true, 1);
    263a:	41 e0       	ldi	r20, 0x01	; 1
    263c:	63 e0       	ldi	r22, 0x03	; 3
    263e:	80 e0       	ldi	r24, 0x00	; 0
    2640:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]>
    2644:	18 2f       	mov	r17, r24
    2646:	c5 51       	subi	r28, 0x15	; 21
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:776
    actualTetromino[0] = tetromino [randomTetromino][tetrominoRotation];//here the actual plyer controlled tetromino is created
    2648:	df 4f       	sbci	r29, 0xFF	; 255
    264a:	88 81       	ld	r24, Y
    264c:	cb 5e       	subi	r28, 0xEB	; 235
    264e:	d0 40       	sbci	r29, 0x00	; 0
    2650:	54 e0       	ldi	r21, 0x04	; 4
    2652:	85 9f       	mul	r24, r21
    2654:	f0 01       	movw	r30, r0
    2656:	11 24       	eor	r1, r1
    2658:	e1 0f       	add	r30, r17
    265a:	f1 1d       	adc	r31, r1
    265c:	ee 0f       	add	r30, r30
    265e:	ff 1f       	adc	r31, r31
    2660:	e4 54       	subi	r30, 0x44	; 68
    2662:	f9 44       	sbci	r31, 0x49	; 73
    2664:	20 80       	ld	r2, Z
    2666:	31 80       	ldd	r3, Z+1	; 0x01
    2668:	10 17       	cp	r17, r16
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:778

    if (tetrominoRotation != tetrominoLastRotation) beep(40);
    266a:	21 f0       	breq	.+8      	; 0x2674 <main+0x1302>
    266c:	88 e2       	ldi	r24, 0x28	; 40
    266e:	90 e0       	ldi	r25, 0x00	; 0
    2670:	0e 94 58 03 	call	0x6b0	; 0x6b0 <beep(unsigned int)>
    2674:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:782

    // Advace time all the game speed is cotolled here
    //only move down the tetromino if there isn`t any obstacle
    if (((interruptTimer - ledTrisTimer) > ledTrisSpeed) && (tetrominoPos < 99) && !tetrominoStop) {
    2678:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    267c:	c9 51       	subi	r28, 0x19	; 25
    267e:	df 4f       	sbci	r29, 0xFF	; 255
    2680:	a8 81       	ld	r26, Y
    2682:	b9 81       	ldd	r27, Y+1	; 0x01
    2684:	c7 5e       	subi	r28, 0xE7	; 231
    2686:	d0 40       	sbci	r29, 0x00	; 0
    2688:	8a 1b       	sub	r24, r26
    268a:	9b 0b       	sbc	r25, r27
    268c:	cd 51       	subi	r28, 0x1D	; 29
    268e:	df 4f       	sbci	r29, 0xFF	; 255
    2690:	e8 81       	ld	r30, Y
    2692:	f9 81       	ldd	r31, Y+1	; 0x01
    2694:	c3 5e       	subi	r28, 0xE3	; 227
    2696:	d0 40       	sbci	r29, 0x00	; 0
    2698:	e8 17       	cp	r30, r24
    269a:	f9 07       	cpc	r31, r25
    269c:	98 f4       	brcc	.+38     	; 0x26c4 <main+0x1352>
    269e:	f3 e6       	ldi	r31, 0x63	; 99
    26a0:	ef 16       	cp	r14, r31
    26a2:	f1 04       	cpc	r15, r1
    26a4:	7c f4       	brge	.+30     	; 0x26c4 <main+0x1352>
    26a6:	51 10       	cpse	r5, r1
    26a8:	0d c0       	rjmp	.+26     	; 0x26c4 <main+0x1352>
    26aa:	20 91 75 3b 	lds	r18, 0x3B75	; 0x803b75 <interruptTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:783
      ledTrisTimer = interruptTimer;
    26ae:	30 91 76 3b 	lds	r19, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    26b2:	c9 51       	subi	r28, 0x19	; 25
    26b4:	df 4f       	sbci	r29, 0xFF	; 255
    26b6:	28 83       	st	Y, r18
    26b8:	39 83       	std	Y+1, r19	; 0x01
    26ba:	c7 5e       	subi	r28, 0xE7	; 231
    26bc:	d0 40       	sbci	r29, 0x00	; 0
    26be:	3a e0       	ldi	r19, 0x0A	; 10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:784
      tetrominoPos += 10;
    26c0:	e3 0e       	add	r14, r19
    26c2:	f1 1c       	adc	r15, r1
main():
    26c4:	51 2c       	mov	r5, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:787
    }
    //we asume that the tetromino can`t move
    tetrominoStop = false;
    26c6:	b4 2c       	mov	r11, r4
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:789
    tetrominoMoveRight = true;
    tetrominoMoveLeft = true;
    26c8:	c4 2c       	mov	r12, r4
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:788
      ledTrisTimer = interruptTimer;
      tetrominoPos += 10;
    }
    //we asume that the tetromino can`t move
    tetrominoStop = false;
    tetrominoMoveRight = true;
    26ca:	41 e0       	ldi	r20, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:792
    tetrominoMoveLeft = true;

    //All the math to allow or not the player to move the tetromino
    for (uint8_t x = 1; x < pgm_read_byte_near (actualTetromino[0] + 0); x++) {// reads all the leds forming the tetromino position
    26cc:	c3 51       	subi	r28, 0x13	; 19
    26ce:	df 4f       	sbci	r29, 0xFF	; 255
    26d0:	48 83       	st	Y, r20
    26d2:	cd 5e       	subi	r28, 0xED	; 237
    26d4:	d0 40       	sbci	r29, 0x00	; 0
    26d6:	dd 24       	eor	r13, r13
    26d8:	d3 94       	inc	r13
gameLedTris():
    26da:	f1 01       	movw	r30, r2
    26dc:	84 91       	lpm	r24, Z
    26de:	c3 51       	subi	r28, 0x13	; 19
    26e0:	df 4f       	sbci	r29, 0xFF	; 255
    26e2:	28 81       	ld	r18, Y
    26e4:	cd 5e       	subi	r28, 0xED	; 237
    26e6:	d0 40       	sbci	r29, 0x00	; 0
    26e8:	28 17       	cp	r18, r24
    26ea:	08 f0       	brcs	.+2      	; 0x26ee <main+0x137c>
    26ec:	68 c0       	rjmp	.+208    	; 0x27be <main+0x144c>
    26ee:	ae 01       	movw	r20, r28
    26f0:	4f 5f       	subi	r20, 0xFF	; 255
    26f2:	5f 4f       	sbci	r21, 0xFF	; 255
    26f4:	4a 01       	movw	r8, r20
    26f6:	5a e0       	ldi	r21, 0x0A	; 10
    26f8:	c1 51       	subi	r28, 0x11	; 17
    26fa:	df 4f       	sbci	r29, 0xFF	; 255
    26fc:	58 83       	st	Y, r21
    26fe:	cf 5e       	subi	r28, 0xEF	; 239
    2700:	d0 40       	sbci	r29, 0x00	; 0
    2702:	e2 0f       	add	r30, r18
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:798

      for ( uint8_t row = 0; row < 10; row++ ) {
        for ( uint8_t column = 0; column < 10; column++ ) {

          // allow or not to move left and right
          if ((pgm_read_byte_near (actualTetromino[0] + x) + (tetrominoPos - 1)) == tetrominoInPos [row][column]) tetrominoMoveLeft = false;
    2704:	f1 1d       	adc	r31, r1
    2706:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:792
    tetrominoStop = false;
    tetrominoMoveRight = true;
    tetrominoMoveLeft = true;

    //All the math to allow or not the player to move the tetromino
    for (uint8_t x = 1; x < pgm_read_byte_near (actualTetromino[0] + 0); x++) {// reads all the leds forming the tetromino position
    2708:	20 e0       	ldi	r18, 0x00	; 0
    270a:	64 91       	lpm	r22, Z
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:798

      for ( uint8_t row = 0; row < 10; row++ ) {
        for ( uint8_t column = 0; column < 10; column++ ) {

          // allow or not to move left and right
          if ((pgm_read_byte_near (actualTetromino[0] + x) + (tetrominoPos - 1)) == tetrominoInPos [row][column]) tetrominoMoveLeft = false;
    270c:	a7 01       	movw	r20, r14
    270e:	41 50       	subi	r20, 0x01	; 1
    2710:	51 09       	sbc	r21, r1
    2712:	c9 01       	movw	r24, r18
    2714:	88 0f       	add	r24, r24
    2716:	99 1f       	adc	r25, r25
    2718:	88 0d       	add	r24, r8
    271a:	99 1d       	adc	r25, r9
    271c:	dc 01       	movw	r26, r24
    271e:	8d 91       	ld	r24, X+
    2720:	9c 91       	ld	r25, X
    2722:	64 0f       	add	r22, r20
    2724:	75 2f       	mov	r23, r21
    2726:	71 1d       	adc	r23, r1
    2728:	68 17       	cp	r22, r24
    272a:	79 07       	cpc	r23, r25
    272c:	09 f4       	brne	.+2      	; 0x2730 <main+0x13be>
main():
    272e:	b1 2c       	mov	r11, r1
gameLedTris():
    2730:	a4 90       	lpm	r10, Z
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:800

          if ((pgm_read_byte_near (actualTetromino[0] + x) + (tetrominoPos + 1)) == tetrominoInPos [row][column]) tetrominoMoveRight = false;
    2732:	b7 01       	movw	r22, r14
    2734:	6f 5f       	subi	r22, 0xFF	; 255
    2736:	7f 4f       	sbci	r23, 0xFF	; 255
    2738:	6a 0d       	add	r22, r10
    273a:	71 1d       	adc	r23, r1
    273c:	86 17       	cp	r24, r22
    273e:	97 07       	cpc	r25, r23
    2740:	09 f4       	brne	.+2      	; 0x2744 <main+0x13d2>
    2742:	eb c5       	rjmp	.+3030   	; 0x331a <main+0x1fa8>
    2744:	10 17       	cp	r17, r16
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:802

          if (tetrominoRotation != tetrominoLastRotation) {// only if rotation happen the tetromino is checked and positioned in a valid place
    2746:	09 f4       	brne	.+2      	; 0x274a <main+0x13d8>
    2748:	eb c5       	rjmp	.+3030   	; 0x3320 <main+0x1fae>
    274a:	c1 10       	cpse	r12, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:804

            if (!tetrominoMoveRight) {
    274c:	08 c0       	rjmp	.+16     	; 0x275e <main+0x13ec>
    274e:	64 91       	lpm	r22, Z
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:805
              if ((pgm_read_byte_near (actualTetromino[0] + x) + tetrominoPos) == tetrominoInPos [row][column]) {
    2750:	6e 0d       	add	r22, r14
    2752:	7f 2d       	mov	r23, r15
    2754:	71 1d       	adc	r23, r1
    2756:	c1 2c       	mov	r12, r1
    2758:	86 17       	cp	r24, r22
    275a:	97 07       	cpc	r25, r23
    275c:	71 f1       	breq	.+92     	; 0x27ba <main+0x1448>
    275e:	b1 10       	cpse	r11, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:810
                tetrominoPos --;
              }
            }

            if (!tetrominoMoveLeft) {
    2760:	0a c0       	rjmp	.+20     	; 0x2776 <main+0x1404>
    2762:	44 91       	lpm	r20, Z
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:811
              if ((pgm_read_byte_near (actualTetromino[0] + x) + tetrominoPos) == tetrominoInPos [row][column]) tetrominoPos++;
    2764:	4e 0d       	add	r20, r14
    2766:	5f 2d       	mov	r21, r15
    2768:	51 1d       	adc	r21, r1
    276a:	84 17       	cp	r24, r20
    276c:	95 07       	cpc	r25, r21
    276e:	19 f4       	brne	.+6      	; 0x2776 <main+0x1404>
    2770:	bf ef       	ldi	r27, 0xFF	; 255
    2772:	eb 1a       	sub	r14, r27
    2774:	fb 0a       	sbc	r15, r27
    2776:	2f 5f       	subi	r18, 0xFF	; 255
    2778:	3f 4f       	sbci	r19, 0xFF	; 255
    277a:	2a 30       	cpi	r18, 0x0A	; 10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:795

    //All the math to allow or not the player to move the tetromino
    for (uint8_t x = 1; x < pgm_read_byte_near (actualTetromino[0] + 0); x++) {// reads all the leds forming the tetromino position

      for ( uint8_t row = 0; row < 10; row++ ) {
        for ( uint8_t column = 0; column < 10; column++ ) {
    277c:	31 05       	cpc	r19, r1
    277e:	09 f0       	breq	.+2      	; 0x2782 <main+0x1410>
    2780:	c4 cf       	rjmp	.-120    	; 0x270a <main+0x1398>
    2782:	c1 51       	subi	r28, 0x11	; 17
    2784:	df 4f       	sbci	r29, 0xFF	; 255
    2786:	28 81       	ld	r18, Y
    2788:	cf 5e       	subi	r28, 0xEF	; 239
    278a:	d0 40       	sbci	r29, 0x00	; 0
    278c:	21 50       	subi	r18, 0x01	; 1
    278e:	c1 51       	subi	r28, 0x11	; 17
    2790:	df 4f       	sbci	r29, 0xFF	; 255
    2792:	28 83       	st	Y, r18
    2794:	cf 5e       	subi	r28, 0xEF	; 239
    2796:	d0 40       	sbci	r29, 0x00	; 0
    2798:	34 e1       	ldi	r19, 0x14	; 20
    279a:	83 0e       	add	r8, r19
    279c:	91 1c       	adc	r9, r1
    279e:	21 11       	cpse	r18, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:794
    tetrominoMoveLeft = true;

    //All the math to allow or not the player to move the tetromino
    for (uint8_t x = 1; x < pgm_read_byte_near (actualTetromino[0] + 0); x++) {// reads all the leds forming the tetromino position

      for ( uint8_t row = 0; row < 10; row++ ) {
    27a0:	b2 cf       	rjmp	.-156    	; 0x2706 <main+0x1394>
    27a2:	c3 51       	subi	r28, 0x13	; 19
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:792
    tetrominoStop = false;
    tetrominoMoveRight = true;
    tetrominoMoveLeft = true;

    //All the math to allow or not the player to move the tetromino
    for (uint8_t x = 1; x < pgm_read_byte_near (actualTetromino[0] + 0); x++) {// reads all the leds forming the tetromino position
    27a4:	df 4f       	sbci	r29, 0xFF	; 255
    27a6:	48 81       	ld	r20, Y
    27a8:	cd 5e       	subi	r28, 0xED	; 237
    27aa:	d0 40       	sbci	r29, 0x00	; 0
    27ac:	4f 5f       	subi	r20, 0xFF	; 255
    27ae:	c3 51       	subi	r28, 0x13	; 19
    27b0:	df 4f       	sbci	r29, 0xFF	; 255
    27b2:	48 83       	st	Y, r20
    27b4:	cd 5e       	subi	r28, 0xED	; 237
    27b6:	d0 40       	sbci	r29, 0x00	; 0
    27b8:	90 cf       	rjmp	.-224    	; 0x26da <main+0x1368>
main():
    27ba:	7a 01       	movw	r14, r20
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:806

          if (tetrominoRotation != tetrominoLastRotation) {// only if rotation happen the tetromino is checked and positioned in a valid place

            if (!tetrominoMoveRight) {
              if ((pgm_read_byte_near (actualTetromino[0] + x) + tetrominoPos) == tetrominoInPos [row][column]) {
                tetrominoPos --;
    27bc:	d0 cf       	rjmp	.-96     	; 0x275e <main+0x13ec>
gameLedTris():
    27be:	dd 20       	and	r13, r13
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:829
          }
        }
      }
    }

    if (ledtrisLives == 0)  break; //stops the while loop
    27c0:	09 f4       	brne	.+2      	; 0x27c4 <main+0x1452>
    27c2:	36 c1       	rjmp	.+620    	; 0x2a30 <main+0x16be>
    27c4:	10 17       	cp	r17, r16
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:832

    //The tetromino3B looks odd if not moved one place when rotated
    if (tetrominoRotation != tetrominoLastRotation && actualTetromino[0] == tetromino3B && tetrominoMoveLeft) tetrominoPos--;
    27c6:	09 f4       	brne	.+2      	; 0x27ca <main+0x1458>
    27c8:	c6 c5       	rjmp	.+2956   	; 0x3356 <main+0x1fe4>
    27ca:	57 e0       	ldi	r21, 0x07	; 7
    27cc:	25 16       	cp	r2, r21
    27ce:	52 e0       	ldi	r21, 0x02	; 2
    27d0:	35 06       	cpc	r3, r21
    27d2:	09 f0       	breq	.+2      	; 0x27d6 <main+0x1464>
    27d4:	c5 c5       	rjmp	.+2954   	; 0x3360 <main+0x1fee>
    27d6:	bb 20       	and	r11, r11
    27d8:	19 f0       	breq	.+6      	; 0x27e0 <main+0x146e>
    27da:	81 e0       	ldi	r24, 0x01	; 1
    27dc:	e8 1a       	sub	r14, r24
    27de:	f1 08       	sbc	r15, r1
    27e0:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:838

    if (tetrominoRotation != tetrominoLastRotation && actualTetromino[0] == tetromino3A && tetrominoMoveRight) tetrominoPos++;

    //Here it draws the screen
    if (tetrominoPos != tetrominoLastPos || tetrominoRotation != tetrominoLastRotation) {
      drawCharacter(tetrominoLastPos, lastTetromino[0], 0, 0, 0);
    27e2:	20 e0       	ldi	r18, 0x00	; 0
    27e4:	40 e0       	ldi	r20, 0x00	; 0
    27e6:	c7 51       	subi	r28, 0x17	; 23
    27e8:	df 4f       	sbci	r29, 0xFF	; 255
    27ea:	68 81       	ld	r22, Y
    27ec:	79 81       	ldd	r23, Y+1	; 0x01
    27ee:	c9 5e       	subi	r28, 0xE9	; 233
    27f0:	d0 40       	sbci	r29, 0x00	; 0
    27f2:	86 2d       	mov	r24, r6
    27f4:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    27f8:	20 e5       	ldi	r18, 0x50	; 80
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:842
      tetrominoLastPos = tetrominoPos;
      tetrominoLastRotation = tetrominoRotation;
      lastTetromino[0] = actualTetromino[0];
      drawCharacter(tetrominoPos, actualTetromino[0], 0, 80, 0);
    27fa:	40 e0       	ldi	r20, 0x00	; 0
    27fc:	b1 01       	movw	r22, r2
    27fe:	8e 2d       	mov	r24, r14
    2800:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
main():
    2804:	c7 51       	subi	r28, 0x17	; 23
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:841
    //Here it draws the screen
    if (tetrominoPos != tetrominoLastPos || tetrominoRotation != tetrominoLastRotation) {
      drawCharacter(tetrominoLastPos, lastTetromino[0], 0, 0, 0);
      tetrominoLastPos = tetrominoPos;
      tetrominoLastRotation = tetrominoRotation;
      lastTetromino[0] = actualTetromino[0];
    2806:	df 4f       	sbci	r29, 0xFF	; 255
    2808:	28 82       	st	Y, r2
    280a:	39 82       	std	Y+1, r3	; 0x01
    280c:	c9 5e       	subi	r28, 0xE9	; 233
    280e:	d0 40       	sbci	r29, 0x00	; 0
gameLedTris():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:842
      drawCharacter(tetrominoPos, actualTetromino[0], 0, 80, 0);
    2810:	37 01       	movw	r6, r14
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:847
    }

    //All calcultions done when a tetromino stops moving

    if (tetrominoStop && LEFTHIGH && RIGHTHIGH) {//Some conditions have to be met before stoping so some time is given to last moment moves
    2812:	55 20       	and	r5, r5
    2814:	09 f4       	brne	.+2      	; 0x2818 <main+0x14a6>
    2816:	31 c1       	rjmp	.+610    	; 0x2a7a <main+0x1708>
    2818:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <encoderDir+0x7f4d24>
    281c:	82 ff       	sbrs	r24, 2
    281e:	2d c1       	rjmp	.+602    	; 0x2a7a <main+0x1708>
    2820:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <encoderDir+0x7f4d24>
    2824:	81 ff       	sbrs	r24, 1
    2826:	29 c1       	rjmp	.+594    	; 0x2a7a <main+0x1708>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:848
      beep(150);
    2828:	86 e9       	ldi	r24, 0x96	; 150
    282a:	90 e0       	ldi	r25, 0x00	; 0
    282c:	0e 94 58 03 	call	0x6b0	; 0x6b0 <beep(unsigned int)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:853
      for (uint8_t x = 1; x < pgm_read_byte_near (actualTetromino[0] + 0); x++) {// reads all tetromino leds position
        uint8_t valueDecimal = (pgm_read_byte_near (actualTetromino[0] + x) + tetrominoPos) / 10 ;// takes the decimal of the position for example: from 91 takes the 9
        uint8_t valueUnits = pgm_read_byte_near (actualTetromino[0] + x) + tetrominoPos;// same as above but takes the units

        for (uint8_t y = 0; y < (valueDecimal * 10) ; y++) {// here actually get the units
    2830:	0a e0       	ldi	r16, 0x0A	; 10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:849

    //All calcultions done when a tetromino stops moving

    if (tetrominoStop && LEFTHIGH && RIGHTHIGH) {//Some conditions have to be met before stoping so some time is given to last moment moves
      beep(150);
      for (uint8_t x = 1; x < pgm_read_byte_near (actualTetromino[0] + 0); x++) {// reads all tetromino leds position
    2832:	f1 01       	movw	r30, r2
    2834:	84 91       	lpm	r24, Z
    2836:	d8 16       	cp	r13, r24
    2838:	08 f0       	brcs	.+2      	; 0x283c <main+0x14ca>
    283a:	35 c0       	rjmp	.+106    	; 0x28a6 <main+0x1534>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:850
        uint8_t valueDecimal = (pgm_read_byte_near (actualTetromino[0] + x) + tetrominoPos) / 10 ;// takes the decimal of the position for example: from 91 takes the 9
    283c:	ed 0d       	add	r30, r13
    283e:	f1 1d       	adc	r31, r1
    2840:	84 91       	lpm	r24, Z
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:851
        uint8_t valueUnits = pgm_read_byte_near (actualTetromino[0] + x) + tetrominoPos;// same as above but takes the units
    2842:	24 91       	lpm	r18, Z
    2844:	26 0d       	add	r18, r6
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:850
    //All calcultions done when a tetromino stops moving

    if (tetrominoStop && LEFTHIGH && RIGHTHIGH) {//Some conditions have to be met before stoping so some time is given to last moment moves
      beep(150);
      for (uint8_t x = 1; x < pgm_read_byte_near (actualTetromino[0] + 0); x++) {// reads all tetromino leds position
        uint8_t valueDecimal = (pgm_read_byte_near (actualTetromino[0] + x) + tetrominoPos) / 10 ;// takes the decimal of the position for example: from 91 takes the 9
    2846:	86 0d       	add	r24, r6
    2848:	97 2d       	mov	r25, r7
    284a:	91 1d       	adc	r25, r1
    284c:	6a e0       	ldi	r22, 0x0A	; 10
    284e:	70 e0       	ldi	r23, 0x00	; 0
    2850:	0a d7       	rcall	.+3604   	; 0x3666 <__divmodhi4>
    2852:	77 27       	eor	r23, r23
    2854:	06 9f       	mul	r16, r22
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:853
        uint8_t valueUnits = pgm_read_byte_near (actualTetromino[0] + x) + tetrominoPos;// same as above but takes the units

        for (uint8_t y = 0; y < (valueDecimal * 10) ; y++) {// here actually get the units
    2856:	c0 01       	movw	r24, r0
    2858:	07 9f       	mul	r16, r23
    285a:	90 0d       	add	r25, r0
    285c:	11 24       	eor	r1, r1
main():
    285e:	40 e0       	ldi	r20, 0x00	; 0
    2860:	32 2f       	mov	r19, r18
    2862:	34 1b       	sub	r19, r20
gameLedTris():
    2864:	48 17       	cp	r20, r24
    2866:	19 06       	cpc	r1, r25
    2868:	14 f4       	brge	.+4      	; 0x286e <main+0x14fc>
    286a:	4f 5f       	subi	r20, 0xFF	; 255
    286c:	f9 cf       	rjmp	.-14     	; 0x2860 <main+0x14ee>
    286e:	84 91       	lpm	r24, Z
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:856
          valueUnits--;
        }
        tetrominoInPos [valueDecimal][valueUnits] = (pgm_read_byte_near (actualTetromino[0] + x) + tetrominoPos);// stores the tetromino position in an array to know the position cant`t be used
    2870:	86 0d       	add	r24, r6
    2872:	97 2d       	mov	r25, r7
    2874:	91 1d       	adc	r25, r1
    2876:	06 9f       	mul	r16, r22
    2878:	f0 01       	movw	r30, r0
    287a:	07 9f       	mul	r16, r23
    287c:	f0 0d       	add	r31, r0
    287e:	11 24       	eor	r1, r1
    2880:	e3 0f       	add	r30, r19
    2882:	f1 1d       	adc	r31, r1
    2884:	ee 0f       	add	r30, r30
    2886:	ff 1f       	adc	r31, r31
    2888:	21 e0       	ldi	r18, 0x01	; 1
    288a:	30 e0       	ldi	r19, 0x00	; 0
    288c:	2c 0f       	add	r18, r28
    288e:	3d 1f       	adc	r19, r29
    2890:	e2 0f       	add	r30, r18
    2892:	f3 1f       	adc	r31, r19
    2894:	80 83       	st	Z, r24
    2896:	91 83       	std	Z+1, r25	; 0x01
    2898:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:857
        strip.setPixelColor(tetrominoInPos [valueDecimal][valueUnits], 80, 0, 0);
    289a:	40 e0       	ldi	r20, 0x00	; 0
    289c:	60 e5       	ldi	r22, 0x50	; 80
    289e:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    28a2:	d3 94       	inc	r13
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:849

    //All calcultions done when a tetromino stops moving

    if (tetrominoStop && LEFTHIGH && RIGHTHIGH) {//Some conditions have to be met before stoping so some time is given to last moment moves
      beep(150);
      for (uint8_t x = 1; x < pgm_read_byte_near (actualTetromino[0] + 0); x++) {// reads all tetromino leds position
    28a4:	c6 cf       	rjmp	.-116    	; 0x2832 <main+0x14c0>
    28a6:	03 e0       	ldi	r16, 0x03	; 3
    28a8:	6e 01       	movw	r12, r28
    28aa:	35 eb       	ldi	r19, 0xB5	; 181
    28ac:	c3 0e       	add	r12, r19
    28ae:	d1 1c       	adc	r13, r1
    28b0:	71 2c       	mov	r7, r1
    28b2:	76 01       	movw	r14, r12
main():
    28b4:	95 2c       	mov	r9, r5
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:864

      //If a line is complete the tetrominos above it are moved one space dow, the check is done 3 times because the tetrominos max height is 3 leds so the player can complete 3 lines at once
      for ( uint8_t repeatTetrisCheck = 0; repeatTetrisCheck < 3; repeatTetrisCheck++ ) {

        for ( uint8_t row = 9; row > 0; row-- ) {
          tetris = true;
    28b6:	48 e0       	ldi	r20, 0x08	; 8
    28b8:	84 2e       	mov	r8, r20
gameLedTris():
    28ba:	77 20       	and	r7, r7
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:868

          for ( uint8_t column = 1; column < 9; column++ ) {

            if (moveTetrominos && tetrominoInPos [row][column] != 0) {
    28bc:	09 f1       	breq	.+66     	; 0x2900 <main+0x158e>
    28be:	d7 01       	movw	r26, r14
    28c0:	12 96       	adiw	r26, 0x02	; 2
    28c2:	8d 91       	ld	r24, X+
    28c4:	9c 91       	ld	r25, X
    28c6:	00 97       	sbiw	r24, 0x00	; 0
    28c8:	d9 f0       	breq	.+54     	; 0x2900 <main+0x158e>
    28ca:	5c 01       	movw	r10, r24
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:869
              tetrominoInPos [(row + 1)][column] = (tetrominoInPos [row][column] + 10);
    28cc:	ba e0       	ldi	r27, 0x0A	; 10
    28ce:	ab 0e       	add	r10, r27
    28d0:	b1 1c       	adc	r11, r1
    28d2:	f7 01       	movw	r30, r14
    28d4:	a6 8a       	std	Z+22, r10	; 0x16
    28d6:	b7 8a       	std	Z+23, r11	; 0x17
    28d8:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:870
              strip.setPixelColor(tetrominoInPos [row][column], 0, 0, 0);
    28da:	40 e0       	ldi	r20, 0x00	; 0
    28dc:	60 e0       	ldi	r22, 0x00	; 0
    28de:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    28e2:	80 e3       	ldi	r24, 0x30	; 48
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:871
              beep(30000);
    28e4:	95 e7       	ldi	r25, 0x75	; 117
    28e6:	0e 94 58 03 	call	0x6b0	; 0x6b0 <beep(unsigned int)>
    28ea:	20 e5       	ldi	r18, 0x50	; 80
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:872
              strip.setPixelColor(tetrominoInPos [(row + 1)][column], 0, 0, 80);
    28ec:	40 e0       	ldi	r20, 0x00	; 0
    28ee:	60 e0       	ldi	r22, 0x00	; 0
    28f0:	c5 01       	movw	r24, r10
    28f2:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    28f6:	d7 01       	movw	r26, r14
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:873
              tetrominoInPos [row][column] = 0;
    28f8:	12 96       	adiw	r26, 0x02	; 2
    28fa:	1d 92       	st	X+, r1
    28fc:	1c 92       	st	X, r1
    28fe:	13 97       	sbiw	r26, 0x03	; 3
    2900:	f7 01       	movw	r30, r14
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:875
            }
            if (tetrominoInPos [row][column] == 0)   tetris = false;// if there is nothig on the position it stops because the line isnt`t complete
    2902:	82 81       	ldd	r24, Z+2	; 0x02
    2904:	93 81       	ldd	r25, Z+3	; 0x03
    2906:	89 2b       	or	r24, r25
    2908:	09 f4       	brne	.+2      	; 0x290c <main+0x159a>
main():
    290a:	91 2c       	mov	r9, r1
    290c:	8a 94       	dec	r8
    290e:	f2 e0       	ldi	r31, 0x02	; 2
    2910:	ef 0e       	add	r14, r31
    2912:	f1 1c       	adc	r15, r1
gameLedTris():
    2914:	81 10       	cpse	r8, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:866
      for ( uint8_t repeatTetrisCheck = 0; repeatTetrisCheck < 3; repeatTetrisCheck++ ) {

        for ( uint8_t row = 9; row > 0; row-- ) {
          tetris = true;

          for ( uint8_t column = 1; column < 9; column++ ) {
    2916:	d1 cf       	rjmp	.-94     	; 0x28ba <main+0x1548>
    2918:	99 20       	and	r9, r9
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:878
              tetrominoInPos [row][column] = 0;
            }
            if (tetrominoInPos [row][column] == 0)   tetris = false;// if there is nothig on the position it stops because the line isnt`t complete
          }

          if (tetris) {
    291a:	b1 f1       	breq	.+108    	; 0x2988 <main+0x1616>
    291c:	cd 51       	subi	r28, 0x1D	; 29
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:881
            moveTetrominos = true;

            if (ledTrisSpeed > 150) ledTrisSpeed -= 10; // make game faster
    291e:	df 4f       	sbci	r29, 0xFF	; 255
    2920:	28 81       	ld	r18, Y
    2922:	39 81       	ldd	r19, Y+1	; 0x01
    2924:	c3 5e       	subi	r28, 0xE3	; 227
    2926:	d0 40       	sbci	r29, 0x00	; 0
    2928:	27 39       	cpi	r18, 0x97	; 151
    292a:	31 05       	cpc	r19, r1
    292c:	40 f0       	brcs	.+16     	; 0x293e <main+0x15cc>
    292e:	2a 50       	subi	r18, 0x0A	; 10
    2930:	31 09       	sbc	r19, r1
    2932:	cd 51       	subi	r28, 0x1D	; 29
    2934:	df 4f       	sbci	r29, 0xFF	; 255
    2936:	28 83       	st	Y, r18
    2938:	39 83       	std	Y+1, r19	; 0x01
    293a:	c3 5e       	subi	r28, 0xE3	; 227
    293c:	d0 40       	sbci	r29, 0x00	; 0
    293e:	cb 51       	subi	r28, 0x1B	; 27
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:884

            if (repeatTetrisCheck < 3) { // if 3 rows are completed, more points
              ledTrisScore ++;
    2940:	df 4f       	sbci	r29, 0xFF	; 255
    2942:	48 81       	ld	r20, Y
    2944:	59 81       	ldd	r21, Y+1	; 0x01
    2946:	c5 5e       	subi	r28, 0xE5	; 229
    2948:	d0 40       	sbci	r29, 0x00	; 0
    294a:	4f 5f       	subi	r20, 0xFF	; 255
    294c:	5f 4f       	sbci	r21, 0xFF	; 255
    294e:	cb 51       	subi	r28, 0x1B	; 27
    2950:	df 4f       	sbci	r29, 0xFF	; 255
    2952:	48 83       	st	Y, r20
    2954:	59 83       	std	Y+1, r21	; 0x01
    2956:	c5 5e       	subi	r28, 0xE5	; 229
    2958:	d0 40       	sbci	r29, 0x00	; 0
    295a:	76 01       	movw	r14, r12
    295c:	52 e0       	ldi	r21, 0x02	; 2
    295e:	e5 0e       	add	r14, r21
    2960:	f1 1c       	adc	r15, r1
    2962:	38 e0       	ldi	r19, 0x08	; 8
    2964:	b3 2e       	mov	r11, r19
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:889
            } else {
              ledTrisScore += 4;
            }
            for ( uint8_t tetrisColumn = 1; tetrisColumn < 9; tetrisColumn++ ) {
              strip.setPixelColor(tetrominoInPos [row][tetrisColumn], 0, 0, 0);
    2966:	20 e0       	ldi	r18, 0x00	; 0
    2968:	40 e0       	ldi	r20, 0x00	; 0
    296a:	60 e0       	ldi	r22, 0x00	; 0
    296c:	d7 01       	movw	r26, r14
    296e:	8d 91       	ld	r24, X+
    2970:	9d 91       	ld	r25, X+
    2972:	7d 01       	movw	r14, r26
    2974:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:890
              tetrominoInPos [row][tetrisColumn] = 0;
    2978:	f7 01       	movw	r30, r14
    297a:	32 97       	sbiw	r30, 0x02	; 2
    297c:	10 82       	st	Z, r1
    297e:	11 82       	std	Z+1, r1	; 0x01
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:888
            if (repeatTetrisCheck < 3) { // if 3 rows are completed, more points
              ledTrisScore ++;
            } else {
              ledTrisScore += 4;
            }
            for ( uint8_t tetrisColumn = 1; tetrisColumn < 9; tetrisColumn++ ) {
    2980:	ba 94       	dec	r11
    2982:	b1 10       	cpse	r11, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:879
            }
            if (tetrominoInPos [row][column] == 0)   tetris = false;// if there is nothig on the position it stops because the line isnt`t complete
          }

          if (tetris) {
            moveTetrominos = true;
    2984:	f0 cf       	rjmp	.-32     	; 0x2966 <main+0x15f4>
main():
    2986:	79 2c       	mov	r7, r9
    2988:	b4 e1       	ldi	r27, 0x14	; 20
    298a:	cb 1a       	sub	r12, r27
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:863
      }

      //If a line is complete the tetrominos above it are moved one space dow, the check is done 3 times because the tetrominos max height is 3 leds so the player can complete 3 lines at once
      for ( uint8_t repeatTetrisCheck = 0; repeatTetrisCheck < 3; repeatTetrisCheck++ ) {

        for ( uint8_t row = 9; row > 0; row-- ) {
    298c:	d1 08       	sbc	r13, r1
gameLedTris():
    298e:	cf 51       	subi	r28, 0x1F	; 31
    2990:	df 4f       	sbci	r29, 0xFF	; 255
    2992:	e8 81       	ld	r30, Y
    2994:	f9 81       	ldd	r31, Y+1	; 0x01
    2996:	c1 5e       	subi	r28, 0xE1	; 225
    2998:	d0 40       	sbci	r29, 0x00	; 0
    299a:	ec 15       	cp	r30, r12
    299c:	fd 05       	cpc	r31, r13
    299e:	09 f0       	breq	.+2      	; 0x29a2 <main+0x1630>
    29a0:	88 cf       	rjmp	.-240    	; 0x28b2 <main+0x1540>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:861
        tetrominoInPos [valueDecimal][valueUnits] = (pgm_read_byte_near (actualTetromino[0] + x) + tetrominoPos);// stores the tetromino position in an array to know the position cant`t be used
        strip.setPixelColor(tetrominoInPos [valueDecimal][valueUnits], 80, 0, 0);
      }

      //If a line is complete the tetrominos above it are moved one space dow, the check is done 3 times because the tetrominos max height is 3 leds so the player can complete 3 lines at once
      for ( uint8_t repeatTetrisCheck = 0; repeatTetrisCheck < 3; repeatTetrisCheck++ ) {
    29a2:	01 50       	subi	r16, 0x01	; 1
    29a4:	09 f0       	breq	.+2      	; 0x29a8 <main+0x1636>
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/WMath.cpp:38
    29a6:	80 cf       	rjmp	.-256    	; 0x28a8 <main+0x1536>
random():
    29a8:	70 d5       	rcall	.+2784   	; 0x348a <random>
    29aa:	25 e0       	ldi	r18, 0x05	; 5
    29ac:	30 e0       	ldi	r19, 0x00	; 0
    29ae:	40 e0       	ldi	r20, 0x00	; 0
    29b0:	50 e0       	ldi	r21, 0x00	; 0
    29b2:	dc d5       	rcall	.+3000   	; 0x356c <__divmodsi4>
gameLedTris():
    29b4:	c5 51       	subi	r28, 0x15	; 21
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:899
        moveTetrominos = false;
      }

      // the new tetromino is generated and positioned
      tetrominoPos = -6;
      randomTetromino = random(5);
    29b6:	df 4f       	sbci	r29, 0xFF	; 255
    29b8:	68 83       	st	Y, r22
    29ba:	cb 5e       	subi	r28, 0xEB	; 235
    29bc:	d0 40       	sbci	r29, 0x00	; 0
main():
    29be:	9a ef       	ldi	r25, 0xFA	; 250
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:900
      tetrominoLastPos = tetrominoPos;
    29c0:	69 2e       	mov	r6, r25
    29c2:	77 24       	eor	r7, r7
    29c4:	7a 94       	dec	r7
    29c6:	2a ef       	ldi	r18, 0xFA	; 250
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:898
        }
        moveTetrominos = false;
      }

      // the new tetromino is generated and positioned
      tetrominoPos = -6;
    29c8:	e2 2e       	mov	r14, r18
    29ca:	ff 24       	eor	r15, r15
    29cc:	fa 94       	dec	r15
gameLedTris():
    29ce:	28 ee       	ldi	r18, 0xE8	; 232
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:912
      if (buttonDebounce(1, 0, 0, 200) && tetrominoMoveLeft)  tetrominoPos--;

      if (buttonDebounce(0, 1, 0, 200) && tetrominoMoveRight) tetrominoPos++;
    }

    if (buttonDebounce(0, 0, 1, 1000)) {//Pause menu
    29d0:	33 e0       	ldi	r19, 0x03	; 3
    29d2:	41 e0       	ldi	r20, 0x01	; 1
    29d4:	60 e0       	ldi	r22, 0x00	; 0
    29d6:	80 e0       	ldi	r24, 0x00	; 0
    29d8:	0e 94 66 04 	call	0x8cc	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
    29dc:	88 23       	and	r24, r24
    29de:	11 f1       	breq	.+68     	; 0x2a24 <main+0x16b2>
    29e0:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <gameMenu()>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:913
      gameMenu ();
    29e4:	ae 01       	movw	r20, r28
    29e6:	4f 5f       	subi	r20, 0xFF	; 255
    29e8:	5f 4f       	sbci	r21, 0xFF	; 255
    29ea:	5a 01       	movw	r10, r20
    29ec:	0a e0       	ldi	r16, 0x0A	; 10
    29ee:	d1 2c       	mov	r13, r1
    29f0:	c1 2c       	mov	r12, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:916
      for ( uint8_t row = 0; row < 10; row++ ) {
        for ( uint8_t column = 0; column < 10; column++ ) {
          strip.setPixelColor (tetrominoInPos[row][column], 0, 0, 80);
    29f2:	f6 01       	movw	r30, r12
    29f4:	ee 0f       	add	r30, r30
    29f6:	ff 1f       	adc	r31, r31
    29f8:	ea 0d       	add	r30, r10
    29fa:	fb 1d       	adc	r31, r11
    29fc:	20 e5       	ldi	r18, 0x50	; 80
    29fe:	40 e0       	ldi	r20, 0x00	; 0
    2a00:	60 e0       	ldi	r22, 0x00	; 0
    2a02:	80 81       	ld	r24, Z
    2a04:	91 81       	ldd	r25, Z+1	; 0x01
    2a06:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    2a0a:	5f ef       	ldi	r21, 0xFF	; 255
    2a0c:	c5 1a       	sub	r12, r21
    2a0e:	d5 0a       	sbc	r13, r21
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:915
    }

    if (buttonDebounce(0, 0, 1, 1000)) {//Pause menu
      gameMenu ();
      for ( uint8_t row = 0; row < 10; row++ ) {
        for ( uint8_t column = 0; column < 10; column++ ) {
    2a10:	8a e0       	ldi	r24, 0x0A	; 10
    2a12:	c8 16       	cp	r12, r24
    2a14:	d1 04       	cpc	r13, r1
    2a16:	69 f7       	brne	.-38     	; 0x29f2 <main+0x1680>
    2a18:	01 50       	subi	r16, 0x01	; 1
    2a1a:	94 e1       	ldi	r25, 0x14	; 20
    2a1c:	a9 0e       	add	r10, r25
    2a1e:	b1 1c       	adc	r11, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:914
      if (buttonDebounce(0, 1, 0, 200) && tetrominoMoveRight) tetrominoPos++;
    }

    if (buttonDebounce(0, 0, 1, 1000)) {//Pause menu
      gameMenu ();
      for ( uint8_t row = 0; row < 10; row++ ) {
    2a20:	01 11       	cpse	r16, r1
    2a22:	e5 cf       	rjmp	.-54     	; 0x29ee <main+0x167c>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:775
  }

  // Game code
  while (ledtrisLives > 0) {

    tetrominoRotation = encoder.encoderRead(0, 3, true, 1);
    2a24:	01 2f       	mov	r16, r17
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:921
          strip.setPixelColor (tetrominoInPos[row][column], 0, 0, 80);
        }
      }
    }

    if (endGame) break;
    2a26:	80 91 71 3b 	lds	r24, 0x3B71	; 0x803b71 <endGame>
    2a2a:	88 23       	and	r24, r24
    2a2c:	09 f4       	brne	.+2      	; 0x2a30 <main+0x16be>
    2a2e:	04 ce       	rjmp	.-1016   	; 0x2638 <main+0x12c6>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:924
  }

  if (!endGame) {
    2a30:	80 91 71 3b 	lds	r24, 0x3B71	; 0x803b71 <endGame>
    2a34:	81 11       	cpse	r24, r1
    2a36:	27 c8       	rjmp	.-4018   	; 0x1a86 <main+0x714>
    2a38:	03 e6       	ldi	r16, 0x63	; 99
    2a3a:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:927

    for (uint8_t x = 99; x > 0; x--) {// end screen animation
      strip.setPixelColor(x, 80, 0, 0);
    2a3c:	20 e0       	ldi	r18, 0x00	; 0
    2a3e:	40 e0       	ldi	r20, 0x00	; 0
    2a40:	60 e5       	ldi	r22, 0x50	; 80
    2a42:	c8 01       	movw	r24, r16
    2a44:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
_delay_ms():
c:\users\gross\appdata\local\arduino15\packages\dxcore\tools\avr-gcc\7.3.0-atmel3.6.1-azduino6\avr\include\util/delay.h:187
    2a48:	af e0       	ldi	r26, 0x0F	; 15
    2a4a:	b7 e2       	ldi	r27, 0x27	; 39
    2a4c:	11 97       	sbiw	r26, 0x01	; 1
    2a4e:	f1 f7       	brne	.-4      	; 0x2a4c <main+0x16da>
    2a50:	00 c0       	rjmp	.+0      	; 0x2a52 <main+0x16e0>
    2a52:	00 00       	nop
    2a54:	01 50       	subi	r16, 0x01	; 1
    2a56:	11 09       	sbc	r17, r1
gameLedTris():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:926
    if (endGame) break;
  }

  if (!endGame) {

    for (uint8_t x = 99; x > 0; x--) {// end screen animation
    2a58:	89 f7       	brne	.-30     	; 0x2a3c <main+0x16ca>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:932
      strip.setPixelColor(x, 80, 0, 0);
      delay(5);
    }

    if (ledTrisScore > 999) ledTrisScore = 999;
    endGameMenu(ledTrisScore, 7);
    2a5a:	cb 51       	subi	r28, 0x1B	; 27
    2a5c:	df 4f       	sbci	r29, 0xFF	; 255
    2a5e:	88 81       	ld	r24, Y
    2a60:	99 81       	ldd	r25, Y+1	; 0x01
    2a62:	c5 5e       	subi	r28, 0xE5	; 229
    2a64:	d0 40       	sbci	r29, 0x00	; 0
    2a66:	88 3e       	cpi	r24, 0xE8	; 232
    2a68:	b3 e0       	ldi	r27, 0x03	; 3
    2a6a:	9b 07       	cpc	r25, r27
    2a6c:	10 f0       	brcs	.+4      	; 0x2a72 <main+0x1700>
    2a6e:	87 ee       	ldi	r24, 0xE7	; 231
    2a70:	93 e0       	ldi	r25, 0x03	; 3
    2a72:	67 e0       	ldi	r22, 0x07	; 7
gameFlappyLed():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:732

    if (endGame) break;
  }

  if (!endGame) {
    endGameMenu(flappyLedscore, 9);
    2a74:	0e 94 24 08 	call	0x1048	; 0x1048 <endGameMenu(unsigned int, unsigned char)>
    2a78:	06 c8       	rjmp	.-4084   	; 0x1a86 <main+0x714>
gameLedTris():
    2a7a:	73 01       	movw	r14, r6
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:905
      tetrominoLastPos = tetrominoPos;
      tetrominoLastRotation = tetrominoRotation;
    }

    //Left or right moves
    if (tetrominoPos > 0) {
    2a7c:	16 14       	cp	r1, r6
    2a7e:	17 04       	cpc	r1, r7
    2a80:	0c f0       	brlt	.+2      	; 0x2a84 <main+0x1712>
    2a82:	a5 cf       	rjmp	.-182    	; 0x29ce <main+0x165c>
    2a84:	28 ec       	ldi	r18, 0xC8	; 200
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:907

      if (buttonDebounce(1, 0, 0, 200) && tetrominoMoveLeft)  tetrominoPos--;
    2a86:	30 e0       	ldi	r19, 0x00	; 0
    2a88:	40 e0       	ldi	r20, 0x00	; 0
    2a8a:	60 e0       	ldi	r22, 0x00	; 0
    2a8c:	81 e0       	ldi	r24, 0x01	; 1
    2a8e:	0e 94 66 04 	call	0x8cc	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
    2a92:	88 23       	and	r24, r24
    2a94:	29 f0       	breq	.+10     	; 0x2aa0 <main+0x172e>
    2a96:	bb 20       	and	r11, r11
    2a98:	19 f0       	breq	.+6      	; 0x2aa0 <main+0x172e>
    2a9a:	f1 e0       	ldi	r31, 0x01	; 1
    2a9c:	ef 1a       	sub	r14, r31
    2a9e:	f1 08       	sbc	r15, r1
    2aa0:	28 ec       	ldi	r18, 0xC8	; 200
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:909

      if (buttonDebounce(0, 1, 0, 200) && tetrominoMoveRight) tetrominoPos++;
    2aa2:	30 e0       	ldi	r19, 0x00	; 0
    2aa4:	40 e0       	ldi	r20, 0x00	; 0
    2aa6:	61 e0       	ldi	r22, 0x01	; 1
    2aa8:	80 e0       	ldi	r24, 0x00	; 0
    2aaa:	0e 94 66 04 	call	0x8cc	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
    2aae:	88 23       	and	r24, r24
    2ab0:	09 f4       	brne	.+2      	; 0x2ab4 <main+0x1742>
    2ab2:	8d cf       	rjmp	.-230    	; 0x29ce <main+0x165c>
    2ab4:	cc 20       	and	r12, r12
    2ab6:	09 f4       	brne	.+2      	; 0x2aba <main+0x1748>
    2ab8:	8a cf       	rjmp	.-236    	; 0x29ce <main+0x165c>
    2aba:	2f ef       	ldi	r18, 0xFF	; 255
    2abc:	e2 1a       	sub	r14, r18
    2abe:	f2 0a       	sbc	r15, r18
    2ac0:	86 cf       	rjmp	.-244    	; 0x29ce <main+0x165c>
gameFlappyLed():
    2ac2:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:671
  uint16_t wallTimer = 0;
  uint16_t gameSpeed = 200;
  uint16_t flappyLedscore = 0;
  uint16_t buttondebounce = 0;

  strip.setPixelColor(flappyLedPos, 0, 100, 0);
    2ac4:	44 e6       	ldi	r20, 0x64	; 100
    2ac6:	60 e0       	ldi	r22, 0x00	; 0
    2ac8:	85 e3       	ldi	r24, 0x35	; 53
    2aca:	90 e0       	ldi	r25, 0x00	; 0
    2acc:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
_delay_ms():
    2ad0:	ef ef       	ldi	r30, 0xFF	; 255
c:\users\gross\appdata\local\arduino15\packages\dxcore\tools\avr-gcc\7.3.0-atmel3.6.1-azduino6\avr\include\util/delay.h:187
    2ad2:	f9 e6       	ldi	r31, 0x69	; 105
    2ad4:	28 e1       	ldi	r18, 0x18	; 24
    2ad6:	e1 50       	subi	r30, 0x01	; 1
    2ad8:	f0 40       	sbci	r31, 0x00	; 0
    2ada:	20 40       	sbci	r18, 0x00	; 0
    2adc:	e1 f7       	brne	.-8      	; 0x2ad6 <main+0x1764>
    2ade:	00 c0       	rjmp	.+0      	; 0x2ae0 <main+0x176e>
    2ae0:	00 00       	nop
    2ae2:	f1 2c       	mov	r15, r1
    2ae4:	e1 2c       	mov	r14, r1
    2ae6:	b9 e0       	ldi	r27, 0x09	; 9
    2ae8:	5b 2e       	mov	r5, r27
    2aea:	18 ec       	ldi	r17, 0xC8	; 200
    2aec:	c1 2e       	mov	r12, r17
    2aee:	d1 2c       	mov	r13, r1
    2af0:	71 2c       	mov	r7, r1
    2af2:	61 2c       	mov	r6, r1
    2af4:	91 2c       	mov	r9, r1
    2af6:	81 2c       	mov	r8, r1
    2af8:	00 e0       	ldi	r16, 0x00	; 0
    2afa:	15 e3       	ldi	r17, 0x35	; 53
    2afc:	31 2c       	mov	r3, r1
gameFlappyLed():
    2afe:	e3 2d       	mov	r30, r3
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:676
  delay(1000);

  while (flappyLedLives != 0) {

    arrayNumberValue[0] = pgm_read_word_near(walls + randomWall);
    2b00:	f0 e0       	ldi	r31, 0x00	; 0
    2b02:	ee 0f       	add	r30, r30
    2b04:	ff 1f       	adc	r31, r31
    2b06:	ec 5d       	subi	r30, 0xDC	; 220
    2b08:	fd 4f       	sbci	r31, 0xFD	; 253
    2b0a:	a5 90       	lpm	r10, Z+
    2b0c:	b4 90       	lpm	r11, Z
    2b0e:	a0 92 6b 3b 	sts	0x3B6B, r10	; 0x803b6b <arrayNumberValue>
    2b12:	b0 92 6c 3b 	sts	0x3B6C, r11	; 0x803b6c <arrayNumberValue+0x1>
    2b16:	14 30       	cpi	r17, 0x04	; 4
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:678

    if (flappyLedPos > 3 && buttonDebounce(1, 1, 0, 100)) {
    2b18:	90 f0       	brcs	.+36     	; 0x2b3e <main+0x17cc>
    2b1a:	24 e6       	ldi	r18, 0x64	; 100
    2b1c:	30 e0       	ldi	r19, 0x00	; 0
    2b1e:	40 e0       	ldi	r20, 0x00	; 0
    2b20:	61 e0       	ldi	r22, 0x01	; 1
    2b22:	81 e0       	ldi	r24, 0x01	; 1
    2b24:	0e 94 66 04 	call	0x8cc	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
    2b28:	88 23       	and	r24, r24
    2b2a:	49 f0       	breq	.+18     	; 0x2b3e <main+0x17cc>
    2b2c:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:679
      buttondebounce = interruptTimer;
    2b30:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    2b34:	1a 50       	subi	r17, 0x0A	; 10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:680
      flappyLedPos -= 10;
    2b36:	86 e1       	ldi	r24, 0x16	; 22
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:681
      beep(22);
    2b38:	90 e0       	ldi	r25, 0x00	; 0
    2b3a:	0e 94 58 03 	call	0x6b0	; 0x6b0 <beep(unsigned int)>
    2b3e:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:684
    }

    strip.setPixelColor(flappyLedPos, 0, 100, 0);
    2b40:	44 e6       	ldi	r20, 0x64	; 100
    2b42:	60 e0       	ldi	r22, 0x00	; 0
    2b44:	81 2f       	mov	r24, r17
    2b46:	90 e0       	ldi	r25, 0x00	; 0
    2b48:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    2b4c:	10 17       	cp	r17, r16
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:686

    if (flappyLedPos != lastflappyLedPos) {
    2b4e:	39 f0       	breq	.+14     	; 0x2b5e <main+0x17ec>
    2b50:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:687
      strip.setPixelColor(lastflappyLedPos, 0, 0, 0);
    2b52:	40 e0       	ldi	r20, 0x00	; 0
    2b54:	60 e0       	ldi	r22, 0x00	; 0
    2b56:	80 2f       	mov	r24, r16
    2b58:	90 e0       	ldi	r25, 0x00	; 0
    2b5a:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    2b5e:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:691
    }
    lastflappyLedPos = flappyLedPos;

    if ((interruptTimer - flappyLedTimer) > 150 && flappyLedPos < 93) {
    2b62:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    2b66:	88 19       	sub	r24, r8
    2b68:	99 09       	sbc	r25, r9
    2b6a:	87 39       	cpi	r24, 0x97	; 151
    2b6c:	91 05       	cpc	r25, r1
    2b6e:	08 f4       	brcc	.+2      	; 0x2b72 <main+0x1800>
    2b70:	6f c0       	rjmp	.+222    	; 0x2c50 <main+0x18de>
    2b72:	1d 35       	cpi	r17, 0x5D	; 93
    2b74:	08 f0       	brcs	.+2      	; 0x2b78 <main+0x1806>
    2b76:	6c c0       	rjmp	.+216    	; 0x2c50 <main+0x18de>
    2b78:	80 90 75 3b 	lds	r8, 0x3B75	; 0x803b75 <interruptTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:692
      flappyLedTimer = interruptTimer;
    2b7c:	90 90 76 3b 	lds	r9, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    2b80:	7a e0       	ldi	r23, 0x0A	; 10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:693
      flappyLedPos += 10;
    2b82:	47 2e       	mov	r4, r23
    2b84:	41 0e       	add	r4, r17
    2b86:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:696
    }

    if ((interruptTimer - wallTimer) > gameSpeed && wallPos >= 0) {
    2b8a:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    2b8e:	86 19       	sub	r24, r6
    2b90:	97 09       	sbc	r25, r7
    2b92:	c8 16       	cp	r12, r24
    2b94:	d9 06       	cpc	r13, r25
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:697
      wallTimer = interruptTimer;
    2b96:	70 f5       	brcc	.+92     	; 0x2bf4 <main+0x1882>
    2b98:	60 90 75 3b 	lds	r6, 0x3B75	; 0x803b75 <interruptTimer>
    2b9c:	70 90 76 3b 	lds	r7, 0x3B76	; 0x803b76 <interruptTimer+0x1>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:698
      drawCharacter(wallPos, arrayNumberValue[0], 100, 0, 0);
    2ba0:	00 e0       	ldi	r16, 0x00	; 0
    2ba2:	20 e0       	ldi	r18, 0x00	; 0
    2ba4:	44 e6       	ldi	r20, 0x64	; 100
    2ba6:	b5 01       	movw	r22, r10
    2ba8:	85 2d       	mov	r24, r5
    2baa:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:699
      if (wallPos < 9) {
    2bae:	39 e0       	ldi	r19, 0x09	; 9
    2bb0:	53 16       	cp	r5, r19
    2bb2:	09 f4       	brne	.+2      	; 0x2bb6 <main+0x1844>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:700
        drawCharacter((wallPos + 1), arrayNumberValue[0], 0, 0, 0);
    2bb4:	4f c0       	rjmp	.+158    	; 0x2c54 <main+0x18e2>
    2bb6:	20 e0       	ldi	r18, 0x00	; 0
    2bb8:	40 e0       	ldi	r20, 0x00	; 0
    2bba:	b5 01       	movw	r22, r10
    2bbc:	81 e0       	ldi	r24, 0x01	; 1
    2bbe:	85 0d       	add	r24, r5
    2bc0:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:702
      }
      if (wallPos == 0) {
    2bc4:	51 10       	cpse	r5, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:704
        wallPos = 9;
        drawCharacter(0, arrayNumberValue[0], 0, 0, 0);
    2bc6:	46 c0       	rjmp	.+140    	; 0x2c54 <main+0x18e2>
    2bc8:	20 e0       	ldi	r18, 0x00	; 0
    2bca:	40 e0       	ldi	r20, 0x00	; 0
    2bcc:	b5 01       	movw	r22, r10
    2bce:	80 e0       	ldi	r24, 0x00	; 0
    2bd0:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
random():
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\cores\megatinycore/WMath.cpp:38
    2bd4:	5a d4       	rcall	.+2228   	; 0x348a <random>
    2bd6:	25 e0       	ldi	r18, 0x05	; 5
    2bd8:	30 e0       	ldi	r19, 0x00	; 0
    2bda:	40 e0       	ldi	r20, 0x00	; 0
    2bdc:	50 e0       	ldi	r21, 0x00	; 0
    2bde:	c6 d4       	rcall	.+2444   	; 0x356c <__divmodsi4>
gameFlappyLed():
    2be0:	36 2e       	mov	r3, r22
main():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:705
        randomWall = random(0 , 5);
    2be2:	69 e0       	ldi	r22, 0x09	; 9
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:703
      drawCharacter(wallPos, arrayNumberValue[0], 100, 0, 0);
      if (wallPos < 9) {
        drawCharacter((wallPos + 1), arrayNumberValue[0], 0, 0, 0);
      }
      if (wallPos == 0) {
        wallPos = 9;
    2be4:	56 2e       	mov	r5, r22
gameFlappyLed():
    2be6:	93 e3       	ldi	r25, 0x33	; 51
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:715
          if (flappyLedscore <= 999) {
            flappyLedscore += 2;
          }
        }
      }
      if (gameSpeed > 50) gameSpeed--;
    2be8:	c9 16       	cp	r12, r25
    2bea:	d1 04       	cpc	r13, r1
    2bec:	18 f0       	brcs	.+6      	; 0x2bf4 <main+0x1882>
    2bee:	a1 e0       	ldi	r26, 0x01	; 1
    2bf0:	ca 1a       	sub	r12, r26
    2bf2:	d1 08       	sbc	r13, r1
    2bf4:	80 91 6b 3b 	lds	r24, 0x3B6B	; 0x803b6b <arrayNumberValue>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:718
    }

    passage1 = pgm_read_byte_near (arrayNumberValue[0] + 9);
    2bf8:	90 91 6c 3b 	lds	r25, 0x3B6C	; 0x803b6c <arrayNumberValue+0x1>
    2bfc:	fc 01       	movw	r30, r24
    2bfe:	39 96       	adiw	r30, 0x09	; 9
    2c00:	24 91       	lpm	r18, Z
    2c02:	31 96       	adiw	r30, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:719
    passage2 = pgm_read_byte_near (arrayNumberValue[0] + 10);
    2c04:	e4 91       	lpm	r30, Z
    2c06:	b3 e0       	ldi	r27, 0x03	; 3
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:721

    if (wallPos == 3 && (flappyLedPos < passage1 || flappyLedPos > (passage2 + 14))) {
    2c08:	5b 12       	cpse	r5, r27
    2c0a:	32 c0       	rjmp	.+100    	; 0x2c70 <main+0x18fe>
    2c0c:	42 16       	cp	r4, r18
    2c0e:	30 f0       	brcs	.+12     	; 0x2c1c <main+0x18aa>
    2c10:	f0 e0       	ldi	r31, 0x00	; 0
    2c12:	3e 96       	adiw	r30, 0x0e	; 14
    2c14:	4e 16       	cp	r4, r30
    2c16:	1f 06       	cpc	r1, r31
    2c18:	59 f1       	breq	.+86     	; 0x2c70 <main+0x18fe>
    2c1a:	54 f1       	brlt	.+84     	; 0x2c70 <main+0x18fe>
    2c1c:	88 ec       	ldi	r24, 0xC8	; 200
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:723
      flappyLedLives = 0;
      beep(200);
    2c1e:	90 e0       	ldi	r25, 0x00	; 0
    2c20:	0e 94 58 03 	call	0x6b0	; 0x6b0 <beep(unsigned int)>
main():
    2c24:	b1 2c       	mov	r11, r1
gameFlappyLed():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:722

    passage1 = pgm_read_byte_near (arrayNumberValue[0] + 9);
    passage2 = pgm_read_byte_near (arrayNumberValue[0] + 10);

    if (wallPos == 3 && (flappyLedPos < passage1 || flappyLedPos > (passage2 + 14))) {
      flappyLedLives = 0;
    2c26:	28 ee       	ldi	r18, 0xE8	; 232
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:726
      beep(200);
    }

    if (buttonDebounce(0, 0, 1, 1000)) gameMenu ();//Pause menu
    2c28:	33 e0       	ldi	r19, 0x03	; 3
    2c2a:	41 e0       	ldi	r20, 0x01	; 1
    2c2c:	60 e0       	ldi	r22, 0x00	; 0
    2c2e:	80 e0       	ldi	r24, 0x00	; 0
    2c30:	0e 94 66 04 	call	0x8cc	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
    2c34:	81 11       	cpse	r24, r1
    2c36:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <gameMenu()>
    2c3a:	80 91 71 3b 	lds	r24, 0x3B71	; 0x803b71 <endGame>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:728

    if (endGame) break;
    2c3e:	81 11       	cpse	r24, r1
    2c40:	0c 94 43 0d 	jmp	0x1a86	; 0x1a86 <main+0x714>
    2c44:	01 2f       	mov	r16, r17
    2c46:	bb 20       	and	r11, r11
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:674
  uint16_t buttondebounce = 0;

  strip.setPixelColor(flappyLedPos, 0, 100, 0);
  delay(1000);

  while (flappyLedLives != 0) {
    2c48:	09 f4       	brne	.+2      	; 0x2c4c <main+0x18da>
    2c4a:	b2 c3       	rjmp	.+1892   	; 0x33b0 <main+0x203e>
    2c4c:	14 2d       	mov	r17, r4
    2c4e:	57 cf       	rjmp	.-338    	; 0x2afe <main+0x178c>
    2c50:	41 2e       	mov	r4, r17
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:691
    if (flappyLedPos != lastflappyLedPos) {
      strip.setPixelColor(lastflappyLedPos, 0, 0, 0);
    }
    lastflappyLedPos = flappyLedPos;

    if ((interruptTimer - flappyLedTimer) > 150 && flappyLedPos < 93) {
    2c52:	99 cf       	rjmp	.-206    	; 0x2b86 <main+0x1814>
    2c54:	5a 94       	dec	r5
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:707
      if (wallPos == 0) {
        wallPos = 9;
        drawCharacter(0, arrayNumberValue[0], 0, 0, 0);
        randomWall = random(0 , 5);
      } else {
        wallPos --;
    2c56:	42 e0       	ldi	r20, 0x02	; 2
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:709

        if (wallPos == 2) {
    2c58:	54 12       	cpse	r5, r20
    2c5a:	c5 cf       	rjmp	.-118    	; 0x2be6 <main+0x1874>
    2c5c:	58 ee       	ldi	r21, 0xE8	; 232
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:710
          if (flappyLedscore <= 999) {
    2c5e:	e5 16       	cp	r14, r21
    2c60:	53 e0       	ldi	r21, 0x03	; 3
    2c62:	f5 06       	cpc	r15, r21
    2c64:	08 f0       	brcs	.+2      	; 0x2c68 <main+0x18f6>
    2c66:	bf cf       	rjmp	.-130    	; 0x2be6 <main+0x1874>
    2c68:	82 e0       	ldi	r24, 0x02	; 2
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:711
            flappyLedscore += 2;
    2c6a:	e8 0e       	add	r14, r24
    2c6c:	f1 1c       	adc	r15, r1
    2c6e:	bb cf       	rjmp	.-138    	; 0x2be6 <main+0x1874>
    2c70:	bb 24       	eor	r11, r11
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:721
    }

    passage1 = pgm_read_byte_near (arrayNumberValue[0] + 9);
    passage2 = pgm_read_byte_near (arrayNumberValue[0] + 10);

    if (wallPos == 3 && (flappyLedPos < passage1 || flappyLedPos > (passage2 + 14))) {
    2c72:	b3 94       	inc	r11
    2c74:	d8 cf       	rjmp	.-80     	; 0x2c26 <main+0x18b4>
loop():
    2c76:	0e 94 bb 06 	call	0xd76	; 0xd76 <levelTitle()>
gameLedKanoid():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:207
              strip.clear();
              beep(50);
              LedKanoidNumberOfplayers = actualValue;
            }
          }
          levelTitle();
    2c7a:	ed b7       	in	r30, 0x3d	; 61
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:651
      showScore(playerTwoScore);
    }
    delay(1000);
  }
  endGameMenu(ledKanoidScore, 11);
  ledKanoidScore = 0;
    2c7c:	fe b7       	in	r31, 0x3e	; 62
    2c7e:	cc 50       	subi	r28, 0x0C	; 12
    2c80:	df 4f       	sbci	r29, 0xFF	; 255
    2c82:	e8 83       	st	Y, r30
    2c84:	f9 83       	std	Y+1, r31	; 0x01
    2c86:	c4 5f       	subi	r28, 0xF4	; 244
    2c88:	d0 40       	sbci	r29, 0x00	; 0
    2c8a:	f2 e0       	ldi	r31, 0x02	; 2
main():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:451
  bool ballMovement = false;
  bool ballDirectionUp = true;
  bool colitionCheck = true;
  bool ballOnPlatform = false;

  if ( LedKanoidNumberOfplayers == 2) {
    2c8c:	80 e0       	ldi	r24, 0x00	; 0
gameLedKanoid():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:440
  uint8_t playerTwoPos = 4;
  uint8_t lastPlayerTwoPos = 0;
  uint8_t lastBallPosition = 85;
  uint8_t ballPosition = 85;
  uint8_t ledKanoidLives = 1;
  uint8_t blocksPosition = 0;
    2c8e:	ef 12       	cpse	r14, r31
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:451
  bool ballMovement = false;
  bool ballDirectionUp = true;
  bool colitionCheck = true;
  bool ballOnPlatform = false;

  if ( LedKanoidNumberOfplayers == 2) {
    2c90:	01 c0       	rjmp	.+2      	; 0x2c94 <main+0x1922>
main():
    2c92:	84 e1       	ldi	r24, 0x14	; 20
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:452
    blocksPosition = 20;
    2c94:	9e 01       	movw	r18, r28
    2c96:	27 53       	subi	r18, 0x37	; 55
    2c98:	3f 4f       	sbci	r19, 0xFF	; 255
    2c9a:	69 01       	movw	r12, r18
    2c9c:	ae 01       	movw	r20, r28
    2c9e:	4f 5f       	subi	r20, 0xFF	; 255
    2ca0:	5f 4f       	sbci	r21, 0xFF	; 255
    2ca2:	5a 01       	movw	r10, r20
    2ca4:	01 e0       	ldi	r16, 0x01	; 1
    2ca6:	10 e0       	ldi	r17, 0x00	; 0
gameLedKanoid():
    2ca8:	a8 2f       	mov	r26, r24
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:457
  }

  for (uint8_t x = 0; x < arrayElements; x++) {
    actualBlocks[x] = pgm_read_byte_near (blocks + (x + 1)); // first enemy draw on Leds
    strip.setPixelColor((actualBlocks[x] + blocksPosition), 100, 0, 0);// led enemy position musn´t be less than 0
    2caa:	b0 e0       	ldi	r27, 0x00	; 0
    2cac:	ce 50       	subi	r28, 0x0E	; 14
    2cae:	df 4f       	sbci	r29, 0xFF	; 255
    2cb0:	a8 83       	st	Y, r26
    2cb2:	b9 83       	std	Y+1, r27	; 0x01
    2cb4:	c2 5f       	subi	r28, 0xF2	; 242
    2cb6:	d0 40       	sbci	r29, 0x00	; 0
    2cb8:	43 e6       	ldi	r20, 0x63	; 99
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:458
    blocksDestroyed [x] = 99; // fill enemiesKilled array with a number never used some times memory stills holds a value that shouldn´t be there
    2cba:	94 2e       	mov	r9, r20
    2cbc:	f8 01       	movw	r30, r16
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:456
  if ( LedKanoidNumberOfplayers == 2) {
    blocksPosition = 20;
  }

  for (uint8_t x = 0; x < arrayElements; x++) {
    actualBlocks[x] = pgm_read_byte_near (blocks + (x + 1)); // first enemy draw on Leds
    2cbe:	eb 58       	subi	r30, 0x8B	; 139
    2cc0:	fd 4f       	sbci	r31, 0xFD	; 253
    2cc2:	84 91       	lpm	r24, Z
    2cc4:	f5 01       	movw	r30, r10
    2cc6:	81 93       	st	Z+, r24
    2cc8:	5f 01       	movw	r10, r30
    2cca:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:457
    strip.setPixelColor((actualBlocks[x] + blocksPosition), 100, 0, 0);// led enemy position musn´t be less than 0
    2ccc:	40 e0       	ldi	r20, 0x00	; 0
    2cce:	64 e6       	ldi	r22, 0x64	; 100
    2cd0:	ce 50       	subi	r28, 0x0E	; 14
    2cd2:	df 4f       	sbci	r29, 0xFF	; 255
    2cd4:	a8 81       	ld	r26, Y
    2cd6:	b9 81       	ldd	r27, Y+1	; 0x01
    2cd8:	c2 5f       	subi	r28, 0xF2	; 242
    2cda:	d0 40       	sbci	r29, 0x00	; 0
    2cdc:	a8 0f       	add	r26, r24
    2cde:	b1 1d       	adc	r27, r1
    2ce0:	cd 01       	movw	r24, r26
    2ce2:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    2ce6:	f6 01       	movw	r30, r12
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:458
    blocksDestroyed [x] = 99; // fill enemiesKilled array with a number never used some times memory stills holds a value that shouldn´t be there
    2ce8:	91 92       	st	Z+, r9
    2cea:	6f 01       	movw	r12, r30
    2cec:	0f 5f       	subi	r16, 0xFF	; 255
    2cee:	1f 4f       	sbci	r17, 0xFF	; 255
    2cf0:	09 31       	cpi	r16, 0x19	; 25
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:455

  if ( LedKanoidNumberOfplayers == 2) {
    blocksPosition = 20;
  }

  for (uint8_t x = 0; x < arrayElements; x++) {
    2cf2:	11 05       	cpc	r17, r1
    2cf4:	19 f7       	brne	.-58     	; 0x2cbc <main+0x194a>
    2cf6:	80 91 1e 3a 	lds	r24, 0x3A1E	; 0x803a1e <gameLevel>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:461
    actualBlocks[x] = pgm_read_byte_near (blocks + (x + 1)); // first enemy draw on Leds
    strip.setPixelColor((actualBlocks[x] + blocksPosition), 100, 0, 0);// led enemy position musn´t be less than 0
    blocksDestroyed [x] = 99; // fill enemiesKilled array with a number never used some times memory stills holds a value that shouldn´t be there
  }

  if (gameLevel < 20 && LedKanoidNumberOfplayers == 1)  ballSpeed -= (gameLevel * 2);
    2cfa:	84 31       	cpi	r24, 0x14	; 20
    2cfc:	08 f0       	brcs	.+2      	; 0x2d00 <main+0x198e>
    2cfe:	9f c1       	rjmp	.+830    	; 0x303e <main+0x1ccc>
    2d00:	f1 e0       	ldi	r31, 0x01	; 1
    2d02:	ef 12       	cpse	r14, r31
    2d04:	a5 c1       	rjmp	.+842    	; 0x3050 <main+0x1cde>
    2d06:	90 e0       	ldi	r25, 0x00	; 0
    2d08:	88 0f       	add	r24, r24
    2d0a:	99 1f       	adc	r25, r25
    2d0c:	20 e5       	ldi	r18, 0x50	; 80
    2d0e:	30 e0       	ldi	r19, 0x00	; 0
    2d10:	a9 01       	movw	r20, r18
    2d12:	48 1b       	sub	r20, r24
    2d14:	59 0b       	sbc	r21, r25
    2d16:	c0 51       	subi	r28, 0x10	; 16
    2d18:	df 4f       	sbci	r29, 0xFF	; 255
    2d1a:	48 83       	st	Y, r20
    2d1c:	59 83       	std	Y+1, r21	; 0x01
    2d1e:	c0 5f       	subi	r28, 0xF0	; 240
    2d20:	d0 40       	sbci	r29, 0x00	; 0
    2d22:	62 e0       	ldi	r22, 0x02	; 2
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:462
  encoder.encoderSetPosition (playerOnePos, 2);
    2d24:	8e e5       	ldi	r24, 0x5E	; 94
    2d26:	90 e0       	ldi	r25, 0x00	; 0
    2d28:	0e 94 ba 02 	call	0x574	; 0x574 <encoder::encoderSetPosition(int, unsigned char) [clone .constprop.9]>
    2d2c:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:463
  strip.setPixelColor(ballPosition, 80 , 80 , 0);
    2d2e:	40 e5       	ldi	r20, 0x50	; 80
    2d30:	60 e5       	ldi	r22, 0x50	; 80
    2d32:	85 e5       	ldi	r24, 0x55	; 85
    2d34:	90 e0       	ldi	r25, 0x00	; 0
    2d36:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
main():
    2d3a:	a1 2c       	mov	r10, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:449
  uint16_t playerTwoScore = 0;
  int ballEffect = 1;
  bool ballMovement = false;
  bool ballDirectionUp = true;
  bool colitionCheck = true;
  bool ballOnPlatform = false;
    2d3c:	bf 2c       	mov	r11, r15
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:448
  uint16_t playerOneScore = 0;
  uint16_t playerTwoScore = 0;
  int ballEffect = 1;
  bool ballMovement = false;
  bool ballDirectionUp = true;
  bool colitionCheck = true;
    2d3e:	ef 2c       	mov	r14, r15
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:447
  uint16_t ballSpeed = 80;
  uint16_t playerOneScore = 0;
  uint16_t playerTwoScore = 0;
  int ballEffect = 1;
  bool ballMovement = false;
  bool ballDirectionUp = true;
    2d40:	41 2c       	mov	r4, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:446
  uint16_t ballTimer = 0;
  uint16_t ballSpeed = 80;
  uint16_t playerOneScore = 0;
  uint16_t playerTwoScore = 0;
  int ballEffect = 1;
  bool ballMovement = false;
    2d42:	b1 e0       	ldi	r27, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:445
  uint8_t blocksPosition = 0;
  uint16_t ballTimer = 0;
  uint16_t ballSpeed = 80;
  uint16_t playerOneScore = 0;
  uint16_t playerTwoScore = 0;
  int ballEffect = 1;
    2d44:	cd 51       	subi	r28, 0x1D	; 29
    2d46:	df 4f       	sbci	r29, 0xFF	; 255
    2d48:	b8 83       	st	Y, r27
    2d4a:	c3 5e       	subi	r28, 0xE3	; 227
    2d4c:	d0 40       	sbci	r29, 0x00	; 0
    2d4e:	c5 51       	subi	r28, 0x15	; 21
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:444
  uint8_t ledKanoidLives = 1;
  uint8_t blocksPosition = 0;
  uint16_t ballTimer = 0;
  uint16_t ballSpeed = 80;
  uint16_t playerOneScore = 0;
  uint16_t playerTwoScore = 0;
    2d50:	df 4f       	sbci	r29, 0xFF	; 255
    2d52:	18 82       	st	Y, r1
    2d54:	19 82       	std	Y+1, r1	; 0x01
    2d56:	cb 5e       	subi	r28, 0xEB	; 235
    2d58:	d0 40       	sbci	r29, 0x00	; 0
    2d5a:	c7 51       	subi	r28, 0x17	; 23
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:443
  uint8_t ballPosition = 85;
  uint8_t ledKanoidLives = 1;
  uint8_t blocksPosition = 0;
  uint16_t ballTimer = 0;
  uint16_t ballSpeed = 80;
  uint16_t playerOneScore = 0;
    2d5c:	df 4f       	sbci	r29, 0xFF	; 255
    2d5e:	18 82       	st	Y, r1
    2d60:	19 82       	std	Y+1, r1	; 0x01
    2d62:	c9 5e       	subi	r28, 0xE9	; 233
    2d64:	d0 40       	sbci	r29, 0x00	; 0
    2d66:	31 2c       	mov	r3, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:441
  uint8_t lastPlayerTwoPos = 0;
  uint8_t lastBallPosition = 85;
  uint8_t ballPosition = 85;
  uint8_t ledKanoidLives = 1;
  uint8_t blocksPosition = 0;
  uint16_t ballTimer = 0;
    2d68:	21 2c       	mov	r2, r1
    2d6a:	cc 24       	eor	r12, r12
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:439
  uint8_t lastPlayerOnePos = 0;
  uint8_t playerTwoPos = 4;
  uint8_t lastPlayerTwoPos = 0;
  uint8_t lastBallPosition = 85;
  uint8_t ballPosition = 85;
  uint8_t ledKanoidLives = 1;
    2d6c:	c3 94       	inc	r12
    2d6e:	15 e5       	ldi	r17, 0x55	; 85
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:438
  uint8_t playerOnePos = 94;
  uint8_t lastPlayerOnePos = 0;
  uint8_t playerTwoPos = 4;
  uint8_t lastPlayerTwoPos = 0;
  uint8_t lastBallPosition = 85;
  uint8_t ballPosition = 85;
    2d70:	e5 e5       	ldi	r30, 0x55	; 85
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:437
  uint8_t blocksRemaining = arrayElements;
  uint8_t playerOnePos = 94;
  uint8_t lastPlayerOnePos = 0;
  uint8_t playerTwoPos = 4;
  uint8_t lastPlayerTwoPos = 0;
  uint8_t lastBallPosition = 85;
    2d72:	c3 51       	subi	r28, 0x13	; 19
    2d74:	df 4f       	sbci	r29, 0xFF	; 255
    2d76:	e8 83       	st	Y, r30
    2d78:	cd 5e       	subi	r28, 0xED	; 237
    2d7a:	d0 40       	sbci	r29, 0x00	; 0
    2d7c:	51 2c       	mov	r5, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:436
  uint8_t blocksDestroyed [arrayElements];// another array that contains only enemies killed
  uint8_t blocksRemaining = arrayElements;
  uint8_t playerOnePos = 94;
  uint8_t lastPlayerOnePos = 0;
  uint8_t playerTwoPos = 4;
  uint8_t lastPlayerTwoPos = 0;
    2d7e:	24 e0       	ldi	r18, 0x04	; 4
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:435
  uint8_t actualBlocks [arrayElements];// because enemies array cointains 1 extra element with number of elements information
  uint8_t blocksDestroyed [arrayElements];// another array that contains only enemies killed
  uint8_t blocksRemaining = arrayElements;
  uint8_t playerOnePos = 94;
  uint8_t lastPlayerOnePos = 0;
  uint8_t playerTwoPos = 4;
    2d80:	d2 2e       	mov	r13, r18
    2d82:	91 2c       	mov	r9, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:434
  uint8_t arrayElements = 24; // reads enemy position
  uint8_t actualBlocks [arrayElements];// because enemies array cointains 1 extra element with number of elements information
  uint8_t blocksDestroyed [arrayElements];// another array that contains only enemies killed
  uint8_t blocksRemaining = arrayElements;
  uint8_t playerOnePos = 94;
  uint8_t lastPlayerOnePos = 0;
    2d84:	f8 e1       	ldi	r31, 0x18	; 24
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:432
//Game ledKanoid code
void gameLedKanoid() {
  uint8_t arrayElements = 24; // reads enemy position
  uint8_t actualBlocks [arrayElements];// because enemies array cointains 1 extra element with number of elements information
  uint8_t blocksDestroyed [arrayElements];// another array that contains only enemies killed
  uint8_t blocksRemaining = arrayElements;
    2d86:	cb 51       	subi	r28, 0x1B	; 27
    2d88:	df 4f       	sbci	r29, 0xFF	; 255
    2d8a:	f8 83       	st	Y, r31
    2d8c:	c5 5e       	subi	r28, 0xE5	; 229
    2d8e:	d0 40       	sbci	r29, 0x00	; 0
gameLedKanoid():
    2d90:	cc 20       	and	r12, r12
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:465

  if (gameLevel < 20 && LedKanoidNumberOfplayers == 1)  ballSpeed -= (gameLevel * 2);
  encoder.encoderSetPosition (playerOnePos, 2);
  strip.setPixelColor(ballPosition, 80 , 80 , 0);

  while (ledKanoidLives != 0 && blocksRemaining != 0) {
    2d92:	09 f4       	brne	.+2      	; 0x2d96 <main+0x1a24>
    2d94:	10 c2       	rjmp	.+1056   	; 0x31b6 <main+0x1e44>
    2d96:	cb 51       	subi	r28, 0x1B	; 27
    2d98:	df 4f       	sbci	r29, 0xFF	; 255
    2d9a:	28 81       	ld	r18, Y
    2d9c:	c5 5e       	subi	r28, 0xE5	; 229
    2d9e:	d0 40       	sbci	r29, 0x00	; 0
    2da0:	22 23       	and	r18, r18
    2da2:	09 f4       	brne	.+2      	; 0x2da6 <main+0x1a34>
    2da4:	08 c2       	rjmp	.+1040   	; 0x31b6 <main+0x1e44>
    2da6:	22 e0       	ldi	r18, 0x02	; 2
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:467

    playerOnePos = encoder.encoderRead(90, 97, false, 2);
    2da8:	40 e0       	ldi	r20, 0x00	; 0
    2daa:	61 e6       	ldi	r22, 0x61	; 97
    2dac:	8a e5       	ldi	r24, 0x5A	; 90
    2dae:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]>
    2db2:	c1 51       	subi	r28, 0x11	; 17
    2db4:	df 4f       	sbci	r29, 0xFF	; 255
    2db6:	88 83       	st	Y, r24
    2db8:	cf 5e       	subi	r28, 0xEF	; 239
    2dba:	d0 40       	sbci	r29, 0x00	; 0
    2dbc:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:470

    if (playerOnePos != lastPlayerOnePos) {
      drawCharacter(lastPlayerOnePos, playerPlatform, 0, 0, 0);
    2dbe:	89 15       	cp	r24, r9
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:469

  while (ledKanoidLives != 0 && blocksRemaining != 0) {

    playerOnePos = encoder.encoderRead(90, 97, false, 2);

    if (playerOnePos != lastPlayerOnePos) {
    2dc0:	09 f4       	brne	.+2      	; 0x2dc4 <main+0x1a52>
    2dc2:	51 c1       	rjmp	.+674    	; 0x3066 <main+0x1cf4>
    2dc4:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:470
      drawCharacter(lastPlayerOnePos, playerPlatform, 0, 0, 0);
    2dc6:	40 e0       	ldi	r20, 0x00	; 0
    2dc8:	61 e7       	ldi	r22, 0x71	; 113
    2dca:	72 e0       	ldi	r23, 0x02	; 2
    2dcc:	89 2d       	mov	r24, r9
    2dce:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    2dd2:	41 10       	cpse	r4, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:472

      if (!ballMovement && ballOnPlatform) {
    2dd4:	18 c0       	rjmp	.+48     	; 0x2e06 <main+0x1a94>
    2dd6:	aa 20       	and	r10, r10
    2dd8:	b1 f0       	breq	.+44     	; 0x2e06 <main+0x1a94>
    2dda:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:473
        strip.setPixelColor(ballPosition, 0 , 0 , 0);
    2ddc:	40 e0       	ldi	r20, 0x00	; 0
    2dde:	60 e0       	ldi	r22, 0x00	; 0
    2de0:	81 2f       	mov	r24, r17
    2de2:	90 e0       	ldi	r25, 0x00	; 0
    2de4:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    2de8:	22 e0       	ldi	r18, 0x02	; 2
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:474
        ballPosition = (encoder.encoderRead(90, 97, false, 2) - 9);
    2dea:	40 e0       	ldi	r20, 0x00	; 0
    2dec:	61 e6       	ldi	r22, 0x61	; 97
    2dee:	8a e5       	ldi	r24, 0x5A	; 90
    2df0:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <encoder::encoderRead(unsigned char, unsigned char, bool, unsigned char) [clone .constprop.7]>
    2df4:	17 ef       	ldi	r17, 0xF7	; 247
    2df6:	18 0f       	add	r17, r24
    2df8:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:475
        strip.setPixelColor(ballPosition, 80 , 80 , 0);
    2dfa:	40 e5       	ldi	r20, 0x50	; 80
    2dfc:	60 e5       	ldi	r22, 0x50	; 80
    2dfe:	81 2f       	mov	r24, r17
    2e00:	90 e0       	ldi	r25, 0x00	; 0
    2e02:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    2e06:	30 91 6a 3b 	lds	r19, 0x3B6A	; 0x803b6a <LedKanoidNumberOfplayers>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:482
      lastPlayerOnePos = playerOnePos;
    } else {
      drawCharacter(playerOnePos, playerPlatform, 0, 100, 0);
    }

    if (LedKanoidNumberOfplayers == 2) {
    2e0a:	c9 51       	subi	r28, 0x19	; 25
    2e0c:	df 4f       	sbci	r29, 0xFF	; 255
    2e0e:	38 83       	st	Y, r19
    2e10:	c7 5e       	subi	r28, 0xE7	; 231
    2e12:	d0 40       	sbci	r29, 0x00	; 0
    2e14:	32 30       	cpi	r19, 0x02	; 2
    2e16:	21 f5       	brne	.+72     	; 0x2e60 <main+0x1aee>
    2e18:	28 ec       	ldi	r18, 0xC8	; 200
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:484

      if (buttonDebounce(1, 0, 0, 200) && playerTwoPos > 0) {
    2e1a:	30 e0       	ldi	r19, 0x00	; 0
    2e1c:	40 e0       	ldi	r20, 0x00	; 0
    2e1e:	60 e0       	ldi	r22, 0x00	; 0
    2e20:	81 e0       	ldi	r24, 0x01	; 1
    2e22:	0e 94 66 04 	call	0x8cc	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
    2e26:	88 23       	and	r24, r24
    2e28:	11 f0       	breq	.+4      	; 0x2e2e <main+0x1abc>
    2e2a:	d1 10       	cpse	r13, r1
    2e2c:	da 94       	dec	r13
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:485
        playerTwoPos--;
    2e2e:	28 ec       	ldi	r18, 0xC8	; 200
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:488
      }

      if (buttonDebounce(0, 1, 0, 200) && playerTwoPos < 7) {
    2e30:	30 e0       	ldi	r19, 0x00	; 0
    2e32:	40 e0       	ldi	r20, 0x00	; 0
    2e34:	61 e0       	ldi	r22, 0x01	; 1
    2e36:	80 e0       	ldi	r24, 0x00	; 0
    2e38:	0e 94 66 04 	call	0x8cc	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
    2e3c:	88 23       	and	r24, r24
    2e3e:	21 f0       	breq	.+8      	; 0x2e48 <main+0x1ad6>
    2e40:	46 e0       	ldi	r20, 0x06	; 6
    2e42:	4d 15       	cp	r20, r13
    2e44:	08 f0       	brcs	.+2      	; 0x2e48 <main+0x1ad6>
    2e46:	d3 94       	inc	r13
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:489
        playerTwoPos++;
    2e48:	d5 14       	cp	r13, r5
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:492
      }

      if (playerTwoPos != lastPlayerTwoPos) {
    2e4a:	09 f4       	brne	.+2      	; 0x2e4e <main+0x1adc>
    2e4c:	14 c1       	rjmp	.+552    	; 0x3076 <main+0x1d04>
    2e4e:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:493
        drawCharacter(lastPlayerTwoPos, playerPlatform, 0, 0, 0);
    2e50:	20 e0       	ldi	r18, 0x00	; 0
    2e52:	40 e0       	ldi	r20, 0x00	; 0
    2e54:	61 e7       	ldi	r22, 0x71	; 113
    2e56:	72 e0       	ldi	r23, 0x02	; 2
    2e58:	85 2d       	mov	r24, r5
    2e5a:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:495
      } else {
        drawCharacter(playerTwoPos, playerPlatform, 0, 0, 100);
    2e5e:	5d 2c       	mov	r5, r13
    2e60:	28 ec       	ldi	r18, 0xC8	; 200
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:500
      }
      lastPlayerTwoPos = playerTwoPos;
    }

    if (buttonDebounce(1, 1, 0, 200) && ballOnPlatform) {
    2e62:	30 e0       	ldi	r19, 0x00	; 0
    2e64:	40 e0       	ldi	r20, 0x00	; 0
    2e66:	61 e0       	ldi	r22, 0x01	; 1
    2e68:	81 e0       	ldi	r24, 0x01	; 1
    2e6a:	0e 94 66 04 	call	0x8cc	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
    2e6e:	88 23       	and	r24, r24
    2e70:	21 f0       	breq	.+8      	; 0x2e7a <main+0x1b08>
    2e72:	aa 20       	and	r10, r10
    2e74:	11 f0       	breq	.+4      	; 0x2e7a <main+0x1b08>
main():
    2e76:	4a 2c       	mov	r4, r10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:501
      ballMovement = true;
    2e78:	a1 2c       	mov	r10, r1
gameLedKanoid():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:502
      ballOnPlatform = false;
    2e7a:	80 91 75 3b 	lds	r24, 0x3B75	; 0x803b75 <interruptTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:505
    }

    if ((interruptTimer - ballTimer > ballSpeed) && ballMovement) {
    2e7e:	90 91 76 3b 	lds	r25, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    2e82:	82 19       	sub	r24, r2
    2e84:	93 09       	sbc	r25, r3
    2e86:	c0 51       	subi	r28, 0x10	; 16
    2e88:	df 4f       	sbci	r29, 0xFF	; 255
    2e8a:	a8 81       	ld	r26, Y
    2e8c:	b9 81       	ldd	r27, Y+1	; 0x01
    2e8e:	c0 5f       	subi	r28, 0xF0	; 240
    2e90:	d0 40       	sbci	r29, 0x00	; 0
    2e92:	a8 17       	cp	r26, r24
    2e94:	b9 07       	cpc	r27, r25
    2e96:	08 f0       	brcs	.+2      	; 0x2e9a <main+0x1b28>
    2e98:	86 c0       	rjmp	.+268    	; 0x2fa6 <main+0x1c34>
    2e9a:	44 20       	and	r4, r4
    2e9c:	09 f4       	brne	.+2      	; 0x2ea0 <main+0x1b2e>
    2e9e:	83 c0       	rjmp	.+262    	; 0x2fa6 <main+0x1c34>
    2ea0:	20 90 75 3b 	lds	r2, 0x3B75	; 0x803b75 <interruptTimer>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:506
      ballTimer = interruptTimer;
    2ea4:	30 90 76 3b 	lds	r3, 0x3B76	; 0x803b76 <interruptTimer+0x1>
    2ea8:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:509
      colitionCheck = true;
      ballOnPlatform = false;
      strip.setPixelColor(lastBallPosition, 0 , 0 , 0);
    2eaa:	40 e0       	ldi	r20, 0x00	; 0
    2eac:	60 e0       	ldi	r22, 0x00	; 0
    2eae:	c3 51       	subi	r28, 0x13	; 19
    2eb0:	df 4f       	sbci	r29, 0xFF	; 255
    2eb2:	b8 81       	ld	r27, Y
    2eb4:	cd 5e       	subi	r28, 0xED	; 237
    2eb6:	d0 40       	sbci	r29, 0x00	; 0
    2eb8:	8b 2f       	mov	r24, r27
    2eba:	90 e0       	ldi	r25, 0x00	; 0
    2ebc:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    2ec0:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:511
      lastBallPosition = ballPosition;
      strip.setPixelColor(ballPosition, 80 , 80 , 0);
    2ec2:	40 e5       	ldi	r20, 0x50	; 80
    2ec4:	60 e5       	ldi	r22, 0x50	; 80
    2ec6:	81 2f       	mov	r24, r17
    2ec8:	90 e0       	ldi	r25, 0x00	; 0
    2eca:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    2ece:	0a e0       	ldi	r16, 0x0A	; 10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:515

      if (ballDirectionUp)  ballPosition -= 10 + ballEffect;

      if (!ballDirectionUp) ballPosition += 10 - ballEffect;
    2ed0:	cd 51       	subi	r28, 0x1D	; 29
    2ed2:	df 4f       	sbci	r29, 0xFF	; 255
    2ed4:	a8 81       	ld	r26, Y
    2ed6:	c3 5e       	subi	r28, 0xE3	; 227
    2ed8:	d0 40       	sbci	r29, 0x00	; 0
    2eda:	0a 1b       	sub	r16, r26
    2edc:	ee 20       	and	r14, r14
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:513
      ballOnPlatform = false;
      strip.setPixelColor(lastBallPosition, 0 , 0 , 0);
      lastBallPosition = ballPosition;
      strip.setPixelColor(ballPosition, 80 , 80 , 0);

      if (ballDirectionUp)  ballPosition -= 10 + ballEffect;
    2ede:	39 f0       	breq	.+14     	; 0x2eee <main+0x1b7c>
    2ee0:	06 ef       	ldi	r16, 0xF6	; 246
    2ee2:	cd 51       	subi	r28, 0x1D	; 29
    2ee4:	df 4f       	sbci	r29, 0xFF	; 255
    2ee6:	e8 81       	ld	r30, Y
    2ee8:	c3 5e       	subi	r28, 0xE3	; 227
    2eea:	d0 40       	sbci	r29, 0x00	; 0
    2eec:	0e 1b       	sub	r16, r30
    2eee:	01 0f       	add	r16, r17
main():
    2ef0:	9e 01       	movw	r18, r28
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:502
      lastPlayerTwoPos = playerTwoPos;
    }

    if (buttonDebounce(1, 1, 0, 200) && ballOnPlatform) {
      ballMovement = true;
      ballOnPlatform = false;
    2ef2:	27 53       	subi	r18, 0x37	; 55
    2ef4:	3f 4f       	sbci	r19, 0xFF	; 255
    2ef6:	49 01       	movw	r8, r18
    2ef8:	ae 01       	movw	r20, r28
    2efa:	4f 5f       	subi	r20, 0xFF	; 255
    2efc:	5f 4f       	sbci	r21, 0xFF	; 255
    2efe:	c3 51       	subi	r28, 0x13	; 19
    2f00:	df 4f       	sbci	r29, 0xFF	; 255
    2f02:	48 83       	st	Y, r20
    2f04:	59 83       	std	Y+1, r21	; 0x01
    2f06:	cd 5e       	subi	r28, 0xED	; 237
    2f08:	d0 40       	sbci	r29, 0x00	; 0
    2f0a:	a1 2c       	mov	r10, r1
gameLedKanoid():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:517

      if (ballDirectionUp)  ballPosition -= 10 + ballEffect;

      if (!ballDirectionUp) ballPosition += 10 - ballEffect;

      for (uint8_t x = 0; x < arrayElements && colitionCheck; x++) {// if blocks are hited another array is created containing only killed enemies
    2f0c:	60 2e       	mov	r6, r16
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:518
        if (ballPosition  == (actualBlocks[x] + blocksPosition) && blocksDestroyed [x] != x) {
    2f0e:	71 2c       	mov	r7, r1
    2f10:	c3 51       	subi	r28, 0x13	; 19
    2f12:	df 4f       	sbci	r29, 0xFF	; 255
    2f14:	a8 81       	ld	r26, Y
    2f16:	b9 81       	ldd	r27, Y+1	; 0x01
    2f18:	cd 5e       	subi	r28, 0xED	; 237
    2f1a:	d0 40       	sbci	r29, 0x00	; 0
    2f1c:	8d 91       	ld	r24, X+
    2f1e:	c3 51       	subi	r28, 0x13	; 19
    2f20:	df 4f       	sbci	r29, 0xFF	; 255
    2f22:	a8 83       	st	Y, r26
    2f24:	b9 83       	std	Y+1, r27	; 0x01
    2f26:	cd 5e       	subi	r28, 0xED	; 237
    2f28:	d0 40       	sbci	r29, 0x00	; 0
    2f2a:	ce 50       	subi	r28, 0x0E	; 14
    2f2c:	df 4f       	sbci	r29, 0xFF	; 255
    2f2e:	e8 81       	ld	r30, Y
    2f30:	f9 81       	ldd	r31, Y+1	; 0x01
    2f32:	c2 5f       	subi	r28, 0xF2	; 242
    2f34:	d0 40       	sbci	r29, 0x00	; 0
    2f36:	e8 0f       	add	r30, r24
    2f38:	f1 1d       	adc	r31, r1
    2f3a:	6e 16       	cp	r6, r30
    2f3c:	7f 06       	cpc	r7, r31
    2f3e:	09 f0       	breq	.+2      	; 0x2f42 <main+0x1bd0>
    2f40:	ae c0       	rjmp	.+348    	; 0x309e <main+0x1d2c>
    2f42:	d4 01       	movw	r26, r8
    2f44:	8c 91       	ld	r24, X
    2f46:	a8 16       	cp	r10, r24
    2f48:	09 f4       	brne	.+2      	; 0x2f4c <main+0x1bda>
    2f4a:	a9 c0       	rjmp	.+338    	; 0x309e <main+0x1d2c>
    2f4c:	ac 92       	st	X, r10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:519
          blocksDestroyed [x] = x;
    2f4e:	cb 51       	subi	r28, 0x1B	; 27
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:520
          blocksRemaining--;
    2f50:	df 4f       	sbci	r29, 0xFF	; 255
    2f52:	b8 81       	ld	r27, Y
    2f54:	c5 5e       	subi	r28, 0xE5	; 229
    2f56:	d0 40       	sbci	r29, 0x00	; 0
    2f58:	b1 50       	subi	r27, 0x01	; 1
    2f5a:	cb 51       	subi	r28, 0x1B	; 27
    2f5c:	df 4f       	sbci	r29, 0xFF	; 255
    2f5e:	b8 83       	st	Y, r27
    2f60:	c5 5e       	subi	r28, 0xE5	; 229
    2f62:	d0 40       	sbci	r29, 0x00	; 0
    2f64:	80 91 68 3b 	lds	r24, 0x3B68	; 0x803b68 <ledKanoidScore>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:521
          ledKanoidScore ++;
    2f68:	90 91 69 3b 	lds	r25, 0x3B69	; 0x803b69 <ledKanoidScore+0x1>
    2f6c:	01 96       	adiw	r24, 0x01	; 1
    2f6e:	80 93 68 3b 	sts	0x3B68, r24	; 0x803b68 <ledKanoidScore>
    2f72:	90 93 69 3b 	sts	0x3B69, r25	; 0x803b69 <ledKanoidScore+0x1>
    2f76:	e1 e0       	ldi	r30, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:522
          ballDirectionUp = !ballDirectionUp;
    2f78:	ee 26       	eor	r14, r30
    2f7a:	86 e9       	ldi	r24, 0x96	; 150
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:524
          colitionCheck = false;
          beep(150);
    2f7c:	90 e0       	ldi	r25, 0x00	; 0
    2f7e:	0e 94 58 03 	call	0x6b0	; 0x6b0 <beep(unsigned int)>
    2f82:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:525
          strip.setPixelColor((actualBlocks[x] + blocksPosition), 0, 0, 0);
    2f84:	40 e0       	ldi	r20, 0x00	; 0
    2f86:	60 e0       	ldi	r22, 0x00	; 0
    2f88:	c3 01       	movw	r24, r6
    2f8a:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
main():
    2f8e:	b1 2c       	mov	r11, r1
gameLedKanoid():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:523
        if (ballPosition  == (actualBlocks[x] + blocksPosition) && blocksDestroyed [x] != x) {
          blocksDestroyed [x] = x;
          blocksRemaining--;
          ledKanoidScore ++;
          ballDirectionUp = !ballDirectionUp;
          colitionCheck = false;
    2f90:	a3 94       	inc	r10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:517

      if (ballDirectionUp)  ballPosition -= 10 + ballEffect;

      if (!ballDirectionUp) ballPosition += 10 - ballEffect;

      for (uint8_t x = 0; x < arrayElements && colitionCheck; x++) {// if blocks are hited another array is created containing only killed enemies
    2f92:	f8 e1       	ldi	r31, 0x18	; 24
    2f94:	af 12       	cpse	r10, r31
    2f96:	76 c0       	rjmp	.+236    	; 0x3084 <main+0x1d12>
main():
    2f98:	a1 2c       	mov	r10, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:508
    }

    if ((interruptTimer - ballTimer > ballSpeed) && ballMovement) {
      ballTimer = interruptTimer;
      colitionCheck = true;
      ballOnPlatform = false;
    2f9a:	c3 51       	subi	r28, 0x13	; 19
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:510
      strip.setPixelColor(lastBallPosition, 0 , 0 , 0);
      lastBallPosition = ballPosition;
    2f9c:	df 4f       	sbci	r29, 0xFF	; 255
    2f9e:	18 83       	st	Y, r17
    2fa0:	cd 5e       	subi	r28, 0xED	; 237
    2fa2:	d0 40       	sbci	r29, 0x00	; 0
gameLedKanoid():
    2fa4:	10 2f       	mov	r17, r16
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:517

      if (ballDirectionUp)  ballPosition -= 10 + ballEffect;

      if (!ballDirectionUp) ballPosition += 10 - ballEffect;

      for (uint8_t x = 0; x < arrayElements && colitionCheck; x++) {// if blocks are hited another array is created containing only killed enemies
    2fa6:	91 2c       	mov	r9, r1
    2fa8:	81 2c       	mov	r8, r1
    2faa:	bb 20       	and	r11, r11
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:530
          strip.setPixelColor((actualBlocks[x] + blocksPosition), 0, 0, 0);
        }
      }
    }

    for (uint8_t x = 0; x < 10 && colitionCheck; x++) {
    2fac:	49 f1       	breq	.+82     	; 0x3000 <main+0x1c8e>
    2fae:	f4 01       	movw	r30, r8
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:532

      if ( ballPosition == pgm_read_byte_near (screenRightBounds + x)) {
    2fb0:	e9 59       	subi	r30, 0x99	; 153
    2fb2:	fd 4f       	sbci	r31, 0xFD	; 253
    2fb4:	e4 91       	lpm	r30, Z
    2fb6:	e1 13       	cpse	r30, r17
    2fb8:	0b c0       	rjmp	.+22     	; 0x2fd0 <main+0x1c5e>
    2fba:	82 e3       	ldi	r24, 0x32	; 50
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:535
        ballEffect = 1;
        colitionCheck = false;
        beep(50);
    2fbc:	90 e0       	ldi	r25, 0x00	; 0
    2fbe:	0e 94 58 03 	call	0x6b0	; 0x6b0 <beep(unsigned int)>
main():
    2fc2:	b1 2c       	mov	r11, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:534

    for (uint8_t x = 0; x < 10 && colitionCheck; x++) {

      if ( ballPosition == pgm_read_byte_near (screenRightBounds + x)) {
        ballEffect = 1;
        colitionCheck = false;
    2fc4:	21 e0       	ldi	r18, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:533
    }

    for (uint8_t x = 0; x < 10 && colitionCheck; x++) {

      if ( ballPosition == pgm_read_byte_near (screenRightBounds + x)) {
        ballEffect = 1;
    2fc6:	cd 51       	subi	r28, 0x1D	; 29
    2fc8:	df 4f       	sbci	r29, 0xFF	; 255
    2fca:	28 83       	st	Y, r18
    2fcc:	c3 5e       	subi	r28, 0xE3	; 227
    2fce:	d0 40       	sbci	r29, 0x00	; 0
gameLedKanoid():
    2fd0:	f4 01       	movw	r30, r8
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:538
        colitionCheck = false;
        beep(50);
      }

      if ( ballPosition == pgm_read_byte_near (screenLeftBounds + x)) {
    2fd2:	e3 5a       	subi	r30, 0xA3	; 163
    2fd4:	fd 4f       	sbci	r31, 0xFD	; 253
    2fd6:	e4 91       	lpm	r30, Z
    2fd8:	1e 13       	cpse	r17, r30
    2fda:	0b c0       	rjmp	.+22     	; 0x2ff2 <main+0x1c80>
    2fdc:	82 e3       	ldi	r24, 0x32	; 50
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:541
        ballEffect = -1;
        colitionCheck = false;
        beep(50);
    2fde:	90 e0       	ldi	r25, 0x00	; 0
    2fe0:	0e 94 58 03 	call	0x6b0	; 0x6b0 <beep(unsigned int)>
main():
    2fe4:	b1 2c       	mov	r11, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:540
        beep(50);
      }

      if ( ballPosition == pgm_read_byte_near (screenLeftBounds + x)) {
        ballEffect = -1;
        colitionCheck = false;
    2fe6:	3f ef       	ldi	r19, 0xFF	; 255
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:539
        colitionCheck = false;
        beep(50);
      }

      if ( ballPosition == pgm_read_byte_near (screenLeftBounds + x)) {
        ballEffect = -1;
    2fe8:	cd 51       	subi	r28, 0x1D	; 29
    2fea:	df 4f       	sbci	r29, 0xFF	; 255
    2fec:	38 83       	st	Y, r19
    2fee:	c3 5e       	subi	r28, 0xE3	; 227
    2ff0:	d0 40       	sbci	r29, 0x00	; 0
    2ff2:	4f ef       	ldi	r20, 0xFF	; 255
    2ff4:	84 1a       	sub	r8, r20
    2ff6:	94 0a       	sbc	r9, r20
gameLedKanoid():
    2ff8:	5a e0       	ldi	r21, 0x0A	; 10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:530
          strip.setPixelColor((actualBlocks[x] + blocksPosition), 0, 0, 0);
        }
      }
    }

    for (uint8_t x = 0; x < 10 && colitionCheck; x++) {
    2ffa:	85 16       	cp	r8, r21
    2ffc:	91 04       	cpc	r9, r1
    2ffe:	a9 f6       	brne	.-86     	; 0x2faa <main+0x1c38>
    3000:	1a 30       	cpi	r17, 0x0A	; 10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:545
        colitionCheck = false;
        beep(50);
      }
    }

    if (ballPosition < 10 && LedKanoidNumberOfplayers == 1) {
    3002:	08 f0       	brcs	.+2      	; 0x3006 <main+0x1c94>
    3004:	4e c0       	rjmp	.+156    	; 0x30a2 <main+0x1d30>
    3006:	c9 51       	subi	r28, 0x19	; 25
    3008:	df 4f       	sbci	r29, 0xFF	; 255
    300a:	88 81       	ld	r24, Y
    300c:	c7 5e       	subi	r28, 0xE7	; 231
    300e:	d0 40       	sbci	r29, 0x00	; 0
    3010:	81 30       	cpi	r24, 0x01	; 1
    3012:	09 f4       	brne	.+2      	; 0x3016 <main+0x1ca4>
    3014:	62 c0       	rjmp	.+196    	; 0x30da <main+0x1d68>
    3016:	80 91 68 3b 	lds	r24, 0x3B68	; 0x803b68 <ledKanoidScore>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:548
      ballDirectionUp =  false;
    } else if (ballPosition < 10) {
      playerOneScore += ledKanoidScore;
    301a:	90 91 69 3b 	lds	r25, 0x3B69	; 0x803b69 <ledKanoidScore+0x1>
    301e:	c7 51       	subi	r28, 0x17	; 23
    3020:	df 4f       	sbci	r29, 0xFF	; 255
    3022:	a8 81       	ld	r26, Y
    3024:	b9 81       	ldd	r27, Y+1	; 0x01
    3026:	c9 5e       	subi	r28, 0xE9	; 233
    3028:	d0 40       	sbci	r29, 0x00	; 0
    302a:	a8 0f       	add	r26, r24
    302c:	b9 1f       	adc	r27, r25
    302e:	c7 51       	subi	r28, 0x17	; 23
    3030:	df 4f       	sbci	r29, 0xFF	; 255
    3032:	a8 83       	st	Y, r26
    3034:	b9 83       	std	Y+1, r27	; 0x01
    3036:	c9 5e       	subi	r28, 0xE9	; 233
    3038:	d0 40       	sbci	r29, 0x00	; 0
main():
    303a:	c1 2c       	mov	r12, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:555
    }

    if (ballPosition > 89) {

      if (LedKanoidNumberOfplayers == 2) playerTwoScore += ledKanoidScore;
      ledKanoidLives = 0;
    303c:	51 c0       	rjmp	.+162    	; 0x30e0 <main+0x1d6e>
    303e:	80 e5       	ldi	r24, 0x50	; 80
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:442
  uint8_t lastBallPosition = 85;
  uint8_t ballPosition = 85;
  uint8_t ledKanoidLives = 1;
  uint8_t blocksPosition = 0;
  uint16_t ballTimer = 0;
  uint16_t ballSpeed = 80;
    3040:	90 e0       	ldi	r25, 0x00	; 0
    3042:	c0 51       	subi	r28, 0x10	; 16
    3044:	df 4f       	sbci	r29, 0xFF	; 255
    3046:	88 83       	st	Y, r24
    3048:	99 83       	std	Y+1, r25	; 0x01
    304a:	c0 5f       	subi	r28, 0xF0	; 240
    304c:	d0 40       	sbci	r29, 0x00	; 0
    304e:	69 ce       	rjmp	.-814    	; 0x2d22 <main+0x19b0>
    3050:	a0 e5       	ldi	r26, 0x50	; 80
    3052:	b0 e0       	ldi	r27, 0x00	; 0
    3054:	c0 51       	subi	r28, 0x10	; 16
    3056:	df 4f       	sbci	r29, 0xFF	; 255
    3058:	a8 83       	st	Y, r26
    305a:	b9 83       	std	Y+1, r27	; 0x01
    305c:	c0 5f       	subi	r28, 0xF0	; 240
    305e:	d0 40       	sbci	r29, 0x00	; 0
    3060:	60 ce       	rjmp	.-832    	; 0x2d22 <main+0x19b0>
gameLedKanoid():
    3062:	a0 2e       	mov	r10, r16
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:619
      for (uint8_t x = 0; x < arrayElements; x++) {
        if (x != blocksDestroyed [x])  strip.setPixelColor(actualBlocks[x], 100, 0, 0);// led enemy position musn´t be less than 0
      }
    }

    if (endGame)  break;
    3064:	95 ce       	rjmp	.-726    	; 0x2d90 <main+0x1a1e>
    3066:	24 e6       	ldi	r18, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:479
        ballPosition = (encoder.encoderRead(90, 97, false, 2) - 9);
        strip.setPixelColor(ballPosition, 80 , 80 , 0);
      }
      lastPlayerOnePos = playerOnePos;
    } else {
      drawCharacter(playerOnePos, playerPlatform, 0, 100, 0);
    3068:	40 e0       	ldi	r20, 0x00	; 0
    306a:	61 e7       	ldi	r22, 0x71	; 113
    306c:	72 e0       	ldi	r23, 0x02	; 2
    306e:	89 2d       	mov	r24, r9
    3070:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    3074:	c8 ce       	rjmp	.-624    	; 0x2e06 <main+0x1a94>
    3076:	04 e6       	ldi	r16, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:495
      }

      if (playerTwoPos != lastPlayerTwoPos) {
        drawCharacter(lastPlayerTwoPos, playerPlatform, 0, 0, 0);
      } else {
        drawCharacter(playerTwoPos, playerPlatform, 0, 0, 100);
    3078:	20 e0       	ldi	r18, 0x00	; 0
    307a:	40 e0       	ldi	r20, 0x00	; 0
    307c:	61 e7       	ldi	r22, 0x71	; 113
    307e:	72 e0       	ldi	r23, 0x02	; 2
    3080:	8d 2d       	mov	r24, r13
    3082:	eb ce       	rjmp	.-554    	; 0x2e5a <main+0x1ae8>
    3084:	5f ef       	ldi	r21, 0xFF	; 255
    3086:	85 1a       	sub	r8, r21
    3088:	95 0a       	sbc	r9, r21
    308a:	b1 10       	cpse	r11, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:517

      if (ballDirectionUp)  ballPosition -= 10 + ballEffect;

      if (!ballDirectionUp) ballPosition += 10 - ballEffect;

      for (uint8_t x = 0; x < arrayElements && colitionCheck; x++) {// if blocks are hited another array is created containing only killed enemies
    308c:	41 cf       	rjmp	.-382    	; 0x2f10 <main+0x1b9e>
main():
    308e:	a1 2c       	mov	r10, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:508
    }

    if ((interruptTimer - ballTimer > ballSpeed) && ballMovement) {
      ballTimer = interruptTimer;
      colitionCheck = true;
      ballOnPlatform = false;
    3090:	c3 51       	subi	r28, 0x13	; 19
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:510
      strip.setPixelColor(lastBallPosition, 0 , 0 , 0);
      lastBallPosition = ballPosition;
    3092:	df 4f       	sbci	r29, 0xFF	; 255
    3094:	18 83       	st	Y, r17
    3096:	cd 5e       	subi	r28, 0xED	; 237
    3098:	d0 40       	sbci	r29, 0x00	; 0
gameLedKanoid():
    309a:	10 2f       	mov	r17, r16
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:517

      if (ballDirectionUp)  ballPosition -= 10 + ballEffect;

      if (!ballDirectionUp) ballPosition += 10 - ballEffect;

      for (uint8_t x = 0; x < arrayElements && colitionCheck; x++) {// if blocks are hited another array is created containing only killed enemies
    309c:	b1 cf       	rjmp	.-158    	; 0x3000 <main+0x1c8e>
    309e:	b4 2c       	mov	r11, r4
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:518
        if (ballPosition  == (actualBlocks[x] + blocksPosition) && blocksDestroyed [x] != x) {
    30a0:	77 cf       	rjmp	.-274    	; 0x2f90 <main+0x1c1e>
    30a2:	1a 35       	cpi	r17, 0x5A	; 90
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:552
    } else if (ballPosition < 10) {
      playerOneScore += ledKanoidScore;
      ledKanoidLives = 0;
    }

    if (ballPosition > 89) {
    30a4:	e8 f0       	brcs	.+58     	; 0x30e0 <main+0x1d6e>
    30a6:	c9 51       	subi	r28, 0x19	; 25
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:554

      if (LedKanoidNumberOfplayers == 2) playerTwoScore += ledKanoidScore;
    30a8:	df 4f       	sbci	r29, 0xFF	; 255
    30aa:	b8 81       	ld	r27, Y
    30ac:	c7 5e       	subi	r28, 0xE7	; 231
    30ae:	d0 40       	sbci	r29, 0x00	; 0
    30b0:	b2 30       	cpi	r27, 0x02	; 2
    30b2:	19 f6       	brne	.-122    	; 0x303a <main+0x1cc8>
    30b4:	80 91 68 3b 	lds	r24, 0x3B68	; 0x803b68 <ledKanoidScore>
    30b8:	90 91 69 3b 	lds	r25, 0x3B69	; 0x803b69 <ledKanoidScore+0x1>
    30bc:	c5 51       	subi	r28, 0x15	; 21
    30be:	df 4f       	sbci	r29, 0xFF	; 255
    30c0:	e8 81       	ld	r30, Y
    30c2:	f9 81       	ldd	r31, Y+1	; 0x01
    30c4:	cb 5e       	subi	r28, 0xEB	; 235
    30c6:	d0 40       	sbci	r29, 0x00	; 0
    30c8:	e8 0f       	add	r30, r24
    30ca:	f9 1f       	adc	r31, r25
    30cc:	c5 51       	subi	r28, 0x15	; 21
    30ce:	df 4f       	sbci	r29, 0xFF	; 255
    30d0:	e8 83       	st	Y, r30
    30d2:	f9 83       	std	Y+1, r31	; 0x01
    30d4:	cb 5e       	subi	r28, 0xEB	; 235
    30d6:	d0 40       	sbci	r29, 0x00	; 0
    30d8:	b0 cf       	rjmp	.-160    	; 0x303a <main+0x1cc8>
main():
    30da:	e1 2c       	mov	r14, r1
gameLedKanoid():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:546
        beep(50);
      }
    }

    if (ballPosition < 10 && LedKanoidNumberOfplayers == 1) {
      ballDirectionUp =  false;
    30dc:	cc 24       	eor	r12, r12
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:545
        colitionCheck = false;
        beep(50);
      }
    }

    if (ballPosition < 10 && LedKanoidNumberOfplayers == 1) {
    30de:	c3 94       	inc	r12
    30e0:	a1 10       	cpse	r10, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:558

      if (LedKanoidNumberOfplayers == 2) playerTwoScore += ledKanoidScore;
      ledKanoidLives = 0;
    }

    for (uint8_t x = 10; x > 7 && !ballOnPlatform; x--) { // checks if ball touched player 1 platform and effect to the ball
    30e2:	14 c0       	rjmp	.+40     	; 0x310c <main+0x1d9a>
    30e4:	21 2f       	mov	r18, r17
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:560

      if (ballPosition == playerOnePos -  x) {
    30e6:	30 e0       	ldi	r19, 0x00	; 0
    30e8:	c1 51       	subi	r28, 0x11	; 17
    30ea:	df 4f       	sbci	r29, 0xFF	; 255
    30ec:	f8 81       	ld	r31, Y
    30ee:	cf 5e       	subi	r28, 0xEF	; 239
    30f0:	d0 40       	sbci	r29, 0x00	; 0
    30f2:	8f 2f       	mov	r24, r31
    30f4:	90 e0       	ldi	r25, 0x00	; 0
    30f6:	ac 01       	movw	r20, r24
    30f8:	4a 50       	subi	r20, 0x0A	; 10
    30fa:	51 09       	sbc	r21, r1
    30fc:	24 17       	cp	r18, r20
    30fe:	35 07       	cpc	r19, r21
    3100:	09 f0       	breq	.+2      	; 0x3104 <main+0x1d92>
    3102:	3b c1       	rjmp	.+630    	; 0x337a <main+0x2008>
main():
    3104:	ef 2c       	mov	r14, r15
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:561
        ballDirectionUp = true;
    3106:	8c e3       	ldi	r24, 0x3C	; 60
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:562
        ballTimer = 60;
    3108:	28 2e       	mov	r2, r24
    310a:	31 2c       	mov	r3, r1
gameLedKanoid():
    310c:	0f 2d       	mov	r16, r15
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:585
            break;
        }
      }
    }

    for (uint8_t x = 10; x < 13 && !ballOnPlatform && LedKanoidNumberOfplayers == 2; x++) { // checks if ball touched player 2 platform and effect to the ball
    310e:	21 c0       	rjmp	.+66     	; 0x3152 <main+0x1de0>
    3110:	01 11       	cpse	r16, r1
    3112:	1f c0       	rjmp	.+62     	; 0x3152 <main+0x1de0>
    3114:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:587

      if (ballPosition == (playerTwoPos + x)) {
    3116:	24 17       	cp	r18, r20
    3118:	35 07       	cpc	r19, r21
    311a:	b1 f4       	brne	.+44     	; 0x3148 <main+0x1dd6>
    311c:	8a 30       	cpi	r24, 0x0A	; 10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:591
        ballDirectionUp = false;
        ballTimer = 60;
        ballOnPlatform = true;
        switch (x) {
    311e:	31 f0       	breq	.+12     	; 0x312c <main+0x1dba>
    3120:	8c 30       	cpi	r24, 0x0C	; 12
    3122:	09 f4       	brne	.+2      	; 0x3126 <main+0x1db4>
    3124:	d3 c0       	rjmp	.+422    	; 0x32cc <main+0x1f5a>
main():
    3126:	0f 2d       	mov	r16, r15
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:590
    for (uint8_t x = 10; x < 13 && !ballOnPlatform && LedKanoidNumberOfplayers == 2; x++) { // checks if ball touched player 2 platform and effect to the ball

      if (ballPosition == (playerTwoPos + x)) {
        ballDirectionUp = false;
        ballTimer = 60;
        ballOnPlatform = true;
    3128:	e1 2c       	mov	r14, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:588
    }

    for (uint8_t x = 10; x < 13 && !ballOnPlatform && LedKanoidNumberOfplayers == 2; x++) { // checks if ball touched player 2 platform and effect to the ball

      if (ballPosition == (playerTwoPos + x)) {
        ballDirectionUp = false;
    312a:	0b c0       	rjmp	.+22     	; 0x3142 <main+0x1dd0>
    312c:	0f 2d       	mov	r16, r15
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:590
        ballTimer = 60;
        ballOnPlatform = true;
    312e:	e1 2c       	mov	r14, r1
gameLedKanoid():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:588
    }

    for (uint8_t x = 10; x < 13 && !ballOnPlatform && LedKanoidNumberOfplayers == 2; x++) { // checks if ball touched player 2 platform and effect to the ball

      if (ballPosition == (playerTwoPos + x)) {
        ballDirectionUp = false;
    3130:	1a 30       	cpi	r17, 0x0A	; 10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:594
        ballTimer = 60;
        ballOnPlatform = true;
        switch (x) {
          case (10):

            if (ballPosition == 10) {
    3132:	09 f4       	brne	.+2      	; 0x3136 <main+0x1dc4>
    3134:	d6 c0       	rjmp	.+428    	; 0x32e2 <main+0x1f70>
main():
    3136:	a1 e0       	ldi	r26, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:597
              ballEffect = -1;
            } else {
              ballEffect = 1;
    3138:	cd 51       	subi	r28, 0x1D	; 29
    313a:	df 4f       	sbci	r29, 0xFF	; 255
    313c:	a8 83       	st	Y, r26
    313e:	c3 5e       	subi	r28, 0xE3	; 227
    3140:	d0 40       	sbci	r29, 0x00	; 0
    3142:	9c e3       	ldi	r25, 0x3C	; 60
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:589

    for (uint8_t x = 10; x < 13 && !ballOnPlatform && LedKanoidNumberOfplayers == 2; x++) { // checks if ball touched player 2 platform and effect to the ball

      if (ballPosition == (playerTwoPos + x)) {
        ballDirectionUp = false;
        ballTimer = 60;
    3144:	29 2e       	mov	r2, r25
    3146:	31 2c       	mov	r3, r1
gameLedKanoid():
    3148:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:585
            break;
        }
      }
    }

    for (uint8_t x = 10; x < 13 && !ballOnPlatform && LedKanoidNumberOfplayers == 2; x++) { // checks if ball touched player 2 platform and effect to the ball
    314a:	4f 5f       	subi	r20, 0xFF	; 255
    314c:	5f 4f       	sbci	r21, 0xFF	; 255
    314e:	8d 30       	cpi	r24, 0x0D	; 13
    3150:	f9 f6       	brne	.-66     	; 0x3110 <main+0x1d9e>
    3152:	28 ee       	ldi	r18, 0xE8	; 232
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:612
            break;
        }
      }
    }

    if (buttonDebounce(0, 0, 1, 1000)) {//Pause menu
    3154:	33 e0       	ldi	r19, 0x03	; 3
    3156:	41 e0       	ldi	r20, 0x01	; 1
    3158:	60 e0       	ldi	r22, 0x00	; 0
    315a:	80 e0       	ldi	r24, 0x00	; 0
    315c:	0e 94 66 04 	call	0x8cc	; 0x8cc <buttonDebounce(bool, bool, bool, unsigned int)>
    3160:	88 23       	and	r24, r24
    3162:	f9 f0       	breq	.+62     	; 0x31a2 <main+0x1e30>
    3164:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <gameMenu()>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:613
      gameMenu ();
    3168:	9e 01       	movw	r18, r28
    316a:	2f 5f       	subi	r18, 0xFF	; 255
    316c:	3f 4f       	sbci	r19, 0xFF	; 255
    316e:	49 01       	movw	r8, r18
    3170:	ae 01       	movw	r20, r28
    3172:	47 53       	subi	r20, 0x37	; 55
    3174:	5f 4f       	sbci	r21, 0xFF	; 255
    3176:	3a 01       	movw	r6, r20
main():
    3178:	a1 2c       	mov	r10, r1
gameLedKanoid():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:614
      for (uint8_t x = 0; x < arrayElements; x++) {
    317a:	d3 01       	movw	r26, r6
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:615
        if (x != blocksDestroyed [x])  strip.setPixelColor(actualBlocks[x], 100, 0, 0);// led enemy position musn´t be less than 0
    317c:	8d 91       	ld	r24, X+
    317e:	3d 01       	movw	r6, r26
    3180:	8a 15       	cp	r24, r10
    3182:	41 f0       	breq	.+16     	; 0x3194 <main+0x1e22>
    3184:	f4 01       	movw	r30, r8
    3186:	80 81       	ld	r24, Z
    3188:	20 e0       	ldi	r18, 0x00	; 0
    318a:	40 e0       	ldi	r20, 0x00	; 0
    318c:	64 e6       	ldi	r22, 0x64	; 100
    318e:	90 e0       	ldi	r25, 0x00	; 0
    3190:	0e 94 9e 01 	call	0x33c	; 0x33c <tinyNeoPixel::setPixelColor(unsigned int, unsigned char, unsigned char, unsigned char) [clone .constprop.15]>
    3194:	a3 94       	inc	r10
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:614
      }
    }

    if (buttonDebounce(0, 0, 1, 1000)) {//Pause menu
      gameMenu ();
      for (uint8_t x = 0; x < arrayElements; x++) {
    3196:	ff ef       	ldi	r31, 0xFF	; 255
    3198:	8f 1a       	sub	r8, r31
    319a:	9f 0a       	sbc	r9, r31
    319c:	28 e1       	ldi	r18, 0x18	; 24
    319e:	a2 12       	cpse	r10, r18
    31a0:	ec cf       	rjmp	.-40     	; 0x317a <main+0x1e08>
    31a2:	c1 51       	subi	r28, 0x11	; 17
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:467
  encoder.encoderSetPosition (playerOnePos, 2);
  strip.setPixelColor(ballPosition, 80 , 80 , 0);

  while (ledKanoidLives != 0 && blocksRemaining != 0) {

    playerOnePos = encoder.encoderRead(90, 97, false, 2);
    31a4:	df 4f       	sbci	r29, 0xFF	; 255
    31a6:	98 80       	ld	r9, Y
    31a8:	cf 5e       	subi	r28, 0xEF	; 239
    31aa:	d0 40       	sbci	r29, 0x00	; 0
    31ac:	80 91 71 3b 	lds	r24, 0x3B71	; 0x803b71 <endGame>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:619
      for (uint8_t x = 0; x < arrayElements; x++) {
        if (x != blocksDestroyed [x])  strip.setPixelColor(actualBlocks[x], 100, 0, 0);// led enemy position musn´t be less than 0
      }
    }

    if (endGame)  break;
    31b0:	88 23       	and	r24, r24
    31b2:	09 f4       	brne	.+2      	; 0x31b6 <main+0x1e44>
    31b4:	56 cf       	rjmp	.-340    	; 0x3062 <main+0x1cf0>
    31b6:	0e 94 9c 06 	call	0xd38	; 0xd38 <tinyNeoPixel::clear() [clone .constprop.10]>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:621
  }
  strip.clear();
    31ba:	cb 51       	subi	r28, 0x1B	; 27
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:623

  if (blocksRemaining == 0) {// go to next level
    31bc:	df 4f       	sbci	r29, 0xFF	; 255
    31be:	38 81       	ld	r19, Y
    31c0:	c5 5e       	subi	r28, 0xE5	; 229
    31c2:	d0 40       	sbci	r29, 0x00	; 0
    31c4:	31 11       	cpse	r19, r1
    31c6:	26 c0       	rjmp	.+76     	; 0x3214 <main+0x1ea2>
    31c8:	80 91 1e 3a 	lds	r24, 0x3A1E	; 0x803a1e <gameLevel>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:624
    gameLevel++;
    31cc:	8f 5f       	subi	r24, 0xFF	; 255
    31ce:	80 93 1e 3a 	sts	0x3A1E, r24	; 0x803a1e <gameLevel>
    31d2:	84 36       	cpi	r24, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:626

    if (gameLevel > 99) {// for now  game continues only to level 99
    31d4:	f8 f0       	brcs	.+62     	; 0x3214 <main+0x1ea2>
    31d6:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:627
      drawCharacter(20, letterW, 100, 0, 0);
    31d8:	20 e0       	ldi	r18, 0x00	; 0
    31da:	44 e6       	ldi	r20, 0x64	; 100
    31dc:	61 e5       	ldi	r22, 0x51	; 81
    31de:	72 e0       	ldi	r23, 0x02	; 2
    31e0:	84 e1       	ldi	r24, 0x14	; 20
    31e2:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    31e6:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:628
      drawCharacter(23, letterI, 100, 0, 0);
    31e8:	44 e6       	ldi	r20, 0x64	; 100
    31ea:	6c e4       	ldi	r22, 0x4C	; 76
    31ec:	72 e0       	ldi	r23, 0x02	; 2
    31ee:	87 e1       	ldi	r24, 0x17	; 23
    31f0:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    31f4:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:629
      drawCharacter(26, letterN, 100, 0, 0);
    31f6:	44 e6       	ldi	r20, 0x64	; 100
    31f8:	60 e4       	ldi	r22, 0x40	; 64
    31fa:	72 e0       	ldi	r23, 0x02	; 2
    31fc:	8a e1       	ldi	r24, 0x1A	; 26
    31fe:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
_delay_ms():
    3202:	4f ef       	ldi	r20, 0xFF	; 255
c:\users\gross\appdata\local\arduino15\packages\dxcore\tools\avr-gcc\7.3.0-atmel3.6.1-azduino6\avr\include\util/delay.h:187
    3204:	53 ed       	ldi	r21, 0xD3	; 211
    3206:	80 e3       	ldi	r24, 0x30	; 48
    3208:	41 50       	subi	r20, 0x01	; 1
    320a:	50 40       	sbci	r21, 0x00	; 0
    320c:	80 40       	sbci	r24, 0x00	; 0
    320e:	e1 f7       	brne	.-8      	; 0x3208 <main+0x1e96>
    3210:	00 c0       	rjmp	.+0      	; 0x3212 <main+0x1ea0>
    3212:	00 00       	nop
gameLedKanoid():
    3214:	c1 10       	cpse	r12, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:634
      delay(2000);
    }
  }

  if (ledKanoidLives == 0) gameLevel = 1;// Game over
    3216:	03 c0       	rjmp	.+6      	; 0x321e <main+0x1eac>
    3218:	81 e0       	ldi	r24, 0x01	; 1
    321a:	80 93 1e 3a 	sts	0x3A1E, r24	; 0x803a1e <gameLevel>
    321e:	80 91 68 3b 	lds	r24, 0x3B68	; 0x803b68 <ledKanoidScore>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:636

  if (ledKanoidScore > 999) ledKanoidScore = 999;
    3222:	90 91 69 3b 	lds	r25, 0x3B69	; 0x803b69 <ledKanoidScore+0x1>
    3226:	88 3e       	cpi	r24, 0xE8	; 232
    3228:	93 40       	sbci	r25, 0x03	; 3
    322a:	30 f0       	brcs	.+12     	; 0x3238 <main+0x1ec6>
    322c:	87 ee       	ldi	r24, 0xE7	; 231
    322e:	93 e0       	ldi	r25, 0x03	; 3
    3230:	80 93 68 3b 	sts	0x3B68, r24	; 0x803b68 <ledKanoidScore>
    3234:	90 93 69 3b 	sts	0x3B69, r25	; 0x803b69 <ledKanoidScore+0x1>
    3238:	80 91 6a 3b 	lds	r24, 0x3B6A	; 0x803b6a <LedKanoidNumberOfplayers>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:638

  if ( LedKanoidNumberOfplayers == 2) {
    323c:	82 30       	cpi	r24, 0x02	; 2
    323e:	89 f5       	brne	.+98     	; 0x32a2 <main+0x1f30>
    3240:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:639
    drawCharacter(0, letterP, 100, 0, 0);
    3242:	20 e0       	ldi	r18, 0x00	; 0
    3244:	44 e6       	ldi	r20, 0x64	; 100
    3246:	6e e8       	ldi	r22, 0x8E	; 142
    3248:	72 e0       	ldi	r23, 0x02	; 2
    324a:	80 e0       	ldi	r24, 0x00	; 0
    324c:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    3250:	c7 51       	subi	r28, 0x17	; 23
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:641

    if (playerOneScore > playerTwoScore) {
    3252:	df 4f       	sbci	r29, 0xFF	; 255
    3254:	e8 81       	ld	r30, Y
    3256:	f9 81       	ldd	r31, Y+1	; 0x01
    3258:	c9 5e       	subi	r28, 0xE9	; 233
    325a:	d0 40       	sbci	r29, 0x00	; 0
    325c:	c5 51       	subi	r28, 0x15	; 21
    325e:	df 4f       	sbci	r29, 0xFF	; 255
    3260:	28 81       	ld	r18, Y
    3262:	39 81       	ldd	r19, Y+1	; 0x01
    3264:	cb 5e       	subi	r28, 0xEB	; 235
    3266:	d0 40       	sbci	r29, 0x00	; 0
    3268:	04 e6       	ldi	r16, 0x64	; 100
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:642
      drawCharacter(3, number1, 0, 0, 100);
    326a:	2e 17       	cp	r18, r30
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:641
  if (ledKanoidScore > 999) ledKanoidScore = 999;

  if ( LedKanoidNumberOfplayers == 2) {
    drawCharacter(0, letterP, 100, 0, 0);

    if (playerOneScore > playerTwoScore) {
    326c:	3f 07       	cpc	r19, r31
    326e:	08 f0       	brcs	.+2      	; 0x3272 <main+0x1f00>
    3270:	46 c0       	rjmp	.+140    	; 0x32fe <main+0x1f8c>
    3272:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:642
      drawCharacter(3, number1, 0, 0, 100);
    3274:	40 e0       	ldi	r20, 0x00	; 0
    3276:	6a e3       	ldi	r22, 0x3A	; 58
    3278:	72 e0       	ldi	r23, 0x02	; 2
    327a:	83 e0       	ldi	r24, 0x03	; 3
    327c:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    3280:	c7 51       	subi	r28, 0x17	; 23
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:643
      showScore(playerOneScore);
    3282:	df 4f       	sbci	r29, 0xFF	; 255
    3284:	88 81       	ld	r24, Y
    3286:	99 81       	ldd	r25, Y+1	; 0x01
    3288:	c9 5e       	subi	r28, 0xE9	; 233
    328a:	d0 40       	sbci	r29, 0x00	; 0
    328c:	0e 94 2b 04 	call	0x856	; 0x856 <showScore(unsigned int)>
_delay_ms():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:646
    } else {
      drawCharacter(3, number2, 0, 0, 100);
      showScore(playerTwoScore);
    3290:	3f ef       	ldi	r19, 0xFF	; 255
c:\users\gross\appdata\local\arduino15\packages\dxcore\tools\avr-gcc\7.3.0-atmel3.6.1-azduino6\avr\include\util/delay.h:187
    3292:	49 e6       	ldi	r20, 0x69	; 105
    3294:	58 e1       	ldi	r21, 0x18	; 24
    3296:	31 50       	subi	r19, 0x01	; 1
    3298:	40 40       	sbci	r20, 0x00	; 0
    329a:	50 40       	sbci	r21, 0x00	; 0
    329c:	e1 f7       	brne	.-8      	; 0x3296 <main+0x1f24>
    329e:	00 c0       	rjmp	.+0      	; 0x32a0 <main+0x1f2e>
    32a0:	00 00       	nop
gameLedKanoid():
    32a2:	6b e0       	ldi	r22, 0x0B	; 11
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:650
    }
    delay(1000);
  }
  endGameMenu(ledKanoidScore, 11);
    32a4:	80 91 68 3b 	lds	r24, 0x3B68	; 0x803b68 <ledKanoidScore>
    32a8:	90 91 69 3b 	lds	r25, 0x3B69	; 0x803b69 <ledKanoidScore+0x1>
    32ac:	0e 94 24 08 	call	0x1048	; 0x1048 <endGameMenu(unsigned int, unsigned char)>
    32b0:	10 92 68 3b 	sts	0x3B68, r1	; 0x803b68 <ledKanoidScore>
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:651
  ledKanoidScore = 0;
    32b4:	10 92 69 3b 	sts	0x3B69, r1	; 0x803b69 <ledKanoidScore+0x1>
    32b8:	cc 50       	subi	r28, 0x0C	; 12
    32ba:	df 4f       	sbci	r29, 0xFF	; 255
    32bc:	88 81       	ld	r24, Y
    32be:	99 81       	ldd	r25, Y+1	; 0x01
    32c0:	c4 5f       	subi	r28, 0xF4	; 244
    32c2:	d0 40       	sbci	r29, 0x00	; 0
    32c4:	8d bf       	out	0x3d, r24	; 61
    32c6:	9e bf       	out	0x3e, r25	; 62
    32c8:	0c 94 43 0d 	jmp	0x1a86	; 0x1a86 <main+0x714>
main():
    32cc:	0f 2d       	mov	r16, r15
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:590
    for (uint8_t x = 10; x < 13 && !ballOnPlatform && LedKanoidNumberOfplayers == 2; x++) { // checks if ball touched player 2 platform and effect to the ball

      if (ballPosition == (playerTwoPos + x)) {
        ballDirectionUp = false;
        ballTimer = 60;
        ballOnPlatform = true;
    32ce:	e1 2c       	mov	r14, r1
gameLedKanoid():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:588
    }

    for (uint8_t x = 10; x < 13 && !ballOnPlatform && LedKanoidNumberOfplayers == 2; x++) { // checks if ball touched player 2 platform and effect to the ball

      if (ballPosition == (playerTwoPos + x)) {
        ballDirectionUp = false;
    32d0:	13 31       	cpi	r17, 0x13	; 19
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:602
              ballEffect = 1;
            }
            break;
          case (12):

            if (ballPosition == 19) {
    32d2:	71 f0       	breq	.+28     	; 0x32f0 <main+0x1f7e>
main():
    32d4:	bf ef       	ldi	r27, 0xFF	; 255
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:605
              ballEffect = 1;
            } else {
              ballEffect = -1;
    32d6:	cd 51       	subi	r28, 0x1D	; 29
    32d8:	df 4f       	sbci	r29, 0xFF	; 255
    32da:	b8 83       	st	Y, r27
    32dc:	c3 5e       	subi	r28, 0xE3	; 227
    32de:	d0 40       	sbci	r29, 0x00	; 0
    32e0:	30 cf       	rjmp	.-416    	; 0x3142 <main+0x1dd0>
    32e2:	ef ef       	ldi	r30, 0xFF	; 255
    32e4:	cd 51       	subi	r28, 0x1D	; 29
    32e6:	df 4f       	sbci	r29, 0xFF	; 255
    32e8:	e8 83       	st	Y, r30
    32ea:	c3 5e       	subi	r28, 0xE3	; 227
    32ec:	d0 40       	sbci	r29, 0x00	; 0
    32ee:	29 cf       	rjmp	.-430    	; 0x3142 <main+0x1dd0>
    32f0:	f1 e0       	ldi	r31, 0x01	; 1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:597
          case (10):

            if (ballPosition == 10) {
              ballEffect = -1;
            } else {
              ballEffect = 1;
    32f2:	cd 51       	subi	r28, 0x1D	; 29
    32f4:	df 4f       	sbci	r29, 0xFF	; 255
    32f6:	f8 83       	st	Y, r31
    32f8:	c3 5e       	subi	r28, 0xE3	; 227
    32fa:	d0 40       	sbci	r29, 0x00	; 0
    32fc:	22 cf       	rjmp	.-444    	; 0x3142 <main+0x1dd0>
gameLedKanoid():
    32fe:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:645

    if (playerOneScore > playerTwoScore) {
      drawCharacter(3, number1, 0, 0, 100);
      showScore(playerOneScore);
    } else {
      drawCharacter(3, number2, 0, 0, 100);
    3300:	40 e0       	ldi	r20, 0x00	; 0
    3302:	6e e2       	ldi	r22, 0x2E	; 46
    3304:	72 e0       	ldi	r23, 0x02	; 2
    3306:	83 e0       	ldi	r24, 0x03	; 3
    3308:	0e 94 99 03 	call	0x732	; 0x732 <drawCharacter(unsigned char, unsigned char*, unsigned char, unsigned char, unsigned char)>
    330c:	c5 51       	subi	r28, 0x15	; 21
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:646
      showScore(playerTwoScore);
    330e:	df 4f       	sbci	r29, 0xFF	; 255
    3310:	88 81       	ld	r24, Y
    3312:	99 81       	ldd	r25, Y+1	; 0x01
    3314:	cb 5e       	subi	r28, 0xEB	; 235
    3316:	d0 40       	sbci	r29, 0x00	; 0
    3318:	b9 cf       	rjmp	.-142    	; 0x328c <main+0x1f1a>
main():
    331a:	c1 2c       	mov	r12, r1
gameLedTris():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:800
        for ( uint8_t column = 0; column < 10; column++ ) {

          // allow or not to move left and right
          if ((pgm_read_byte_near (actualTetromino[0] + x) + (tetrominoPos - 1)) == tetrominoInPos [row][column]) tetrominoMoveLeft = false;

          if ((pgm_read_byte_near (actualTetromino[0] + x) + (tetrominoPos + 1)) == tetrominoInPos [row][column]) tetrominoMoveRight = false;
    331c:	10 13       	cpse	r17, r16
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:802

          if (tetrominoRotation != tetrominoLastRotation) {// only if rotation happen the tetromino is checked and positioned in a valid place
    331e:	17 ca       	rjmp	.-3026   	; 0x274e <main+0x13dc>
    3320:	64 91       	lpm	r22, Z
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:816
              if ((pgm_read_byte_near (actualTetromino[0] + x) + tetrominoPos) == tetrominoInPos [row][column]) tetrominoPos++;
            }
          } else {
            // checks if the tetromino touched another or the bottom floor

            if ((pgm_read_byte_near (actualTetromino[0] + x) + (tetrominoPos + 10)) == tetrominoInPos [row][column] || (pgm_read_byte_near (actualTetromino[0] + x) + tetrominoPos) > 89) {
    3322:	a7 01       	movw	r20, r14
    3324:	46 5f       	subi	r20, 0xF6	; 246
    3326:	5f 4f       	sbci	r21, 0xFF	; 255
    3328:	46 0f       	add	r20, r22
    332a:	51 1d       	adc	r21, r1
    332c:	84 17       	cp	r24, r20
    332e:	95 07       	cpc	r25, r21
    3330:	41 f0       	breq	.+16     	; 0x3342 <main+0x1fd0>
    3332:	84 91       	lpm	r24, Z
    3334:	8e 0d       	add	r24, r14
    3336:	9f 2d       	mov	r25, r15
    3338:	91 1d       	adc	r25, r1
    333a:	8a 35       	cpi	r24, 0x5A	; 90
    333c:	91 05       	cpc	r25, r1
    333e:	0c f4       	brge	.+2      	; 0x3342 <main+0x1fd0>
    3340:	1a ca       	rjmp	.-3020   	; 0x2776 <main+0x1404>
    3342:	84 91       	lpm	r24, Z
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:819
              tetrominoStop = true;

              if ((pgm_read_byte_near (actualTetromino[0] + x) + tetrominoPos) < 9) {//  if its stops on the top row game is over
    3344:	8e 0d       	add	r24, r14
    3346:	9f 2d       	mov	r25, r15
    3348:	91 1d       	adc	r25, r1
main():
    334a:	54 2c       	mov	r5, r4
gameLedTris():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:817
            }
          } else {
            // checks if the tetromino touched another or the bottom floor

            if ((pgm_read_byte_near (actualTetromino[0] + x) + (tetrominoPos + 10)) == tetrominoInPos [row][column] || (pgm_read_byte_near (actualTetromino[0] + x) + tetrominoPos) > 89) {
              tetrominoStop = true;
    334c:	09 97       	sbiw	r24, 0x09	; 9
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:819

              if ((pgm_read_byte_near (actualTetromino[0] + x) + tetrominoPos) < 9) {//  if its stops on the top row game is over
    334e:	0c f0       	brlt	.+2      	; 0x3352 <main+0x1fe0>
    3350:	12 ca       	rjmp	.-3036   	; 0x2776 <main+0x1404>
main():
    3352:	d1 2c       	mov	r13, r1
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:820
                ledtrisLives = 0;
    3354:	16 ca       	rjmp	.-3028   	; 0x2782 <main+0x1410>
gameLedTris():
    3356:	e6 14       	cp	r14, r6
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:837
    if (tetrominoRotation != tetrominoLastRotation && actualTetromino[0] == tetromino3B && tetrominoMoveLeft) tetrominoPos--;

    if (tetrominoRotation != tetrominoLastRotation && actualTetromino[0] == tetromino3A && tetrominoMoveRight) tetrominoPos++;

    //Here it draws the screen
    if (tetrominoPos != tetrominoLastPos || tetrominoRotation != tetrominoLastRotation) {
    3358:	f7 04       	cpc	r15, r7
    335a:	09 f4       	brne	.+2      	; 0x335e <main+0x1fec>
    335c:	5a ca       	rjmp	.-2892   	; 0x2812 <main+0x14a0>
    335e:	40 ca       	rjmp	.-2944   	; 0x27e0 <main+0x146e>
    3360:	93 e0       	ldi	r25, 0x03	; 3
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:834
    if (ledtrisLives == 0)  break; //stops the while loop

    //The tetromino3B looks odd if not moved one place when rotated
    if (tetrominoRotation != tetrominoLastRotation && actualTetromino[0] == tetromino3B && tetrominoMoveLeft) tetrominoPos--;

    if (tetrominoRotation != tetrominoLastRotation && actualTetromino[0] == tetromino3A && tetrominoMoveRight) tetrominoPos++;
    3362:	29 16       	cp	r2, r25
    3364:	92 e0       	ldi	r25, 0x02	; 2
    3366:	39 06       	cpc	r3, r25
    3368:	09 f0       	breq	.+2      	; 0x336c <main+0x1ffa>
    336a:	3a ca       	rjmp	.-2956   	; 0x27e0 <main+0x146e>
    336c:	cc 20       	and	r12, r12
    336e:	09 f4       	brne	.+2      	; 0x3372 <main+0x2000>
    3370:	37 ca       	rjmp	.-2962   	; 0x27e0 <main+0x146e>
    3372:	9f ef       	ldi	r25, 0xFF	; 255
    3374:	e9 1a       	sub	r14, r25
    3376:	f9 0a       	sbc	r15, r25
    3378:	33 ca       	rjmp	.-2970   	; 0x27e0 <main+0x146e>
gameLedKanoid():
    337a:	ac 01       	movw	r20, r24
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:560
      ledKanoidLives = 0;
    }

    for (uint8_t x = 10; x > 7 && !ballOnPlatform; x--) { // checks if ball touched player 1 platform and effect to the ball

      if (ballPosition == playerOnePos -  x) {
    337c:	49 50       	subi	r20, 0x09	; 9
    337e:	51 09       	sbc	r21, r1
    3380:	42 17       	cp	r20, r18
    3382:	53 07       	cpc	r21, r19
    3384:	09 f4       	brne	.+2      	; 0x3388 <main+0x2016>
    3386:	be ce       	rjmp	.-644    	; 0x3104 <main+0x1d92>
    3388:	08 97       	sbiw	r24, 0x08	; 8
    338a:	82 17       	cp	r24, r18
    338c:	93 07       	cpc	r25, r19
    338e:	09 f4       	brne	.+2      	; 0x3392 <main+0x2020>
    3390:	b9 ce       	rjmp	.-654    	; 0x3104 <main+0x1d92>
    3392:	4d 2d       	mov	r20, r13
    3394:	50 e0       	ldi	r21, 0x00	; 0
    3396:	46 5f       	subi	r20, 0xF6	; 246
    3398:	5f 4f       	sbci	r21, 0xFF	; 255
    339a:	8a e0       	ldi	r24, 0x0A	; 10
    339c:	c9 51       	subi	r28, 0x19	; 25
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:585
            break;
        }
      }
    }

    for (uint8_t x = 10; x < 13 && !ballOnPlatform && LedKanoidNumberOfplayers == 2; x++) { // checks if ball touched player 2 platform and effect to the ball
    339e:	df 4f       	sbci	r29, 0xFF	; 255
    33a0:	98 81       	ld	r25, Y
    33a2:	c7 5e       	subi	r28, 0xE7	; 231
    33a4:	d0 40       	sbci	r29, 0x00	; 0
    33a6:	92 30       	cpi	r25, 0x02	; 2
    33a8:	09 f4       	brne	.+2      	; 0x33ac <main+0x203a>
    33aa:	b4 ce       	rjmp	.-664    	; 0x3114 <main+0x1da2>
    33ac:	00 e0       	ldi	r16, 0x00	; 0
    33ae:	d1 ce       	rjmp	.-606    	; 0x3152 <main+0x1de0>
gameFlappyLed():
    33b0:	69 e0       	ldi	r22, 0x09	; 9
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:732

    if (endGame) break;
  }

  if (!endGame) {
    endGameMenu(flappyLedscore, 9);
    33b2:	c7 01       	movw	r24, r14
    33b4:	5f cb       	rjmp	.-2370   	; 0x2a74 <main+0x1702>

000033b6 <_GLOBAL__sub_I_levelText1>:
_GLOBAL__sub_I_levelText1():
    33b6:	e4 e8       	ldi	r30, 0x84	; 132
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:53

#include "tinyNeoPixel_Static.h"

// Constructor when length, pin and type are known at compile-time:
tinyNeoPixel::tinyNeoPixel(uint16_t n, uint8_t p, neoPixelType t, uint8_t *pxl) :
  brightness(0), pixels(pxl), endTime(0) {
    33b8:	fb e3       	ldi	r31, 0x3B	; 59
    33ba:	15 82       	std	Z+5, r1	; 0x05
    33bc:	81 e3       	ldi	r24, 0x31	; 49
    33be:	9a e3       	ldi	r25, 0x3A	; 58
    33c0:	86 83       	std	Z+6, r24	; 0x06
    33c2:	97 83       	std	Z+7, r25	; 0x07
    33c4:	14 86       	std	Z+12, r1	; 0x0c
    33c6:	15 86       	std	Z+13, r1	; 0x0d
    33c8:	16 86       	std	Z+14, r1	; 0x0e
    33ca:	17 86       	std	Z+15, r1	; 0x0f
    33cc:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:55
  // boolean oldThreeBytesPerPixel = (wOffset == rOffset); // false if RGBW
  wOffset = (t >> 6) & 0b11; // See notes in header file
    33ce:	83 87       	std	Z+11, r24	; 0x0b
    33d0:	80 87       	std	Z+8, r24	; 0x08
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:56
  rOffset = (t >> 4) & 0b11; // regarding R/G/B/W offsets
    33d2:	11 86       	std	Z+9, r1	; 0x09
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:57
  gOffset = (t >> 2) & 0b11;
    33d4:	92 e0       	ldi	r25, 0x02	; 2
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:58
  bOffset =  t       & 0b11;
    33d6:	92 87       	std	Z+10, r25	; 0x0a
    33d8:	2c e2       	ldi	r18, 0x2C	; 44
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:59
  numBytes = n * ((wOffset == rOffset) ? 3 : 4);
    33da:	31 e0       	ldi	r19, 0x01	; 1
    33dc:	22 83       	std	Z+2, r18	; 0x02
    33de:	33 83       	std	Z+3, r19	; 0x03
    33e0:	24 e6       	ldi	r18, 0x64	; 100
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:60
  numLEDs = n;
    33e2:	30 e0       	ldi	r19, 0x00	; 0
    33e4:	20 83       	st	Z, r18
    33e6:	31 83       	std	Z+1, r19	; 0x01
    33e8:	97 e0       	ldi	r25, 0x07	; 7
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:61
  pin = p;
    33ea:	94 83       	std	Z+4, r25	; 0x04
    33ec:	24 e2       	ldi	r18, 0x24	; 36
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:62
  port    = portOutputRegister(digitalPinToPort(p));
    33ee:	34 e0       	ldi	r19, 0x04	; 4
    33f0:	20 8b       	std	Z+16, r18	; 0x10
    33f2:	31 8b       	std	Z+17, r19	; 0x11
    33f4:	82 8b       	std	Z+18, r24	; 0x12
C:\Users\gross\AppData\Local\Arduino15\packages\megaTinyCore\hardware\megaavr\2.6.5\libraries\tinyNeoPixel_Static/tinyNeoPixel_Static.cpp:63
  pinMask = digitalPinToBitMask(p);
    33f6:	08 95       	ret

000033f8 <random_r>:
random_r():
C:\Users\gross\OneDrive\Arduino\LEDBOY\LEDBOY Games\LedBoyGamePackA_3.7/LedBoyGamePackA_3.7.ino:1585
    PORTA.PIN6CTRL &= ~PORT_ISC_gm; // detach interrupt
    sleep_disable();
  }
  shouldWakeUp = true;
  textScrolling = false;
}
    33f8:	8f 92       	push	r8
    33fa:	9f 92       	push	r9
    33fc:	af 92       	push	r10
    33fe:	bf 92       	push	r11
    3400:	cf 92       	push	r12
    3402:	df 92       	push	r13
    3404:	ef 92       	push	r14
    3406:	ff 92       	push	r15
    3408:	cf 93       	push	r28
    340a:	df 93       	push	r29
    340c:	ec 01       	movw	r28, r24
    340e:	68 81       	ld	r22, Y
    3410:	79 81       	ldd	r23, Y+1	; 0x01
    3412:	8a 81       	ldd	r24, Y+2	; 0x02
    3414:	9b 81       	ldd	r25, Y+3	; 0x03
    3416:	61 15       	cp	r22, r1
    3418:	71 05       	cpc	r23, r1
    341a:	81 05       	cpc	r24, r1
    341c:	91 05       	cpc	r25, r1
    341e:	21 f4       	brne	.+8      	; 0x3428 <random_r+0x30>
    3420:	64 e2       	ldi	r22, 0x24	; 36
    3422:	79 ed       	ldi	r23, 0xD9	; 217
    3424:	8b e5       	ldi	r24, 0x5B	; 91
    3426:	97 e0       	ldi	r25, 0x07	; 7
    3428:	2d e1       	ldi	r18, 0x1D	; 29
    342a:	33 ef       	ldi	r19, 0xF3	; 243
    342c:	41 e0       	ldi	r20, 0x01	; 1
    342e:	50 e0       	ldi	r21, 0x00	; 0
    3430:	9d d0       	rcall	.+314    	; 0x356c <__divmodsi4>
    3432:	49 01       	movw	r8, r18
    3434:	5a 01       	movw	r10, r20
    3436:	9b 01       	movw	r18, r22
    3438:	ac 01       	movw	r20, r24
    343a:	a7 ea       	ldi	r26, 0xA7	; 167
    343c:	b1 e4       	ldi	r27, 0x41	; 65
    343e:	b2 d0       	rcall	.+356    	; 0x35a4 <__muluhisi3>
    3440:	6b 01       	movw	r12, r22
    3442:	7c 01       	movw	r14, r24
    3444:	ac ee       	ldi	r26, 0xEC	; 236
    3446:	b4 ef       	ldi	r27, 0xF4	; 244
    3448:	a5 01       	movw	r20, r10
    344a:	94 01       	movw	r18, r8
    344c:	b7 d0       	rcall	.+366    	; 0x35bc <__mulohisi3>
    344e:	c6 0e       	add	r12, r22
    3450:	d7 1e       	adc	r13, r23
    3452:	e8 1e       	adc	r14, r24
    3454:	f9 1e       	adc	r15, r25
    3456:	f7 fe       	sbrs	r15, 7
    3458:	06 c0       	rjmp	.+12     	; 0x3466 <random_r+0x6e>
    345a:	81 e0       	ldi	r24, 0x01	; 1
    345c:	c8 1a       	sub	r12, r24
    345e:	d1 08       	sbc	r13, r1
    3460:	e1 08       	sbc	r14, r1
    3462:	80 e8       	ldi	r24, 0x80	; 128
    3464:	f8 0a       	sbc	r15, r24
    3466:	c8 82       	st	Y, r12
    3468:	d9 82       	std	Y+1, r13	; 0x01
    346a:	ea 82       	std	Y+2, r14	; 0x02
    346c:	fb 82       	std	Y+3, r15	; 0x03
    346e:	c7 01       	movw	r24, r14
    3470:	b6 01       	movw	r22, r12
    3472:	9f 77       	andi	r25, 0x7F	; 127
    3474:	df 91       	pop	r29
    3476:	cf 91       	pop	r28
    3478:	ff 90       	pop	r15
    347a:	ef 90       	pop	r14
    347c:	df 90       	pop	r13
    347e:	cf 90       	pop	r12
    3480:	bf 90       	pop	r11
    3482:	af 90       	pop	r10
    3484:	9f 90       	pop	r9
    3486:	8f 90       	pop	r8
    3488:	08 95       	ret

0000348a <random>:
random():
    348a:	8f 92       	push	r8
    348c:	9f 92       	push	r9
    348e:	af 92       	push	r10
    3490:	bf 92       	push	r11
    3492:	cf 92       	push	r12
    3494:	df 92       	push	r13
    3496:	ef 92       	push	r14
    3498:	ff 92       	push	r15
    349a:	60 91 21 3a 	lds	r22, 0x3A21	; 0x803a21 <next>
    349e:	70 91 22 3a 	lds	r23, 0x3A22	; 0x803a22 <next+0x1>
    34a2:	80 91 23 3a 	lds	r24, 0x3A23	; 0x803a23 <next+0x2>
    34a6:	90 91 24 3a 	lds	r25, 0x3A24	; 0x803a24 <next+0x3>
    34aa:	61 15       	cp	r22, r1
    34ac:	71 05       	cpc	r23, r1
    34ae:	81 05       	cpc	r24, r1
    34b0:	91 05       	cpc	r25, r1
    34b2:	21 f4       	brne	.+8      	; 0x34bc <random+0x32>
    34b4:	64 e2       	ldi	r22, 0x24	; 36
    34b6:	79 ed       	ldi	r23, 0xD9	; 217
    34b8:	8b e5       	ldi	r24, 0x5B	; 91
    34ba:	97 e0       	ldi	r25, 0x07	; 7
    34bc:	2d e1       	ldi	r18, 0x1D	; 29
    34be:	33 ef       	ldi	r19, 0xF3	; 243
    34c0:	41 e0       	ldi	r20, 0x01	; 1
    34c2:	50 e0       	ldi	r21, 0x00	; 0
    34c4:	53 d0       	rcall	.+166    	; 0x356c <__divmodsi4>
    34c6:	49 01       	movw	r8, r18
    34c8:	5a 01       	movw	r10, r20
    34ca:	9b 01       	movw	r18, r22
    34cc:	ac 01       	movw	r20, r24
    34ce:	a7 ea       	ldi	r26, 0xA7	; 167
    34d0:	b1 e4       	ldi	r27, 0x41	; 65
    34d2:	68 d0       	rcall	.+208    	; 0x35a4 <__muluhisi3>
    34d4:	6b 01       	movw	r12, r22
    34d6:	7c 01       	movw	r14, r24
    34d8:	ac ee       	ldi	r26, 0xEC	; 236
    34da:	b4 ef       	ldi	r27, 0xF4	; 244
    34dc:	a5 01       	movw	r20, r10
    34de:	94 01       	movw	r18, r8
    34e0:	6d d0       	rcall	.+218    	; 0x35bc <__mulohisi3>
    34e2:	c6 0e       	add	r12, r22
    34e4:	d7 1e       	adc	r13, r23
    34e6:	e8 1e       	adc	r14, r24
    34e8:	f9 1e       	adc	r15, r25
    34ea:	f7 fe       	sbrs	r15, 7
    34ec:	06 c0       	rjmp	.+12     	; 0x34fa <random+0x70>
    34ee:	81 e0       	ldi	r24, 0x01	; 1
    34f0:	c8 1a       	sub	r12, r24
    34f2:	d1 08       	sbc	r13, r1
    34f4:	e1 08       	sbc	r14, r1
    34f6:	80 e8       	ldi	r24, 0x80	; 128
    34f8:	f8 0a       	sbc	r15, r24
    34fa:	c0 92 21 3a 	sts	0x3A21, r12	; 0x803a21 <next>
    34fe:	d0 92 22 3a 	sts	0x3A22, r13	; 0x803a22 <next+0x1>
    3502:	e0 92 23 3a 	sts	0x3A23, r14	; 0x803a23 <next+0x2>
    3506:	f0 92 24 3a 	sts	0x3A24, r15	; 0x803a24 <next+0x3>
    350a:	c7 01       	movw	r24, r14
    350c:	b6 01       	movw	r22, r12
    350e:	9f 77       	andi	r25, 0x7F	; 127
    3510:	ff 90       	pop	r15
    3512:	ef 90       	pop	r14
    3514:	df 90       	pop	r13
    3516:	cf 90       	pop	r12
    3518:	bf 90       	pop	r11
    351a:	af 90       	pop	r10
    351c:	9f 90       	pop	r9
    351e:	8f 90       	pop	r8
    3520:	08 95       	ret

00003522 <srandom>:
srandom():
    3522:	60 93 21 3a 	sts	0x3A21, r22	; 0x803a21 <next>
    3526:	70 93 22 3a 	sts	0x3A22, r23	; 0x803a22 <next+0x1>
    352a:	80 93 23 3a 	sts	0x3A23, r24	; 0x803a23 <next+0x2>
    352e:	90 93 24 3a 	sts	0x3A24, r25	; 0x803a24 <next+0x3>
    3532:	08 95       	ret

00003534 <eeprom_read_byte>:
eeprom_read_byte():
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eerd_byte.S:51
    3534:	03 d0       	rcall	.+6      	; 0x353c <eeprom_mapen>
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eerd_byte.S:52
    3536:	80 81       	ld	r24, Z
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eerd_byte.S:53
    3538:	99 27       	eor	r25, r25
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eerd_byte.S:54
    353a:	08 95       	ret

0000353c <eeprom_mapen>:
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eerd_byte.S:83
    353c:	fc 01       	movw	r30, r24
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eerd_byte.S:84
    353e:	e0 50       	subi	r30, 0x00	; 0
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eerd_byte.S:85
    3540:	fc 4e       	sbci	r31, 0xEC	; 236
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eerd_byte.S:87
    3542:	08 95       	ret

00003544 <eeprom_write_byte>:
eeprom_write_byte():
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:42
    3544:	26 2f       	mov	r18, r22

00003546 <eeprom_write_r18>:
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:72
    3546:	af 93       	push	r26
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:73
    3548:	bf 93       	push	r27
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:77
    354a:	e0 e0       	ldi	r30, 0x00	; 0
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:78
    354c:	f0 e1       	ldi	r31, 0x10	; 16
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:81
    354e:	32 81       	ldd	r19, Z+2	; 0x02
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:82
    3550:	31 fd       	sbrc	r19, 1
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:83
    3552:	fd cf       	rjmp	.-6      	; 0x354e <eeprom_write_r18+0x8>
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:142
    3554:	dc 01       	movw	r26, r24
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:143
    3556:	a0 50       	subi	r26, 0x00	; 0
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:144
    3558:	bc 4e       	sbci	r27, 0xEC	; 236
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:145
    355a:	2c 93       	st	X, r18
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:151
    355c:	3d e9       	ldi	r19, 0x9D	; 157
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:152
    355e:	34 bf       	out	0x34, r19	; 52
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:156
    3560:	23 e0       	ldi	r18, 0x03	; 3
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:158
    3562:	20 83       	st	Z, r18
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:169
    3564:	01 96       	adiw	r24, 0x01	; 1
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:173
    3566:	bf 91       	pop	r27
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:174
    3568:	af 91       	pop	r26
/home/toolsbuild/workspace/avr8-devices-pack/src/avr-libc/avr/lib/avrxmega3/attiny1614/../../../../libc/misc/eewr_byte.S:177
    356a:	08 95       	ret

0000356c <__divmodsi4>:
__divmodsi4():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
    356c:	05 2e       	mov	r0, r21
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    356e:	97 fb       	bst	r25, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    3570:	16 f4       	brtc	.+4      	; 0x3576 <__divmodsi4+0xa>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    3572:	00 94       	com	r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    3574:	0f d0       	rcall	.+30     	; 0x3594 <__negsi2>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
    3576:	57 fd       	sbrc	r21, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    3578:	05 d0       	rcall	.+10     	; 0x3584 <__divmodsi4_neg2>
    357a:	24 d0       	rcall	.+72     	; 0x35c4 <__udivmodsi4>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    357c:	07 fc       	sbrc	r0, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    357e:	02 d0       	rcall	.+4      	; 0x3584 <__divmodsi4_neg2>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    3580:	46 f4       	brtc	.+16     	; 0x3592 <__divmodsi4_exit>
    3582:	08 c0       	rjmp	.+16     	; 0x3594 <__negsi2>

00003584 <__divmodsi4_neg2>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
    3584:	50 95       	com	r21
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    3586:	40 95       	com	r20
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    3588:	30 95       	com	r19
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    358a:	21 95       	neg	r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    358c:	3f 4f       	sbci	r19, 0xFF	; 255
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    358e:	4f 4f       	sbci	r20, 0xFF	; 255
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    3590:	5f 4f       	sbci	r21, 0xFF	; 255

00003592 <__divmodsi4_exit>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
    3592:	08 95       	ret

00003594 <__negsi2>:
__negsi2():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
    3594:	90 95       	com	r25
    3596:	80 95       	com	r24
    3598:	70 95       	com	r23
    359a:	61 95       	neg	r22
    359c:	7f 4f       	sbci	r23, 0xFF	; 255
    359e:	8f 4f       	sbci	r24, 0xFF	; 255
    35a0:	9f 4f       	sbci	r25, 0xFF	; 255
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    35a2:	08 95       	ret

000035a4 <__muluhisi3>:
__muluhisi3():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    35a4:	31 d0       	rcall	.+98     	; 0x3608 <__umulhisi3>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    35a6:	a5 9f       	mul	r26, r21
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    35a8:	90 0d       	add	r25, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    35aa:	b4 9f       	mul	r27, r20
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    35ac:	90 0d       	add	r25, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    35ae:	a4 9f       	mul	r26, r20
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    35b0:	80 0d       	add	r24, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    35b2:	91 1d       	adc	r25, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    35b4:	11 24       	eor	r1, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    35b6:	08 95       	ret

000035b8 <__mulshisi3>:
__mulshisi3():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:603
    35b8:	b7 ff       	sbrs	r27, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:605
    35ba:	f4 cf       	rjmp	.-24     	; 0x35a4 <__muluhisi3>

000035bc <__mulohisi3>:
__mulohisi3():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:613
    35bc:	f3 df       	rcall	.-26     	; 0x35a4 <__muluhisi3>
    35be:	82 1b       	sub	r24, r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:615
    35c0:	93 0b       	sbc	r25, r19
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:616
    35c2:	08 95       	ret

000035c4 <__udivmodsi4>:
__udivmodsi4():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:617
    35c4:	a1 e2       	ldi	r26, 0x21	; 33
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    35c6:	1a 2e       	mov	r1, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    35c8:	aa 1b       	sub	r26, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    35ca:	bb 1b       	sub	r27, r27
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    35cc:	fd 01       	movw	r30, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    35ce:	0d c0       	rjmp	.+26     	; 0x35ea <__udivmodsi4_ep>

000035d0 <__udivmodsi4_loop>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    35d0:	aa 1f       	adc	r26, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    35d2:	bb 1f       	adc	r27, r27
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    35d4:	ee 1f       	adc	r30, r30
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    35d6:	ff 1f       	adc	r31, r31
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    35d8:	a2 17       	cp	r26, r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    35da:	b3 07       	cpc	r27, r19
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    35dc:	e4 07       	cpc	r30, r20
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    35de:	f5 07       	cpc	r31, r21
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    35e0:	20 f0       	brcs	.+8      	; 0x35ea <__udivmodsi4_ep>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    35e2:	a2 1b       	sub	r26, r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    35e4:	b3 0b       	sbc	r27, r19
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    35e6:	e4 0b       	sbc	r30, r20
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    35e8:	f5 0b       	sbc	r31, r21

000035ea <__udivmodsi4_ep>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    35ea:	66 1f       	adc	r22, r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    35ec:	77 1f       	adc	r23, r23
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    35ee:	88 1f       	adc	r24, r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    35f0:	99 1f       	adc	r25, r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    35f2:	1a 94       	dec	r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    35f4:	69 f7       	brne	.-38     	; 0x35d0 <__udivmodsi4_loop>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    35f6:	60 95       	com	r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    35f8:	70 95       	com	r23
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    35fa:	80 95       	com	r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    35fc:	90 95       	com	r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    35fe:	9b 01       	movw	r18, r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    3600:	ac 01       	movw	r20, r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    3602:	bd 01       	movw	r22, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    3604:	cf 01       	movw	r24, r30
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    3606:	08 95       	ret

00003608 <__umulhisi3>:
__umulhisi3():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    3608:	a2 9f       	mul	r26, r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    360a:	b0 01       	movw	r22, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    360c:	b3 9f       	mul	r27, r19
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    360e:	c0 01       	movw	r24, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    3610:	a3 9f       	mul	r26, r19
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:573
    3612:	70 0d       	add	r23, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:574
    3614:	81 1d       	adc	r24, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:575
    3616:	11 24       	eor	r1, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:576
    3618:	91 1d       	adc	r25, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    361a:	b2 9f       	mul	r27, r18
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    361c:	70 0d       	add	r23, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    361e:	81 1d       	adc	r24, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    3620:	11 24       	eor	r1, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    3622:	91 1d       	adc	r25, r1
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    3624:	08 95       	ret

00003626 <__udivmodqi4>:
__udivmodqi4():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1346
    3626:	99 1b       	sub	r25, r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1347
    3628:	79 e0       	ldi	r23, 0x09	; 9
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1348
    362a:	04 c0       	rjmp	.+8      	; 0x3634 <__udivmodqi4_ep>

0000362c <__udivmodqi4_loop>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1350
    362c:	99 1f       	adc	r25, r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1351
    362e:	96 17       	cp	r25, r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1352
    3630:	08 f0       	brcs	.+2      	; 0x3634 <__udivmodqi4_ep>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1353
    3632:	96 1b       	sub	r25, r22

00003634 <__udivmodqi4_ep>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1355
    3634:	88 1f       	adc	r24, r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1356
    3636:	7a 95       	dec	r23
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1357
    3638:	c9 f7       	brne	.-14     	; 0x362c <__udivmodqi4_loop>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1358
    363a:	80 95       	com	r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1360
    363c:	08 95       	ret

0000363e <__udivmodhi4>:
__udivmodhi4():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1408
    363e:	aa 1b       	sub	r26, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    3640:	bb 1b       	sub	r27, r27
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    3642:	51 e1       	ldi	r21, 0x11	; 17
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    3644:	07 c0       	rjmp	.+14     	; 0x3654 <__udivmodhi4_ep>

00003646 <__udivmodhi4_loop>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    3646:	aa 1f       	adc	r26, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    3648:	bb 1f       	adc	r27, r27
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    364a:	a6 17       	cp	r26, r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    364c:	b7 07       	cpc	r27, r23
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    364e:	10 f0       	brcs	.+4      	; 0x3654 <__udivmodhi4_ep>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    3650:	a6 1b       	sub	r26, r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    3652:	b7 0b       	sbc	r27, r23

00003654 <__udivmodhi4_ep>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    3654:	88 1f       	adc	r24, r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    3656:	99 1f       	adc	r25, r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    3658:	5a 95       	dec	r21
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    365a:	a9 f7       	brne	.-22     	; 0x3646 <__udivmodhi4_loop>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    365c:	80 95       	com	r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    365e:	90 95       	com	r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    3660:	bc 01       	movw	r22, r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    3662:	cd 01       	movw	r24, r26
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    3664:	08 95       	ret

00003666 <__divmodhi4>:
__divmodhi4():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    3666:	97 fb       	bst	r25, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    3668:	07 2e       	mov	r0, r23
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    366a:	16 f4       	brtc	.+4      	; 0x3670 <__divmodhi4+0xa>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    366c:	00 94       	com	r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    366e:	06 d0       	rcall	.+12     	; 0x367c <__divmodhi4_neg1>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    3670:	77 fd       	sbrc	r23, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    3672:	08 d0       	rcall	.+16     	; 0x3684 <__divmodhi4_neg2>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    3674:	e4 df       	rcall	.-56     	; 0x363e <__udivmodhi4>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    3676:	07 fc       	sbrc	r0, 7
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    3678:	05 d0       	rcall	.+10     	; 0x3684 <__divmodhi4_neg2>
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    367a:	3e f4       	brtc	.+14     	; 0x368a <__divmodhi4_exit>

0000367c <__divmodhi4_neg1>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    367c:	90 95       	com	r25
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    367e:	81 95       	neg	r24
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    3680:	9f 4f       	sbci	r25, 0xFF	; 255
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    3682:	08 95       	ret

00003684 <__divmodhi4_neg2>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    3684:	70 95       	com	r23
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    3686:	61 95       	neg	r22
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    3688:	7f 4f       	sbci	r23, 0xFF	; 255

0000368a <__divmodhi4_exit>:
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    368a:	08 95       	ret

0000368c <__tablejump2__>:
__tablejump2__():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    368c:	ee 0f       	add	r30, r30
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    368e:	ff 1f       	adc	r31, r31
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2328
    3690:	05 90       	lpm	r0, Z+
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2329
    3692:	f4 91       	lpm	r31, Z
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2330
    3694:	e0 2d       	mov	r30, r0
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2331
    3696:	09 94       	ijmp

00003698 <memset>:
memset():
    3698:	dc 01       	movw	r26, r24
    369a:	01 c0       	rjmp	.+2      	; 0x369e <memset+0x6>
    369c:	6d 93       	st	X+, r22
    369e:	41 50       	subi	r20, 0x01	; 1
    36a0:	50 40       	sbci	r21, 0x00	; 0
    36a2:	e0 f7       	brcc	.-8      	; 0x369c <memset+0x4>
    36a4:	08 95       	ret

000036a6 <_exit>:
exit():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    36a6:	f8 94       	cli

000036a8 <__stop_program>:
__stop_program():
/home/admin/Arduino/toolchain-avr-special/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    36a8:	ff cf       	rjmp	.-2      	; 0x36a8 <__stop_program>
